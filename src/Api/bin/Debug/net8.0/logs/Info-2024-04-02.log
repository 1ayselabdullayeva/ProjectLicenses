{ "time": "2024-04-02 11:30:30.9830", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 11:30:32.4157", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 11:30:32.4228", "level": "INFO" }
{ "time": "2024-04-02 11:30:32.4228", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 11:30:32.4228", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 11:30:34.5305", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:30:34.9344", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 11:30:35.1968", "level": "INFO", "ElapsedMilliseconds": 677.851, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:30:35.2044", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:30:35.2044", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:30:35.2044", "level": "INFO", "ElapsedMilliseconds": 4.4096, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:30:35.3496", "level": "INFO", "ElapsedMilliseconds": 145.7553, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:30:35.4397", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:30:36.1081", "level": "INFO", "ElapsedMilliseconds": 668.332, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:30:56.9836", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 46, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:30:57.0006", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:30:57.2046", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:30:57.3246", "level": "INFO", "RouteData": "{action = \"ForgotPassword\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] ForgotPassword(Models.DTOs.User.ForgotPassword.ForgotPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:31:15.7710", "level": "INFO", "elapsed": "147", "parameters": "@__model_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__model_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:31:20.7368", "level": "INFO", "ActionName": "Api.Controllers.AuthController.ForgotPassword (Api)", "ElapsedMilliseconds": 23404.7603, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:31:20.7419", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:31:37.6847", "level": "ERROR" }
{ "time": "2024-04-02 11:31:41.2405", "level": "INFO", "ElapsedMilliseconds": 44256.9428, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:32:54.3166", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 46, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:32:57.4326", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:32:57.4349", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:32:57.4349", "level": "INFO", "RouteData": "{action = \"ForgotPassword\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] ForgotPassword(Models.DTOs.User.ForgotPassword.ForgotPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:32:58.2122", "level": "INFO", "elapsed": "3", "parameters": "@__model_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__model_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:33:20.9963", "level": "INFO", "StatusCode": 200, "EventId": 1, "EventName": "HttpStatusCodeResultExecuting" }
{ "time": "2024-04-02 11:33:20.9998", "level": "INFO", "ActionName": "Api.Controllers.AuthController.ForgotPassword (Api)", "ElapsedMilliseconds": 23564.1515, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:33:20.9998", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:33:24.1837", "level": "INFO", "ElapsedMilliseconds": 29867.1813, "StatusCode": 200, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:33:50.2275", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/account/reset-password/Models.DTOs.User.ForgotPassword.ForgotTokenDto", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:33:50.2521", "level": "INFO", "ElapsedMilliseconds": 24.4439, "StatusCode": 404, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/account/reset-password/Models.DTOs.User.ForgotPassword.ForgotTokenDto", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:33:50.2521", "level": "INFO", "Method": "GET", "Scheme": "http", "Host": {"Value":"localhost:5274", "HasValue":true, "Host":"localhost", "Port":5274}, "PathBase": {"Value":"", "HasValue":false}, "Path": {"Value":"/account/reset-password/Models.DTOs.User.ForgotPassword.ForgotTokenDto", "HasValue":true}, "StatusCode": 404, "EventId": 16 }
{ "time": "2024-04-02 11:34:18.0313", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:34:18.0313", "level": "INFO", "ElapsedMilliseconds": 13.1472, "StatusCode": 301, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:34:18.0473", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:34:18.0473", "level": "INFO", "ElapsedMilliseconds": 5.1018, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:34:18.0969", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/swagger-ui.css", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:36:52.7187", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/swagger-ui-bundle.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:36:54.7502", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/swagger-ui-standalone-preset.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:36:54.7502", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:36:54.7502", "level": "INFO", "ElapsedMilliseconds": 1.1489, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:36:54.7630", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:36:54.7630", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 46, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:36:54.7630", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:36:54.7630", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:36:54.7630", "level": "INFO", "RouteData": "{action = \"ForgotPassword\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] ForgotPassword(Models.DTOs.User.ForgotPassword.ForgotPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:36:55.8251", "level": "INFO", "ElapsedMilliseconds": 1062.1371, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:36:56.0587", "level": "INFO", "VirtualPath": "/swagger-ui.css", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" }
{ "time": "2024-04-02 11:36:56.5836", "level": "INFO", "VirtualPath": "/swagger-ui-standalone-preset.js", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" }
{ "time": "2024-04-02 11:36:56.5836", "level": "INFO", "ElapsedMilliseconds": 1834.2415, "StatusCode": 200, "ContentType": "text/javascript", "ContentLength": 339486, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/swagger-ui-standalone-preset.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:36:57.3147", "level": "INFO", "ElapsedMilliseconds": 159217.8272, "StatusCode": 200, "ContentType": "text/css", "ContentLength": 143943, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/swagger-ui.css", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:36:57.3697", "level": "INFO", "elapsed": "1", "parameters": "@__model_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__model_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:36:57.7414", "level": "INFO", "VirtualPath": "/swagger-ui-bundle.js", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" }
{ "time": "2024-04-02 11:36:57.7414", "level": "INFO", "ElapsedMilliseconds": 159613.7776, "StatusCode": 200, "ContentType": "text/javascript", "ContentLength": 1096145, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/swagger-ui-bundle.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:36:59.6891", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:36:59.6891", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/favicon-32x32.png", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:37:44.5144", "level": "INFO", "ElapsedMilliseconds": 44825.3594, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:39:27.5374", "level": "INFO", "VirtualPath": "/favicon-32x32.png", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" }
{ "time": "2024-04-02 11:39:52.3067", "level": "INFO", "ElapsedMilliseconds": 172617.4087, "StatusCode": 200, "ContentType": "image/png", "ContentLength": 628, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/favicon-32x32.png", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:14.9037", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:42:14.9315", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:42:15.0041", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:42:15.0138", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:42:15.0138", "level": "INFO", "ElapsedMilliseconds": 111.5128, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:15.0138", "level": "INFO", "ElapsedMilliseconds": 10.8714, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:15.0138", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:42:15.0138", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:42:15.0138", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:42:15.0138", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:42:15.0138", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:42:15.0138", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:42:15.0138", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:42:15.0138", "level": "INFO", "ElapsedMilliseconds": 0.4703, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:15.0138", "level": "INFO", "ElapsedMilliseconds": 1.0323, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:15.0138", "level": "INFO", "ElapsedMilliseconds": 1.0126, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:15.0138", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:42:15.0138", "level": "INFO", "ElapsedMilliseconds": 3.3119, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:15.3215", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:42:15.3215", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:42:15.3215", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:42:15.3215", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 64, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:42:15.3215", "level": "INFO", "ElapsedMilliseconds": 1.3796, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:15.3215", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:42:15.3215", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:42:15.3215", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:42:15.3271", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:42:15.3271", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:42:15.3271", "level": "INFO", "ElapsedMilliseconds": 7.2851, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:15.3271", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:42:15.3271", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:42:15.3271", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:42:15.4024", "level": "INFO", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:15.4376", "level": "INFO", "elapsed": "5", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:15.5203", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:42:15.5203", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:42:15.5203", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:42:15.5310", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:42:15.5792", "level": "INFO", "elapsed": "3", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:15.6076", "level": "INFO", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:15.6518", "level": "INFO", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:15.6627", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:42:15.6984", "level": "INFO", "elapsed": "4", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:15.7247", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:42:15.7358", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 204.4823, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:42:15.7358", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:42:15.7358", "level": "INFO", "ElapsedMilliseconds": 407.495, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:15.7358", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:42:15.7358", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:42:15.7358", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:42:15.7358", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:42:15.7585", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 232.2269, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:42:15.7585", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:42:15.7585", "level": "INFO", "ElapsedMilliseconds": 435.8387, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:15.7585", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:15.7894", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:15.8074", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:15.8142", "level": "INFO", "elapsed": "2", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:15.8142", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:15.8142", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:15.8306", "level": "INFO", "elapsed": "3", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:15.8306", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:15.8306", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:42:15.8306", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:42:15.8425", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:15.8425", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:42:15.8425", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:42:15.8425", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:15.8425", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:15.8588", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:15.8588", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:42:15.8588", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 17.4737, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:42:15.8588", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:42:15.8588", "level": "INFO", "ElapsedMilliseconds": 26.3364, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:15.8588", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:15.8588", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:42:15.8849", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 144.6279, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:42:15.8849", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:42:15.8849", "level": "INFO", "ElapsedMilliseconds": 148.933, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:16.0497", "level": "INFO", "elapsed": "7", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:16.0801", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:42:16.0801", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 743.2316, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:42:16.0801", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:42:16.0801", "level": "INFO", "ElapsedMilliseconds": 761.2529, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:16.2677", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:42:16.2677", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:42:16.2677", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:42:16.2677", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:42:16.2838", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:16.2838", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:16.2838", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:42:16.2838", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:42:16.2838", "level": "INFO", "ElapsedMilliseconds": 0.4559, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:16.3114", "level": "INFO", "elapsed": "2", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:16.3114", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:16.3114", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:16.3114", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:16.3275", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:16.3275", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:16.3275", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:16.3275", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:16.3406", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:16.3406", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:42:16.3406", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 71.9961, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:42:16.3406", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:42:16.3406", "level": "INFO", "ElapsedMilliseconds": 74.5607, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:16.6285", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:42:16.6285", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:42:16.6285", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:42:16.6285", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:42:16.6552", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:16.6552", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:42:16.6552", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 31.8862, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:42:16.6552", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:42:16.6552", "level": "INFO", "ElapsedMilliseconds": 36.8287, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:25.3980", "level": "INFO", "StatusCode": 200, "EventId": 1, "EventName": "HttpStatusCodeResultExecuting" }
{ "time": "2024-04-02 11:42:25.4115", "level": "INFO", "ActionName": "Api.Controllers.AuthController.ForgotPassword (Api)", "ElapsedMilliseconds": 330632.4103, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:42:25.4115", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:42:26.8152", "level": "INFO", "ElapsedMilliseconds": 332037.6619, "StatusCode": 200, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:52.7815", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:42:52.7815", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:42:52.7815", "level": "INFO", "ElapsedMilliseconds": 3.5285, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:54.1649", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:42:54.1711", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:42:54.1711", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:42:54.1711", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:42:54.1711", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:54.1955", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:42:54.1955", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:42:54.1955", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 24.149, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:42:54.1955", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:42:54.1955", "level": "INFO", "ElapsedMilliseconds": 36.8015, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:56.3029", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:42:58.7382", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:42:58.7382", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:42:58.7382", "level": "INFO", "ElapsedMilliseconds": 4.3682, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:59.3447", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:42:59.7451", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:42:59.7571", "level": "INFO", "ElapsedMilliseconds": 3454.3417, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:42:59.7571", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:42:59.7571", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:42:59.7647", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:42:59.7647", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:42:59.7647", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 3.5563, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:42:59.7647", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:42:59.7647", "level": "INFO", "ElapsedMilliseconds": 23.835, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:43:00.9451", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:43:00.9451", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:43:00.9451", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:43:00.9516", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:43:00.9516", "level": "INFO", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:43:00.9516", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:43:00.9691", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 17.4112, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:43:00.9691", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:43:00.9691", "level": "INFO", "ElapsedMilliseconds": 24.6122, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:44:02.7114", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:44:05.4753", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:44:05.9527", "level": "INFO", "ElapsedMilliseconds": 3241.4351, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:44:08.9802", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:44:08.9812", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:44:08.9812", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:44:08.9812", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:44:08.9812", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:44:08.9812", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.8612, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:44:08.9812", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:44:08.9812", "level": "INFO", "ElapsedMilliseconds": 2.786, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:44:13.0546", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:44:15.5397", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:44:15.5397", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:44:15.5397", "level": "INFO", "ElapsedMilliseconds": 1.4977, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:44:15.7411", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:44:15.7411", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:44:15.7411", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:44:15.7411", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:44:15.7411", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:44:15.7411", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.3367, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:44:15.7411", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:44:15.7411", "level": "INFO", "ElapsedMilliseconds": 2.4364, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:44:15.9388", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:44:16.3765", "level": "INFO", "ElapsedMilliseconds": 3321.9301, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:44:16.5584", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:44:16.5640", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:44:16.5640", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:44:16.5640", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:44:16.5640", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:44:16.5640", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.9348, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:44:16.5640", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:44:16.5640", "level": "INFO", "ElapsedMilliseconds": 9.0342, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:44:17.9599", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:44:17.9599", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:44:17.9599", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:44:17.9599", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:44:17.9599", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:44:17.9599", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.0541, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:44:17.9599", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:44:17.9599", "level": "INFO", "ElapsedMilliseconds": 5.3168, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:44:31.5841", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:44:31.5841", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:44:31.5841", "level": "INFO", "ElapsedMilliseconds": 1.0247, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:44:32.1108", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:44:32.1108", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:44:32.1108", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:44:32.1108", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:44:32.1108", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:44:32.1108", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.9505, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:44:32.1108", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:44:32.1108", "level": "INFO", "ElapsedMilliseconds": 4.8827, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:44:37.0164", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:44:37.0164", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:44:37.0164", "level": "INFO", "ElapsedMilliseconds": 1.8851, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:44:37.9341", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:44:37.9363", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:44:37.9363", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:44:37.9363", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:44:37.9363", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:44:37.9528", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:44:37.9528", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:44:37.9528", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:44:37.9677", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:44:37.9677", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:44:37.9677", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:44:37.9822", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:44:37.9822", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:44:37.9822", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:44:37.9972", "level": "INFO", "elapsed": "2", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:44:37.9972", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:44:37.9972", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 58.8752, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:44:37.9972", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:44:37.9972", "level": "INFO", "ElapsedMilliseconds": 66.1438, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:44:42.4685", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:44:42.4685", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:44:42.4685", "level": "INFO", "ElapsedMilliseconds": 1.1568, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:44:42.5855", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:44:45.1437", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:44:45.1437", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:44:45.1437", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:44:45.1437", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:44:45.1437", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:44:45.1437", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.7243, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:44:45.1437", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:44:45.1437", "level": "INFO", "ElapsedMilliseconds": 2563.685, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:44:50.5756", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:44:50.5756", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:44:50.5756", "level": "INFO", "ElapsedMilliseconds": 1.1109, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:44:51.8098", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:44:51.8098", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:44:51.8098", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:44:51.8098", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:44:51.8098", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:44:51.8098", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.1658, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:44:51.8098", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:44:51.8098", "level": "INFO", "ElapsedMilliseconds": 3.7779, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:45:00.6081", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 46, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:45:00.6081", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:45:00.6081", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:45:00.6081", "level": "INFO", "RouteData": "{action = \"ForgotPassword\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] ForgotPassword(Models.DTOs.User.ForgotPassword.ForgotPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:45:03.4737", "level": "INFO", "elapsed": "1", "parameters": "@__model_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__model_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:45:04.8081", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:45:04.8081", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:45:04.8081", "level": "INFO", "ElapsedMilliseconds": 0.5193, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:45:05.3275", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:45:05.3275", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:45:05.3275", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:45:05.3275", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:45:05.3275", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:45:05.3275", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.6768, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:45:05.3418", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:45:05.3418", "level": "INFO", "ElapsedMilliseconds": 14.6002, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:46:33.5516", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 11:46:33.7052", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 11:46:33.7094", "level": "INFO" }
{ "time": "2024-04-02 11:46:33.7094", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 11:46:33.7094", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 11:46:35.1669", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:46:35.4245", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 11:46:35.5425", "level": "INFO", "ElapsedMilliseconds": 379.7505, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:46:35.5540", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:46:35.5540", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:46:35.5540", "level": "INFO", "ElapsedMilliseconds": 14.9946, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:46:35.5996", "level": "INFO", "ElapsedMilliseconds": 39.9317, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:46:35.6469", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:46:35.9302", "level": "INFO", "ElapsedMilliseconds": 283.3833, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:46:52.6793", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 46, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:46:52.6793", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:46:52.7723", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:46:52.8034", "level": "INFO", "RouteData": "{action = \"ForgotPassword\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] ForgotPassword(Models.DTOs.User.ForgotPassword.ForgotPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:46:56.4479", "level": "INFO", "elapsed": "46", "parameters": "@__model_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__model_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:47:06.3013", "level": "INFO", "StatusCode": 200, "EventId": 1, "EventName": "HttpStatusCodeResultExecuting" }
{ "time": "2024-04-02 11:47:06.3013", "level": "INFO", "ActionName": "Api.Controllers.AuthController.ForgotPassword (Api)", "ElapsedMilliseconds": 13500.5671, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:47:06.3013", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:47:07.1624", "level": "INFO", "ElapsedMilliseconds": 14484.8699, "StatusCode": 200, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:48:53.9186", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 46, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:48:53.9186", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:48:53.9186", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:48:53.9186", "level": "INFO", "RouteData": "{action = \"ForgotPassword\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] ForgotPassword(Models.DTOs.User.ForgotPassword.ForgotPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:49:03.1640", "level": "INFO", "elapsed": "1", "parameters": "@__model_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__model_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:49:34.3101", "level": "INFO", "StatusCode": 200, "EventId": 1, "EventName": "HttpStatusCodeResultExecuting" }
{ "time": "2024-04-02 11:49:34.3101", "level": "INFO", "ActionName": "Api.Controllers.AuthController.ForgotPassword (Api)", "ElapsedMilliseconds": 40391.266, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:49:34.3101", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:49:34.3114", "level": "INFO", "ElapsedMilliseconds": 40398.0242, "StatusCode": 200, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:49:35.8301", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 46, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:49:35.8301", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:49:35.8301", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:49:35.8301", "level": "INFO", "RouteData": "{action = \"ForgotPassword\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] ForgotPassword(Models.DTOs.User.ForgotPassword.ForgotPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:49:38.6525", "level": "INFO", "elapsed": "1", "parameters": "@__model_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__model_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:49:57.3080", "level": "INFO", "StatusCode": 200, "EventId": 1, "EventName": "HttpStatusCodeResultExecuting" }
{ "time": "2024-04-02 11:49:57.3080", "level": "INFO", "ActionName": "Api.Controllers.AuthController.ForgotPassword (Api)", "ElapsedMilliseconds": 21472.1492, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:49:57.3080", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:49:58.0135", "level": "INFO", "ElapsedMilliseconds": 22186.3419, "StatusCode": 200, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:50:25.8457", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 52, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:50:28.2518", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:50:28.2518", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:50:28.2518", "level": "INFO", "RouteData": "{action = \"ForgotPassword\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] ForgotPassword(Models.DTOs.User.ForgotPassword.ForgotPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:50:28.7720", "level": "INFO", "elapsed": "1", "parameters": "@__model_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__model_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:50:29.1655", "level": "INFO", "ActionName": "Api.Controllers.AuthController.ForgotPassword (Api)", "ElapsedMilliseconds": 912.95, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:50:29.1655", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:50:30.5825", "level": "ERROR" }
{ "time": "2024-04-02 11:50:31.8049", "level": "INFO", "ElapsedMilliseconds": 5961.003, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:51:20.2753", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:51:20.2753", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:51:20.2753", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:51:26.2245", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:51:26.2245", "level": "INFO", "ElapsedMilliseconds": 5951.2959, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:51:26.4021", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:51:26.6301", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:51:26.6301", "level": "INFO", "ElapsedMilliseconds": 6366.2704, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:51:26.6459", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 64, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:51:26.6459", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:51:26.6459", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:51:26.6459", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:51:26.6761", "level": "INFO", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:51:26.6917", "level": "INFO", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:51:26.7162", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:51:26.7162", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:51:26.7333", "level": "INFO", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:51:26.7459", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:51:26.7582", "level": "INFO", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:51:26.7784", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:51:26.7816", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 64.0877, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:51:26.7816", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:51:26.7816", "level": "INFO", "ElapsedMilliseconds": 388.1945, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:51:26.8142", "level": "INFO", "elapsed": "2", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:51:26.8142", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:51:26.8142", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 167.2028, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:51:26.8142", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:51:26.8142", "level": "INFO", "ElapsedMilliseconds": 174.8488, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:51:26.8361", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:51:26.8361", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:51:26.8361", "level": "INFO", "ElapsedMilliseconds": 0.3699, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:51:26.8474", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:51:26.8474", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:51:26.8474", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:51:26.8474", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:51:26.8593", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:51:26.8593", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:51:26.8593", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 11.0786, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:51:26.8593", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:51:26.8593", "level": "INFO", "ElapsedMilliseconds": 15.0409, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:51:35.8234", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:51:35.8267", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:51:35.8267", "level": "INFO", "ElapsedMilliseconds": 3.7171, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:51:35.8267", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:51:40.9764", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:51:40.9764", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:51:40.9764", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:51:40.9764", "level": "INFO", "ElapsedMilliseconds": 1.5598, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:51:40.9841", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:51:40.9841", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:51:40.9841", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:51:40.9841", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:51:40.9841", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:51:40.9841", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:51:40.9841", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:51:40.9841", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 6.237, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:51:40.9841", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:51:40.9841", "level": "INFO", "ElapsedMilliseconds": 7.7587, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:51:40.9841", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:51:41.0156", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:51:41.0245", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 38.9076, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:51:41.0245", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:51:41.0245", "level": "INFO", "ElapsedMilliseconds": 5187.9856, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:53:54.4319", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:53:54.4367", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:53:54.4367", "level": "INFO", "ElapsedMilliseconds": 6.304, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:53:54.4589", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 83, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:53:54.4589", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:53:54.4589", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:53:54.4589", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Int32, Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:53:54.4897", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:53:54.4897", "level": "INFO", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 34.9896, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:53:54.4897", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:53:54.4897", "level": "INFO", "ElapsedMilliseconds": 43.1053, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:54:34.6412", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:54:34.6412", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:54:34.6412", "level": "INFO", "ElapsedMilliseconds": 1.6643, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:54:34.6533", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:54:34.6533", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:54:34.6533", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:54:34.6533", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:54:34.6533", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:54:34.6533", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.9687, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:54:34.6533", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:54:34.6533", "level": "INFO", "ElapsedMilliseconds": 2.1698, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:54:42.6300", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:54:42.6312", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:54:42.6312", "level": "INFO", "ElapsedMilliseconds": 1.5066, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:54:42.6312", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:54:42.6312", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:54:42.6312", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:54:42.6312", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:54:42.6312", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:54:42.6312", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.4013, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:54:42.6312", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:54:42.6312", "level": "INFO", "ElapsedMilliseconds": 3.3063, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:55:04.6444", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:55:04.6444", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:55:04.6444", "level": "INFO", "ElapsedMilliseconds": 1.1987, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:55:04.6612", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:55:04.6612", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:55:04.6612", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:55:04.6612", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:55:04.6612", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:55:04.6612", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.5961, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:55:04.6612", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:55:04.6612", "level": "INFO", "ElapsedMilliseconds": 5.0401, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:55:07.6300", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:55:07.6300", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:55:07.6300", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:55:07.6300", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:55:07.6300", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:55:07.6300", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.6175, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:55:07.6300", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:55:07.6300", "level": "INFO", "ElapsedMilliseconds": 2.4644, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:55:16.6312", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:55:16.6312", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:55:16.6312", "level": "INFO", "ElapsedMilliseconds": 1.2518, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:55:16.6312", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:55:16.6312", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:55:16.6312", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:55:16.6312", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:55:16.6312", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:55:16.6312", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.7529, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:55:16.6312", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:55:16.6312", "level": "INFO", "ElapsedMilliseconds": 1.7544, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:55:20.6331", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:55:20.6331", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:55:20.6331", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:55:20.6331", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:55:20.6331", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:55:20.6331", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.7352, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:55:20.6331", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:55:20.6331", "level": "INFO", "ElapsedMilliseconds": 2.4245, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:55:21.6261", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:55:21.6261", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:55:21.6261", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:55:21.6261", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:55:21.6261", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:55:21.6261", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.7942, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:55:21.6261", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:55:21.6261", "level": "INFO", "ElapsedMilliseconds": 2.202, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:55:23.6206", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:55:23.6212", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:55:23.6212", "level": "INFO", "ElapsedMilliseconds": 0.9484, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:55:23.6212", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:55:23.6212", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:55:23.6212", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:55:23.6212", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:55:23.6212", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:55:23.6212", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.4275, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:55:23.6212", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:55:23.6212", "level": "INFO", "ElapsedMilliseconds": 2.6382, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:55:37.6495", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:55:37.6495", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:55:37.6495", "level": "INFO", "ElapsedMilliseconds": 0.8769, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:55:37.6750", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:55:37.6750", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:55:37.6750", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:55:37.6750", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:55:37.6750", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:55:37.6750", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.4123, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:55:37.6750", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:55:37.6750", "level": "INFO", "ElapsedMilliseconds": 1.0642, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:55:40.6208", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:55:40.6224", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:55:40.6224", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:55:40.6233", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:55:40.6233", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:55:40.6233", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.1187, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:55:40.6233", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:55:40.6233", "level": "INFO", "ElapsedMilliseconds": 4.0344, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:56:07.5179", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:56:07.5179", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:56:07.5179", "level": "INFO", "ElapsedMilliseconds": 8.6686, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:56:07.5283", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:56:07.5283", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:56:07.5283", "level": "INFO", "ElapsedMilliseconds": 1.2307, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:56:07.5283", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 64, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:56:07.5283", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:56:07.5283", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:56:07.5283", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:56:07.5461", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:56:07.5461", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:56:07.5461", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:56:07.5461", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:56:07.5461", "level": "INFO", "elapsed": "3", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:56:07.5592", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:56:07.5592", "level": "INFO", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:56:07.5592", "level": "INFO", "elapsed": "2", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:56:07.5592", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:56:07.5592", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 29.4071, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:56:07.5592", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:56:07.5592", "level": "INFO", "ElapsedMilliseconds": 30.3029, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:56:07.5895", "level": "INFO", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:56:07.5895", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:56:07.5895", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:56:07.5895", "level": "INFO", "ElapsedMilliseconds": 0.2743, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:56:07.5895", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:56:07.5895", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:56:07.5895", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 54.2192, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:56:07.5895", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:56:07.5895", "level": "INFO", "ElapsedMilliseconds": 55.9403, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:56:07.6065", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:56:07.6065", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:56:07.6065", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:56:07.6065", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:56:07.6065", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:56:07.6065", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:56:07.6065", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 10.4782, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:56:07.6065", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:56:07.6065", "level": "INFO", "ElapsedMilliseconds": 11.6378, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:56:12.7315", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:56:12.7315", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:56:12.7315", "level": "INFO", "ElapsedMilliseconds": 0.6299, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:56:12.7507", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:56:12.7507", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:56:12.7507", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:56:12.7507", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:56:12.7614", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:56:12.7614", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:56:12.7764", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:56:12.7764", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:56:12.7764", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:56:12.7764", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:56:12.7764", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:56:12.7764", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:56:12.7764", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:56:12.7764", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:56:12.7917", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:56:12.7917", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:56:12.7917", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 41.903, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:56:12.7917", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:56:12.7917", "level": "INFO", "ElapsedMilliseconds": 44.8808, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:56:15.0772", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:56:15.0772", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:56:15.0772", "level": "INFO", "ElapsedMilliseconds": 0.8391, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:56:15.0772", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:56:15.0772", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:56:15.0772", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:56:15.0772", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:56:15.0904", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 11:56:15.0904", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:56:15.0904", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 4.5594, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:56:15.0904", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:56:15.0904", "level": "INFO", "ElapsedMilliseconds": 5.7639, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:56:16.3464", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:56:16.3464", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:56:16.3464", "level": "INFO", "ElapsedMilliseconds": 1.0014, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:56:16.3629", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:56:16.3629", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:56:16.3629", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:56:16.3629", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:56:16.3629", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:56:16.3629", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.3036, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:56:16.3629", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:56:16.3629", "level": "INFO", "ElapsedMilliseconds": 2.7093, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:58:14.6055", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:58:14.6070", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:58:14.6070", "level": "INFO", "ElapsedMilliseconds": 4.0117, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:58:14.6288", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:58:14.6288", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:58:14.6288", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:58:14.6288", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:58:14.6288", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:58:14.6288", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.9945, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:58:14.6288", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:58:14.6288", "level": "INFO", "ElapsedMilliseconds": 2.1634, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:58:23.6157", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:58:23.6157", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:58:23.6157", "level": "INFO", "ElapsedMilliseconds": 0.9616, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:58:23.6376", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:58:23.6376", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:58:23.6376", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:58:23.6376", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:58:23.6376", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:58:23.6376", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.6439, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:58:23.6376", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:58:23.6376", "level": "INFO", "ElapsedMilliseconds": 1.5249, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:58:34.6024", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:58:34.6024", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:58:34.6024", "level": "INFO", "ElapsedMilliseconds": 0.5986, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:58:34.6024", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:58:34.6024", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:58:34.6024", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:58:34.6024", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:58:34.6024", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:58:34.6024", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.7592, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:58:34.6024", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:58:34.6024", "level": "INFO", "ElapsedMilliseconds": 2.0106, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:58:47.6956", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:58:47.6956", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:58:47.6956", "level": "INFO", "ElapsedMilliseconds": 1.1251, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:58:47.6956", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:58:47.6956", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:58:47.6956", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:58:47.7088", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:58:47.7088", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:58:47.7088", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.1086, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:58:47.7088", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:58:47.7088", "level": "INFO", "ElapsedMilliseconds": 2.2818, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:59:17.5878", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:59:17.5878", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:59:17.5878", "level": "INFO", "ElapsedMilliseconds": 1.338, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:59:17.6075", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:59:17.6075", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:59:17.6075", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:59:17.6075", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:59:17.6075", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:59:17.6075", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 3.2615, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:59:17.6075", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:59:17.6121", "level": "INFO", "ElapsedMilliseconds": 4.6857, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:59:23.6105", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:59:23.6147", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:59:23.6147", "level": "INFO", "ElapsedMilliseconds": 4.4494, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:59:23.6147", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:59:23.6147", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:59:23.6147", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:59:23.6147", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:59:23.6306", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:59:23.6306", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.1675, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:59:23.6306", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:59:23.6306", "level": "INFO", "ElapsedMilliseconds": 2.4743, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:59:32.6064", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:59:32.6064", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:59:32.6064", "level": "INFO", "ElapsedMilliseconds": 1.466, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:59:32.6155", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:59:32.6155", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:59:32.6155", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:59:32.6155", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:59:32.6155", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:59:32.6155", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.9783, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:59:32.6155", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:59:32.6155", "level": "INFO", "ElapsedMilliseconds": 2.1832, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:59:33.6053", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:59:33.6058", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:59:33.6058", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:59:33.6058", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:59:33.6058", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:59:33.6058", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.9684, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:59:33.6058", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:59:33.6058", "level": "INFO", "ElapsedMilliseconds": 2.1666, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:59:36.5880", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:59:36.5891", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:59:36.5891", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:59:36.5891", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:59:36.5891", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:59:36.5891", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.9763, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:59:36.5891", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:59:36.5891", "level": "INFO", "ElapsedMilliseconds": 3.1269, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:59:39.6085", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:59:39.6094", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:59:39.6094", "level": "INFO", "ElapsedMilliseconds": 1.3072, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:59:39.6094", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:59:39.6094", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:59:39.6094", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:59:39.6094", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:59:39.6094", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:59:39.6094", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.1892, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:59:39.6094", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:59:39.6094", "level": "INFO", "ElapsedMilliseconds": 2.2434, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:59:58.6393", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:59:58.6393", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:59:58.6819", "level": "INFO", "ElapsedMilliseconds": 41.6094, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 11:59:58.7009", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 11:59:58.7009", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 11:59:58.7009", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 11:59:58.7009", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 11:59:58.7009", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 11:59:58.7009", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.7703, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 11:59:58.7009", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 11:59:58.7009", "level": "INFO", "ElapsedMilliseconds": 1.528, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:00:00.5923", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:00:00.5931", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:00:00.5931", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:00:00.5931", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:00:00.5931", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:00:00.5931", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.7349, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:00:00.5931", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:00:00.5931", "level": "INFO", "ElapsedMilliseconds": 2.0976, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:00:04.5954", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:00:04.5954", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:00:04.5954", "level": "INFO", "ElapsedMilliseconds": 1.0312, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:00:04.6253", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:00:04.6253", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:00:04.6253", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:00:04.6253", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:00:04.6253", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:00:04.6253", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.6613, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:00:04.6253", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:00:04.6253", "level": "INFO", "ElapsedMilliseconds": 1.5371, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:00:06.5910", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:00:06.5927", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:00:06.5927", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:00:06.5927", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:00:06.5927", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:00:06.5927", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.3567, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:00:06.5927", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:00:06.5927", "level": "INFO", "ElapsedMilliseconds": 2.5752, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:00:08.2776", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:00:08.2776", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:00:08.2776", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:00:08.2776", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:00:08.2776", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:00:08.2776", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.4416, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:00:08.2776", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:00:08.2776", "level": "INFO", "ElapsedMilliseconds": 1.2237, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:00:32.1767", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:00:32.1795", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:00:32.1795", "level": "INFO", "ElapsedMilliseconds": 2.87, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:00:32.1795", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:00:32.1795", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:00:32.1795", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:00:32.1795", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:00:32.1795", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:00:32.1795", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.6173, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:00:32.1795", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:00:32.1795", "level": "INFO", "ElapsedMilliseconds": 1.2311, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:01:00.3374", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 12:01:00.5022", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 12:01:00.5022", "level": "INFO" }
{ "time": "2024-04-02 12:01:00.5022", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 12:01:00.5022", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 12:01:01.6135", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:01:01.7257", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 12:01:01.7929", "level": "INFO", "ElapsedMilliseconds": 185.5425, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:01:01.8103", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:01:01.8103", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:01:01.8186", "level": "INFO", "ElapsedMilliseconds": 8.9692, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:01:02.3319", "level": "INFO", "ElapsedMilliseconds": 521.4744, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:01:02.3852", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:01:02.5819", "level": "INFO", "ElapsedMilliseconds": 196.841, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:02:04.1113", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 182, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/User/AddUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:02:04.1263", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:02:04.1981", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.AddUser (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:02:04.2364", "level": "INFO", "RouteData": "{action = \"AddUser\", controller = \"User\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddUser(Models.DTOs.User.Create.UserCreateDto)", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:02:05.5892", "level": "INFO", "elapsed": "80", "parameters": "@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:02:05.6583", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Create.UserCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:02:05.6692", "level": "INFO", "ActionName": "Api.Controllers.UserController.AddUser (Api)", "ElapsedMilliseconds": 1428.7655, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:02:05.6692", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.AddUser (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:02:05.6816", "level": "INFO", "ElapsedMilliseconds": 1570.5443, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/User/AddUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:02:07.6383", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:02:07.6383", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:02:07.6383", "level": "INFO", "ElapsedMilliseconds": 5.6006, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:02:07.6531", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:02:07.6531", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:02:07.7235", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:02:07.7235", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:02:07.7807", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:02:07.7807", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 55.6443, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:02:07.7807", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:02:07.7807", "level": "INFO", "ElapsedMilliseconds": 129.065, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:02:08.5824", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:02:08.5824", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:02:08.5890", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:02:08.5895", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:02:08.5895", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:02:08.5895", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 12.1915, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:02:08.5895", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:02:08.5895", "level": "INFO", "ElapsedMilliseconds": 19.7768, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:02:17.5904", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:02:17.5904", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:02:17.5904", "level": "INFO", "ElapsedMilliseconds": 1.8987, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:02:17.5904", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:02:17.5904", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:02:17.6082", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:02:17.6082", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:02:17.6082", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:02:17.6082", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 5.6029, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:02:17.6082", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:02:17.6082", "level": "INFO", "ElapsedMilliseconds": 7.3215, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:02:20.6267", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:02:20.6293", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:02:20.6293", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:02:20.6293", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:02:20.6293", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:02:20.6293", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.1311, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:02:20.6293", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:02:20.6293", "level": "INFO", "ElapsedMilliseconds": 5.0457, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:02:28.5750", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:02:28.5750", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:02:28.5750", "level": "INFO", "ElapsedMilliseconds": 1.6691, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:02:28.6471", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:02:28.6471", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:02:28.6471", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:02:28.6471", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:02:28.6471", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:02:28.6471", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.7486, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:02:28.6471", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:02:28.6471", "level": "INFO", "ElapsedMilliseconds": 1.8383, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:02:40.5924", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:02:40.5924", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:02:40.5924", "level": "INFO", "ElapsedMilliseconds": 1.9337, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:02:40.5924", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:02:40.5924", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:02:40.5924", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:02:40.5924", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:02:40.5924", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:02:40.5924", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.5739, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:02:40.5924", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:02:40.5924", "level": "INFO", "ElapsedMilliseconds": 1.471, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:02:57.6619", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:02:57.6619", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:02:57.6619", "level": "INFO", "ElapsedMilliseconds": 1.1906, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:02:57.7885", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:02:57.7885", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:02:57.7885", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:02:57.7885", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:02:57.7885", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:02:57.7900", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.7897, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:02:57.7900", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:02:57.7900", "level": "INFO", "ElapsedMilliseconds": 1.7367, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:02:59.7128", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:02:59.7128", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:02:59.7128", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:02:59.7128", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:02:59.7128", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:02:59.7128", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.8564, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:02:59.7128", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:02:59.7128", "level": "INFO", "ElapsedMilliseconds": 4.1195, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:03:01.6480", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:03:01.6480", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:03:01.6480", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:03:01.6480", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:03:01.6480", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:03:01.6480", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.9485, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:03:01.6480", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:03:01.6480", "level": "INFO", "ElapsedMilliseconds": 3.6417, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:03:02.5863", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:03:02.5863", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:03:02.5863", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:03:02.5863", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:03:02.5863", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:03:02.5863", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.6912, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:03:02.5863", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:03:02.5863", "level": "INFO", "ElapsedMilliseconds": 1.5772, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:03:20.5857", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:03:20.5857", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:03:20.5857", "level": "INFO", "ElapsedMilliseconds": 1.349, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:03:20.8171", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:03:20.8171", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:03:20.8171", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:03:20.8171", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:03:20.8171", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:03:20.8171", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.4749, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:03:20.8171", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:03:20.8171", "level": "INFO", "ElapsedMilliseconds": 2.7654, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:03:22.6383", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:03:22.6383", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:03:22.6383", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:03:22.6450", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:03:22.6450", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:03:22.6450", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.5102, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:03:22.6450", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:03:22.6450", "level": "INFO", "ElapsedMilliseconds": 9.6817, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:03:25.5962", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:03:25.5965", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:03:25.5965", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:03:25.5965", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:03:25.5965", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:03:25.5965", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.4469, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:03:25.5965", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:03:25.5965", "level": "INFO", "ElapsedMilliseconds": 1.4023, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:03:31.6583", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:03:31.6583", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:03:31.6583", "level": "INFO", "ElapsedMilliseconds": 0.9001, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:03:31.7869", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:03:31.7869", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:03:31.7869", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:03:31.7869", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:03:31.7869", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:03:31.7869", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.5906, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:03:31.7869", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:03:31.7869", "level": "INFO", "ElapsedMilliseconds": 1.3561, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:03:32.5850", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:03:32.5850", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:03:32.5850", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:03:32.5850", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:03:32.5850", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:03:32.5850", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.8871, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:03:32.5850", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:03:32.5850", "level": "INFO", "ElapsedMilliseconds": 2.2406, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:03:35.5731", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:03:35.5731", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:03:35.5731", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:03:35.5731", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:03:35.5731", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:03:35.5731", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.4898, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:03:35.5731", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:03:35.5731", "level": "INFO", "ElapsedMilliseconds": 4.2797, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:03:38.6413", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:03:38.6413", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:03:38.6422", "level": "INFO", "ElapsedMilliseconds": 0.9608, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:03:38.9685", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:03:38.9685", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:03:38.9685", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:03:38.9698", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:03:38.9710", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:03:38.9710", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.4209, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:03:38.9710", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:03:38.9710", "level": "INFO", "ElapsedMilliseconds": 3.0788, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:03:48.6226", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:03:48.6226", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:03:48.6226", "level": "INFO", "ElapsedMilliseconds": 1.7801, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:03:48.8015", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:03:48.8015", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:03:48.8015", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:03:48.8015", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:03:48.8015", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:03:48.8015", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.9465, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:03:48.8015", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:03:48.8015", "level": "INFO", "ElapsedMilliseconds": 1.9019, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:03:51.6605", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:03:51.6605", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:03:51.6605", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:03:51.6605", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:03:51.6605", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:03:51.6605", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.2664, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:03:51.6605", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:03:51.6605", "level": "INFO", "ElapsedMilliseconds": 4.3587, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:04:17.6508", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:04:17.6547", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:04:17.6547", "level": "INFO", "ElapsedMilliseconds": 9.1907, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:04:17.8965", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:04:17.8965", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:04:17.8965", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:04:17.8965", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:04:17.8965", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:04:17.8965", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.9382, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:04:17.8965", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:04:17.8965", "level": "INFO", "ElapsedMilliseconds": 1.8294, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:04:20.5862", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:04:20.5862", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:04:20.5862", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:04:20.5862", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:04:20.5862", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:04:20.5862", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.6358, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:04:20.5862", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:04:20.5862", "level": "INFO", "ElapsedMilliseconds": 2.1232, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:04:25.9381", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:04:25.9381", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:04:25.9381", "level": "INFO", "ElapsedMilliseconds": 0.8091, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:04:26.1551", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:04:26.1551", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:04:26.1551", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:04:26.1551", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:04:26.1551", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:04:26.1551", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.1535, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:04:26.1551", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:04:26.1551", "level": "INFO", "ElapsedMilliseconds": 2.2929, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:04:28.8394", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:04:28.8394", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:04:28.8407", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:04:28.8407", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:04:28.8407", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:04:28.8407", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.2597, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:04:28.8407", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:04:28.8407", "level": "INFO", "ElapsedMilliseconds": 3.0376, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:04:56.6785", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:04:56.6829", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:04:56.6829", "level": "INFO", "ElapsedMilliseconds": 5.9947, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:04:56.7285", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:04:56.7285", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:04:56.7291", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:04:56.7291", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:04:56.7291", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:04:56.7291", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.6952, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:04:56.7291", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:04:56.7291", "level": "INFO", "ElapsedMilliseconds": 1.8105, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:04:59.6506", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:04:59.6506", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:04:59.6506", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:04:59.6506", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:04:59.6506", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:04:59.6506", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.7886, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:04:59.6506", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:04:59.6506", "level": "INFO", "ElapsedMilliseconds": 2.5639, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:05:03.5769", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:05:03.5769", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:05:03.5769", "level": "INFO", "ElapsedMilliseconds": 1.0609, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:05:04.0884", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:05:04.0884", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:05:04.0884", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:05:04.0884", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:05:04.0884", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:05:04.0884", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.7569, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:05:04.0884", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:05:04.0884", "level": "INFO", "ElapsedMilliseconds": 1.723, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:05:12.6023", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:05:12.6023", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:05:12.6023", "level": "INFO", "ElapsedMilliseconds": 5.7635, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:05:12.6568", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:05:12.6568", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:05:12.6568", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:05:12.6568", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:05:12.6568", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:05:12.6568", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.1421, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:05:12.6568", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:05:12.6568", "level": "INFO", "ElapsedMilliseconds": 2.1024, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:05:14.6017", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:05:14.6197", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:05:14.6197", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:05:14.6197", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:05:14.6197", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:05:14.6197", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.8214, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:05:14.6197", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:05:14.6197", "level": "INFO", "ElapsedMilliseconds": 19.4783, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:05:29.5523", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:05:29.5523", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:05:29.5523", "level": "INFO", "ElapsedMilliseconds": 1.0929, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:05:29.5608", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:05:29.5608", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:05:29.5608", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:05:29.5608", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:05:29.5608", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:05:29.5608", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 3.9439, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:05:29.5608", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:05:29.5608", "level": "INFO", "ElapsedMilliseconds": 6.0675, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:05:36.5757", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:05:36.5757", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:05:36.5757", "level": "INFO", "ElapsedMilliseconds": 1.4139, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:05:36.5757", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:05:36.5757", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:05:36.5757", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:05:36.5757", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:05:36.5757", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:05:36.5757", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.2477, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:05:36.5757", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:05:36.5757", "level": "INFO", "ElapsedMilliseconds": 1.9388, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:05:39.6782", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:05:39.6782", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:05:39.6782", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:05:39.6782", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:05:39.6782", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:05:39.6782", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.7302, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:05:39.6782", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:05:39.6782", "level": "INFO", "ElapsedMilliseconds": 4.8712, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:05:42.5600", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:05:42.5606", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:05:42.5606", "level": "INFO", "ElapsedMilliseconds": 0.7837, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:05:42.5814", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:05:42.5814", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:05:42.5814", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:05:42.5814", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:05:42.5814", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:05:42.5814", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.5491, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:05:42.5814", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:05:42.5814", "level": "INFO", "ElapsedMilliseconds": 1.2265, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:05:44.5670", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:05:44.5670", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:05:44.5678", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:05:44.5678", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:05:44.5678", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:05:44.5678", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.4954, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:05:44.5678", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:05:44.5678", "level": "INFO", "ElapsedMilliseconds": 1.548, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:05:45.5672", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:05:45.5672", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:05:45.5672", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:05:45.5672", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:05:45.5672", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:05:45.5672", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.4014, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:05:45.5672", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:05:45.5672", "level": "INFO", "ElapsedMilliseconds": 0.8293, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:05:47.6007", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:05:47.6007", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:05:47.6007", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:05:47.6007", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:05:47.6007", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:05:47.6007", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.4502, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:05:47.6007", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:05:47.6007", "level": "INFO", "ElapsedMilliseconds": 1.4499, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:05:50.5541", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:05:50.5541", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:05:50.5541", "level": "INFO", "ElapsedMilliseconds": 0.6922, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:05:50.5541", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:05:50.5541", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:05:50.5541", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:05:50.5541", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:05:50.5541", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:05:50.5541", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.3372, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:05:50.5541", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:05:50.5541", "level": "INFO", "ElapsedMilliseconds": 0.8341, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:06:10.4787", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:06:10.4809", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:06:10.4809", "level": "INFO", "ElapsedMilliseconds": 2.3092, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:06:10.4809", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:06:10.4809", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:06:10.4809", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:06:10.4809", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:06:10.4809", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:06:10.4809", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.4833, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:06:10.4809", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:06:10.4809", "level": "INFO", "ElapsedMilliseconds": 1.0868, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:01.5420", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 12:17:01.7319", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 12:17:01.7319", "level": "INFO" }
{ "time": "2024-04-02 12:17:01.7319", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 12:17:01.7319", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 12:17:02.6576", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:02.7984", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 12:17:02.8800", "level": "INFO", "ElapsedMilliseconds": 226.7477, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:02.8922", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:02.8922", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:02.8922", "level": "INFO", "ElapsedMilliseconds": 3.7092, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:02.9245", "level": "INFO", "ElapsedMilliseconds": 29.4212, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:02.9760", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:03.2007", "level": "INFO", "ElapsedMilliseconds": 220.8579, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:03.4992", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:03.4992", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:17:03.4992", "level": "INFO", "ElapsedMilliseconds": 4.4458, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:03.5269", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:03.5269", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:17:03.5269", "level": "INFO", "ElapsedMilliseconds": 2.1667, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:03.5269", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:03.5269", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:17:03.6278", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:17:03.6418", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:17:04.5161", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:17:04.5235", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 877.838, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:17:04.5235", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:17:04.5235", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:04.5235", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:17:04.5235", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:17:04.5235", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:17:04.5235", "level": "INFO", "ElapsedMilliseconds": 996.1063, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:04.5709", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:17:04.5709", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 42.0737, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:17:04.5709", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:17:04.5709", "level": "INFO", "ElapsedMilliseconds": 47.9111, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:06.4930", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:06.4930", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:17:06.4930", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:17:06.4930", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:17:06.5183", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:17:06.5213", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 21.4928, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:17:06.5213", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:17:06.5213", "level": "INFO", "ElapsedMilliseconds": 28.9046, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:10.5248", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:10.5248", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:17:10.5248", "level": "INFO", "ElapsedMilliseconds": 1.7172, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:10.5248", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:10.5248", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:17:10.5248", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:17:10.5248", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:17:10.5248", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:17:10.5248", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.7827, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:17:10.5248", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:17:10.5248", "level": "INFO", "ElapsedMilliseconds": 3.4318, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:13.5054", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:13.5054", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:17:13.5054", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:17:13.5054", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:17:13.5054", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:17:13.5054", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.0769, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:17:13.5054", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:17:13.5054", "level": "INFO", "ElapsedMilliseconds": 3.8081, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:14.5081", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:14.5081", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:17:14.5081", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:17:14.5081", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:17:14.5081", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:17:14.5081", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.5007, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:17:14.5081", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:17:14.5081", "level": "INFO", "ElapsedMilliseconds": 4.072, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:19.5120", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 46, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:19.5120", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:17:19.5120", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:17:19.5297", "level": "INFO", "RouteData": "{action = \"ForgotPassword\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] ForgotPassword(Models.DTOs.User.ForgotPassword.ForgotPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:17:20.0109", "level": "INFO", "elapsed": "58", "parameters": "@__model_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__model_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:17:20.1247", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[DataAccess.Repositories.JWTManagerRepository+<ForgotPassword>d__10, DataAccess, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:17:20.1321", "level": "INFO", "ActionName": "Api.Controllers.AuthController.ForgotPassword (Api)", "ElapsedMilliseconds": 602.315, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:17:20.1321", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:17:20.1735", "level": "ERROR" }
{ "time": "2024-04-02 12:17:20.2857", "level": "INFO", "ElapsedMilliseconds": 773.7938, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:22.4994", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:22.4994", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:17:22.4994", "level": "INFO", "ElapsedMilliseconds": 1.3029, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:22.5074", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:22.5074", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:17:22.5074", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:17:22.5074", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:17:22.5074", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:17:22.5074", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.9911, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:17:22.5074", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:17:22.5074", "level": "INFO", "ElapsedMilliseconds": 3.3303, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:32.4997", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:32.4997", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:17:32.4997", "level": "INFO", "ElapsedMilliseconds": 2.0931, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:32.5146", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:32.5146", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:17:32.5146", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:17:32.5146", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:17:32.5146", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:17:32.5146", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.8679, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:17:32.5146", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:17:32.5146", "level": "INFO", "ElapsedMilliseconds": 2.6497, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:44.5129", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:44.5129", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:17:44.5129", "level": "INFO", "ElapsedMilliseconds": 1.1031, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:44.5452", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:44.5452", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:17:44.5452", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:17:44.5452", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:17:44.5452", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:17:44.5452", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.9452, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:17:44.5452", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:17:44.5452", "level": "INFO", "ElapsedMilliseconds": 1.9527, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:47.4961", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:47.4961", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:17:47.4961", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:17:47.4961", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:17:47.4961", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:17:47.4961", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.5512, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:17:47.4961", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:17:47.4961", "level": "INFO", "ElapsedMilliseconds": 2.0131, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:53.4938", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:53.4938", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:17:53.4938", "level": "INFO", "ElapsedMilliseconds": 1.6135, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:17:53.4938", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:17:53.4938", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:17:53.4938", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:17:53.4938", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:17:53.4938", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:17:53.4938", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.8705, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:17:53.4938", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:17:53.4938", "level": "INFO", "ElapsedMilliseconds": 1.944, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:18:14.5011", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:18:14.5020", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:18:14.5020", "level": "INFO", "ElapsedMilliseconds": 1.1835, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:18:14.5257", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:18:14.5257", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:18:14.5257", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:18:14.5257", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:18:14.5257", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:18:14.5257", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.2264, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:18:14.5257", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:18:14.5257", "level": "INFO", "ElapsedMilliseconds": 2.0611, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:18:21.3462", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:18:21.3462", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:18:21.3462", "level": "INFO", "ElapsedMilliseconds": 1.2291, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:18:21.3462", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:18:21.3462", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:18:21.3462", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:18:21.3462", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:18:21.3462", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:18:21.3462", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.1335, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:18:21.3462", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:18:21.3462", "level": "INFO", "ElapsedMilliseconds": 2.5451, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:18:24.7494", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:18:24.7494", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:18:24.7494", "level": "INFO", "ElapsedMilliseconds": 0.8127, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:18:24.7672", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:18:24.7672", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:18:24.7672", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:18:24.7672", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:18:24.7917", "level": "INFO", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:18:24.8230", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:18:24.8505", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:18:24.8505", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:18:24.8505", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:18:24.8505", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:18:24.8505", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:18:24.8624", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:18:24.8624", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:18:24.8624", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:18:24.8624", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:18:24.8624", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:18:24.8624", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 98.0716, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:18:24.8624", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:18:24.8624", "level": "INFO", "ElapsedMilliseconds": 108.0943, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:18:29.0599", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:18:29.0599", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:18:29.0599", "level": "INFO", "ElapsedMilliseconds": 0.7423, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:18:29.0599", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:18:29.0599", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:18:29.0599", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:18:29.0599", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:18:29.0834", "level": "INFO", "elapsed": "3", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:18:29.0965", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:18:29.0965", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 29.6035, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:18:29.0965", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:18:29.0965", "level": "INFO", "ElapsedMilliseconds": 33.7102, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:18:30.9672", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:18:30.9672", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:18:30.9672", "level": "INFO", "ElapsedMilliseconds": 0.9387, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:18:30.9672", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:18:30.9672", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:18:30.9672", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:18:30.9672", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:18:30.9672", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:18:30.9672", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.8405, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:18:30.9672", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:18:30.9672", "level": "INFO", "ElapsedMilliseconds": 1.7353, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:18:40.4900", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:18:40.4900", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:18:40.4900", "level": "INFO", "ElapsedMilliseconds": 1.1955, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:18:40.4982", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:18:40.4982", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:18:40.4982", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:18:40.4982", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:18:40.4982", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:18:40.4982", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.1546, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:18:40.4982", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:18:40.4982", "level": "INFO", "ElapsedMilliseconds": 2.5414, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:18:43.2535", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:18:43.2535", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:18:43.2535", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:18:43.2535", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:18:43.2535", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:18:43.2535", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.0107, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:18:43.2535", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:18:43.2535", "level": "INFO", "ElapsedMilliseconds": 3.2185, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:19:58.8481", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:19:58.8560", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:19:58.8560", "level": "INFO", "ElapsedMilliseconds": 8.4422, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:19:58.8560", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:19:58.8560", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:19:58.8560", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:19:58.8560", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:19:58.8560", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:19:58.8560", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.9007, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:19:58.8560", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:19:58.8560", "level": "INFO", "ElapsedMilliseconds": 1.7213, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:20:37.4932", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:20:37.4932", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:20:37.4932", "level": "INFO", "ElapsedMilliseconds": 8.6762, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:20:37.4932", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:20:37.4932", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:20:37.4932", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:20:37.4932", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:20:37.4932", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:20:37.4932", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.3072, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:20:37.4932", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:20:37.4932", "level": "INFO", "ElapsedMilliseconds": 2.8397, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:20:57.4914", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:20:57.4914", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:20:57.4914", "level": "INFO", "ElapsedMilliseconds": 2.558, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:20:57.4914", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:20:57.4914", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:20:57.4914", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:20:57.4914", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:20:57.4914", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:20:57.4914", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.0415, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:20:57.4914", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:20:57.4914", "level": "INFO", "ElapsedMilliseconds": 2.1013, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:20:58.6722", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:20:58.6753", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:20:58.6753", "level": "INFO", "ElapsedMilliseconds": 3.2648, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:20:58.6753", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 34, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:20:58.6753", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:20:58.6753", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:20:58.6753", "level": "INFO", "RouteData": "{action = \"ForgotPassword\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] ForgotPassword(Models.DTOs.User.ForgotPassword.ForgotPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:20:58.6954", "level": "INFO", "elapsed": "1", "parameters": "@__model_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__model_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:20:58.7414", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Threading.Tasks.Task`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:20:58.7583", "level": "INFO", "ActionName": "Api.Controllers.AuthController.ForgotPassword (Api)", "ElapsedMilliseconds": 71.5234, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:20:58.7583", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:20:58.7704", "level": "ERROR" }
{ "time": "2024-04-02 12:20:58.7704", "level": "INFO", "ElapsedMilliseconds": 90.5584, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:21:12.4986", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:21:12.4986", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:21:12.4986", "level": "INFO", "ElapsedMilliseconds": 0.8208, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:21:12.4986", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:21:12.4986", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:21:12.4986", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:21:12.4986", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:21:12.4986", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:21:12.4986", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.3804, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:21:12.4986", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:21:12.4986", "level": "INFO", "ElapsedMilliseconds": 2.6409, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:21:14.4858", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:21:14.4858", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:21:14.4858", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:21:14.4858", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:21:14.4858", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:21:14.4858", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.5468, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:21:14.4858", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:21:14.4858", "level": "INFO", "ElapsedMilliseconds": 1.6967, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:21:18.4865", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:21:18.4878", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:21:18.4878", "level": "INFO", "ElapsedMilliseconds": 2.1462, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:21:18.4878", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:21:18.4878", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:21:18.4878", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:21:18.4878", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:21:18.4878", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:21:18.4878", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.7994, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:21:18.4878", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:21:18.4878", "level": "INFO", "ElapsedMilliseconds": 1.9306, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:21:21.9948", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:21:21.9948", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:21:21.9948", "level": "INFO", "ElapsedMilliseconds": 0.8775, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:21:22.0149", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 41, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:21:22.0149", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:21:22.0149", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:21:22.0149", "level": "INFO", "RouteData": "{action = \"ForgotPassword\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] ForgotPassword(Models.DTOs.User.ForgotPassword.ForgotPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:21:22.0285", "level": "INFO", "elapsed": "1", "parameters": "@__model_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__model_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:21:22.0285", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[DataAccess.Repositories.JWTManagerRepository+<ForgotPassword>d__10, DataAccess, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:21:22.0325", "level": "INFO", "ActionName": "Api.Controllers.AuthController.ForgotPassword (Api)", "ElapsedMilliseconds": 16.9029, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:21:22.0325", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:21:22.0325", "level": "ERROR" }
{ "time": "2024-04-02 12:21:22.0482", "level": "INFO", "ElapsedMilliseconds": 33.2804, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:21:23.4867", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:21:23.4874", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:21:23.4874", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:21:23.4874", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:21:23.4874", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:21:23.4874", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.733, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:21:23.4874", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:21:23.4874", "level": "INFO", "ElapsedMilliseconds": 2.1705, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:21:26.4773", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:21:26.4779", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:21:26.4779", "level": "INFO", "ElapsedMilliseconds": 0.828, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:21:26.4779", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:21:26.4779", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:21:26.4779", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:21:26.4779", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:21:26.4779", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:21:26.4779", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.9006, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:21:26.4779", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:21:26.4779", "level": "INFO", "ElapsedMilliseconds": 1.9939, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:21:31.4783", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:21:31.4783", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:21:31.4783", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:21:31.4783", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:21:31.4783", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:21:31.4783", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.7837, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:21:31.4783", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:21:31.4783", "level": "INFO", "ElapsedMilliseconds": 3.2244, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:22:30.2246", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 12:22:30.4185", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 12:22:30.4185", "level": "INFO" }
{ "time": "2024-04-02 12:22:30.4185", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 12:22:30.4332", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 12:22:30.5416", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:22:30.5832", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 12:22:30.5832", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:22:30.5963", "level": "INFO", "ElapsedMilliseconds": 61.4501, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:22:30.5963", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:22:30.5963", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:22:30.5963", "level": "INFO", "ElapsedMilliseconds": 2.2184, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:22:30.6135", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:22:30.6135", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:22:30.8387", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:22:30.8760", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:22:31.4266", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:22:31.5782", "level": "INFO", "ElapsedMilliseconds": 151.511, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:22:31.5782", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:22:31.5909", "level": "INFO", "ElapsedMilliseconds": 2.0888, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:22:31.5909", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:22:31.6240", "level": "INFO", "ElapsedMilliseconds": 31.7457, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:22:31.7062", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:22:31.8830", "level": "INFO", "ElapsedMilliseconds": 176.9266, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:22:32.2031", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:22:32.2081", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1328.8183, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:22:32.2081", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:22:32.2081", "level": "INFO", "ElapsedMilliseconds": 1600.8063, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:22:32.3039", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:22:32.3039", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:22:32.3039", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:22:32.3039", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:22:32.3513", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:22:32.3513", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 44.0981, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:22:32.3513", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:22:32.3513", "level": "INFO", "ElapsedMilliseconds": 48.1047, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:22:34.9075", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:22:34.9075", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:22:34.9075", "level": "INFO", "ElapsedMilliseconds": 1.5799, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:22:34.9208", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 41, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:22:34.9208", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:22:34.9208", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:22:34.9345", "level": "INFO", "RouteData": "{action = \"ForgotPassword\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] ForgotPassword(Models.DTOs.User.ForgotPassword.ForgotPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:22:39.8420", "level": "INFO", "elapsed": "64", "parameters": "@__model_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__model_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:22:41.1169", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:22:41.1169", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:22:41.1169", "level": "INFO", "ElapsedMilliseconds": 0.9127, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:22:41.1169", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:22:41.1169", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:22:41.1169", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:22:41.1169", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:22:41.1169", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:22:41.1169", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 4.4972, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:22:41.1169", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:22:41.1169", "level": "INFO", "ElapsedMilliseconds": 5.6198, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:22:44.4135", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:22:45.1400", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:22:45.1400", "level": "INFO", "ElapsedMilliseconds": 726.9155, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:22:45.1558", "level": "INFO", "StatusCode": 200, "EventId": 1, "EventName": "HttpStatusCodeResultExecuting" }
{ "time": "2024-04-02 12:22:45.1558", "level": "INFO", "ActionName": "Api.Controllers.AuthController.ForgotPassword (Api)", "ElapsedMilliseconds": 10222.2221, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:22:45.1558", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:22:45.1895", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:22:45.9840", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:22:46.6059", "level": "INFO", "ElapsedMilliseconds": 11685.8724, "StatusCode": 200, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:22:46.6232", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:22:46.6357", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:22:46.6631", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:22:46.6881", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:22:46.7128", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:22:46.7128", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:22:46.7188", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:22:46.7188", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:22:46.7188", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:22:46.7188", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:22:46.7188", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:22:46.7302", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:22:46.7302", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:22:46.7302", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:22:46.7302", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 102.3063, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:22:46.7302", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:22:46.7302", "level": "INFO", "ElapsedMilliseconds": 1549.1833, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:22:50.3531", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:22:52.5379", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:22:53.0292", "level": "INFO", "ElapsedMilliseconds": 2676.3633, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:22:53.0656", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:22:53.9949", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:22:53.9949", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:22:53.9949", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:22:53.9949", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:22:53.9949", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:22:54.0284", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 28.4287, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:22:54.0284", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:22:54.4678", "level": "INFO", "ElapsedMilliseconds": 1402.2791, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:22:55.8841", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:22:57.7024", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:22:58.0987", "level": "INFO", "ElapsedMilliseconds": 2214.7846, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:22:58.1834", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:22:58.1834", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:22:58.1834", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:22:58.1834", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:22:58.1834", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:22:58.1834", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.1985, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:22:58.1834", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:22:58.1834", "level": "INFO", "ElapsedMilliseconds": 2.3579, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:23:22.0802", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 12:23:22.2048", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 12:23:22.2048", "level": "INFO" }
{ "time": "2024-04-02 12:23:22.2048", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 12:23:22.2048", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 12:23:23.1948", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:23:23.3125", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 12:23:23.3823", "level": "INFO", "ElapsedMilliseconds": 186.9778, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:23:23.3836", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:23:23.3836", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:23:23.3836", "level": "INFO", "ElapsedMilliseconds": 1.9688, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:23:23.4102", "level": "INFO", "ElapsedMilliseconds": 26.5309, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:23:23.4601", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:23:23.6516", "level": "INFO", "ElapsedMilliseconds": 191.5562, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:23:27.4714", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:23:27.4714", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:23:27.4714", "level": "INFO", "ElapsedMilliseconds": 8.8845, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:23:27.4849", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:23:27.4849", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:23:27.5585", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:23:27.5721", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:23:28.2880", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:23:28.2880", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 719.9374, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:23:28.2880", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:23:28.3053", "level": "INFO", "ElapsedMilliseconds": 820.4156, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:23:28.4676", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:23:28.4676", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:23:28.4749", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:23:28.4749", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:23:28.5560", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:23:28.5560", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 81.699, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:23:28.5560", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:23:28.5560", "level": "INFO", "ElapsedMilliseconds": 90.1682, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:23:32.4687", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:23:32.4687", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:23:32.4687", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:23:32.4687", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:23:32.4887", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:23:32.4887", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 17.2682, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:23:32.4887", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:23:32.4887", "level": "INFO", "ElapsedMilliseconds": 20.5716, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:23:37.1271", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:23:37.1271", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:23:37.1271", "level": "INFO", "ElapsedMilliseconds": 1.843, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:23:37.1271", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:23:37.1271", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:23:37.1271", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:23:37.1271", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:23:37.1271", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:23:37.1271", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.5678, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:23:37.1271", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:23:37.1271", "level": "INFO", "ElapsedMilliseconds": 3.1608, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:23:55.3442", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:23:55.3442", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:23:55.3442", "level": "INFO", "ElapsedMilliseconds": 0.8812, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:23:55.6105", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 82, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:23:55.6105", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:23:55.6178", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:23:55.6340", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Int32, Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:23:55.6786", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:23:55.6906", "level": "INFO", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 56.4114, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:23:55.6906", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:23:55.6906", "level": "INFO", "ElapsedMilliseconds": 80.3655, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:24:46.8876", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:24:46.8930", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:24:46.8930", "level": "INFO", "ElapsedMilliseconds": 6.1803, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:24:46.9531", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:24:46.9531", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:24:46.9579", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:24:46.9579", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:24:47.6609", "level": "INFO", "elapsed": "68", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:24:47.7541", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:24:47.7541", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 794.2091, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:24:47.7541", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:24:47.7541", "level": "INFO", "ElapsedMilliseconds": 810.1238, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:24:48.6085", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:24:48.6316", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:24:48.6316", "level": "INFO", "ElapsedMilliseconds": 23.4505, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:24:48.7707", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:24:48.7707", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:24:48.7707", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:24:48.7707", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:24:48.7707", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:24:48.7707", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 4.2328, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:24:48.7707", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:24:48.7707", "level": "INFO", "ElapsedMilliseconds": 5.486, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:29:24.4566", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:29:24.4566", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:29:24.4566", "level": "INFO", "ElapsedMilliseconds": 9.2599, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:29:24.6840", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:29:24.6840", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:29:24.6840", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:29:24.6840", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:29:24.6840", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:29:24.6840", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.5139, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:29:24.6840", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:29:24.6840", "level": "INFO", "ElapsedMilliseconds": 3.3468, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:29:41.4557", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:29:41.4565", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:29:41.4565", "level": "INFO", "ElapsedMilliseconds": 1.0439, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:29:41.4565", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:29:41.4565", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:29:41.4565", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:29:41.4565", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:29:41.4565", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:29:41.4565", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.385, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:29:41.4565", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:29:41.4565", "level": "INFO", "ElapsedMilliseconds": 2.8297, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:29:51.4549", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:29:51.4564", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:29:51.4564", "level": "INFO", "ElapsedMilliseconds": 1.8016, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:29:51.4564", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:29:51.4564", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:29:51.4564", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:29:51.4564", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:29:51.4564", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:29:51.4564", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.9741, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:29:51.4564", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:29:51.4564", "level": "INFO", "ElapsedMilliseconds": 2.312, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:30:26.4549", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:30:26.4866", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:30:26.4866", "level": "INFO", "ElapsedMilliseconds": 34.4416, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:30:26.5877", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:30:26.5877", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:30:26.5877", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:30:26.5877", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:30:26.5877", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:30:26.5877", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.2678, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:30:26.5877", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:30:26.5877", "level": "INFO", "ElapsedMilliseconds": 2.3358, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:30:39.4542", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:30:39.4542", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:30:39.4542", "level": "INFO", "ElapsedMilliseconds": 2.1304, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:30:39.5514", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:30:39.5514", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:30:39.5514", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:30:39.5514", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:30:39.5514", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:30:39.5514", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.6473, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:30:39.5514", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:30:39.5514", "level": "INFO", "ElapsedMilliseconds": 2.0422, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:30:41.4353", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:30:41.4377", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:30:41.4377", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:30:41.4377", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:30:41.4377", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:30:41.4377", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.4505, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:30:41.4377", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:30:41.4377", "level": "INFO", "ElapsedMilliseconds": 4.8968, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:31:30.4608", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:31:30.4619", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:31:30.4619", "level": "INFO", "ElapsedMilliseconds": 5.8134, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:31:30.5061", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:31:30.5061", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:31:30.5061", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:31:30.5061", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:31:30.5061", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:31:30.5061", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.9517, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:31:30.5061", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:31:30.5061", "level": "INFO", "ElapsedMilliseconds": 1.7395, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:31:49.8077", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:31:49.8077", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:31:49.8077", "level": "INFO", "ElapsedMilliseconds": 1.5477, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:31:49.8077", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 92, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:31:49.8077", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:31:49.8256", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:31:49.8256", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Int32, Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:32:15.0176", "level": "INFO", "elapsed": "2", "parameters": "@__LicenseId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicenseId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:32:15.4113", "level": "INFO", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 25587.1788, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:32:15.4113", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:32:27.9875", "level": "ERROR" }
{ "time": "2024-04-02 12:32:29.8688", "level": "INFO", "ElapsedMilliseconds": 40049.3509, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:32:38.9612", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:32:53.7463", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:32:54.2039", "level": "INFO", "ElapsedMilliseconds": 15243.6297, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:32:54.2362", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 92, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:32:55.0711", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:32:55.0711", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:32:55.0711", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Int32, Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:33:02.1886", "level": "INFO", "elapsed": "2", "parameters": "@__LicenseId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicenseId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:33:02.5963", "level": "INFO", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 7524.5867, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:33:02.5963", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:33:11.4263", "level": "ERROR" }
{ "time": "2024-04-02 12:33:12.7185", "level": "INFO", "ElapsedMilliseconds": 18483.5221, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:33:20.2491", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:33:23.0621", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:33:23.6803", "level": "INFO", "ElapsedMilliseconds": 3431.4285, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:33:23.8141", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 92, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:33:25.2963", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:33:25.2963", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:33:25.2963", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Int32, Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:35:40.7147", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 12:35:40.9217", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 12:35:40.9461", "level": "INFO" }
{ "time": "2024-04-02 12:35:40.9481", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 12:35:40.9481", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 12:35:41.9453", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:35:42.0630", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 12:35:42.1344", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:35:42.1344", "level": "INFO", "ElapsedMilliseconds": 194.0011, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:35:42.1344", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:35:42.1344", "level": "INFO", "ElapsedMilliseconds": 2.7317, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:35:42.1821", "level": "INFO", "ElapsedMilliseconds": 47.7279, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:35:42.2399", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:35:42.4739", "level": "INFO", "ElapsedMilliseconds": 234.1266, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:35:44.8825", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 92, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:35:44.8871", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:35:44.9785", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:35:44.9971", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:35:53.4507", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:35:53.4507", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:35:53.4755", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:35:53.8710", "level": "INFO", "ElapsedMilliseconds": 420.5063, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:35:53.8710", "level": "INFO", "ElapsedMilliseconds": 423.2859, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:35:54.0813", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 92, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:35:54.0813", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/swagger-ui.css", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:35:54.0813", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:35:54.0813", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/swagger-ui-bundle.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:35:54.0858", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:35:54.0858", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/swagger-ui-standalone-preset.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:35:54.1145", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:35:54.1190", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:35:54.1190", "level": "INFO", "ElapsedMilliseconds": 0.3354, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:35:54.1190", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:35:54.5702", "level": "INFO", "VirtualPath": "/swagger-ui.css", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" }
{ "time": "2024-04-02 12:35:55.0941", "level": "INFO", "ElapsedMilliseconds": 1012.8786, "StatusCode": 200, "ContentType": "text/css", "ContentLength": 143943, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/swagger-ui.css", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:35:55.5044", "level": "INFO", "VirtualPath": "/swagger-ui-standalone-preset.js", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" }
{ "time": "2024-04-02 12:35:55.5044", "level": "INFO", "ElapsedMilliseconds": 1417.8277, "StatusCode": 200, "ContentType": "text/javascript", "ContentLength": 339486, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/swagger-ui-standalone-preset.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:35:55.8535", "level": "INFO", "ElapsedMilliseconds": 1733.8917, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:35:58.6014", "level": "INFO", "VirtualPath": "/swagger-ui-bundle.js", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" }
{ "time": "2024-04-02 12:35:58.6014", "level": "INFO", "ElapsedMilliseconds": 4522.0464, "StatusCode": 200, "ContentType": "text/javascript", "ContentLength": 1096145, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/swagger-ui-bundle.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:35:58.9057", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:35:58.9057", "level": "INFO", "ElapsedMilliseconds": 9.1886, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:35:59.0823", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/favicon-32x32.png", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:35:59.0823", "level": "INFO", "VirtualPath": "/favicon-32x32.png", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" }
{ "time": "2024-04-02 12:35:59.0823", "level": "INFO", "ElapsedMilliseconds": 0.8438, "StatusCode": 200, "ContentType": "image/png", "ContentLength": 628, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/favicon-32x32.png", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:35:59.1062", "level": "INFO", "elapsed": "62", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:35:59.1062", "level": "INFO", "elapsed": "62", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:36:02.2091", "level": "INFO", "elapsed": "11", "parameters": "@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5)\r\nRETURNING \"Id\", \"CreatedAt\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:36:02.2091", "level": "INFO", "elapsed": "11", "parameters": "@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5)\r\nRETURNING \"Id\", \"CreatedAt\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:36:08.1011", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Create.TicketCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:36:08.1011", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Create.TicketCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:36:10.2521", "level": "INFO", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 25250.8927, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:36:10.2521", "level": "INFO", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 16115.7114, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:36:10.2521", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:36:10.2521", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:36:10.9495", "level": "INFO", "ElapsedMilliseconds": 16869.3514, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:36:10.9495", "level": "INFO", "ElapsedMilliseconds": 26068.7873, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:36:10.9495", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:36:10.9495", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:36:10.9495", "level": "INFO", "ElapsedMilliseconds": 1.7385, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:36:11.0257", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:36:11.2487", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:36:11.2487", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:36:11.2487", "level": "INFO", "ElapsedMilliseconds": 0.5258, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:36:11.6893", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:36:11.6893", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:36:11.6893", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:36:11.6893", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:36:11.6893", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:36:11.6957", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:36:11.6957", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:36:11.7222", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:36:11.7258", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:36:11.7258", "level": "INFO", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:36:11.7258", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 34.7272, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:36:11.7258", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:36:12.1388", "level": "INFO", "ElapsedMilliseconds": 1113.1824, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:36:12.1388", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:36:12.1573", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:36:12.1573", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:36:12.1573", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:36:12.1665", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:36:12.1665", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:36:12.1665", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:36:12.1665", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:36:12.1769", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:36:12.1769", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:36:12.1769", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:36:12.1769", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 491.4411, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:36:12.1769", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:36:12.1769", "level": "INFO", "ElapsedMilliseconds": 498.4255, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:37:45.8763", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:37:45.8821", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:37:45.8821", "level": "INFO", "ElapsedMilliseconds": 14.9586, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:37:45.8821", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:37:45.8821", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:37:45.8821", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:37:45.8821", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:37:45.8821", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:37:45.8821", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:37:45.9039", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 8.2289, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:37:45.9039", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:37:45.9039", "level": "INFO", "ElapsedMilliseconds": 9.9738, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:37:46.8047", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:37:46.8047", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:37:46.8047", "level": "INFO", "ElapsedMilliseconds": 0.8886, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:37:46.8535", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:37:46.8541", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:37:46.8541", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:37:46.8541", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:37:46.8541", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:37:46.8541", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 2.6091, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:37:46.8541", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:37:46.8541", "level": "INFO", "ElapsedMilliseconds": 6.7851, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:37:58.4407", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:37:58.4407", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:37:58.4407", "level": "INFO", "ElapsedMilliseconds": 2.6192, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:37:58.4407", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 94, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:38:02.3988", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:38:02.3988", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:38:02.3988", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:38:02.4063", "level": "INFO", "elapsed": "1", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:38:02.4063", "level": "INFO", "elapsed": "1", "parameters": "@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5)\r\nRETURNING \"Id\", \"CreatedAt\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:38:02.4063", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Create.TicketCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:38:02.4063", "level": "INFO", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 13.6942, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:38:02.4063", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:38:02.4063", "level": "INFO", "ElapsedMilliseconds": 3960.1406, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:38:02.5112", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:38:02.5112", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:38:02.5112", "level": "INFO", "ElapsedMilliseconds": 0.3028, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:38:02.5911", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:38:02.5911", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:38:02.5911", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:38:02.5911", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:38:02.5960", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:38:02.5960", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:38:02.5960", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 5.0708, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:38:02.5960", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:38:02.5960", "level": "INFO", "ElapsedMilliseconds": 6.208, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:39:41.1221", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 12:39:41.2688", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 12:39:41.2731", "level": "INFO" }
{ "time": "2024-04-02 12:39:41.2731", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 12:39:41.2731", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 12:39:42.3096", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:39:42.4289", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 12:39:42.5062", "level": "INFO", "ElapsedMilliseconds": 199.7571, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:39:42.5062", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:39:42.5119", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:39:42.5119", "level": "INFO", "ElapsedMilliseconds": 2.6773, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:39:42.5358", "level": "INFO", "ElapsedMilliseconds": 27.3152, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:39:42.5880", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:39:42.8035", "level": "INFO", "ElapsedMilliseconds": 215.5484, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:39:43.8934", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:39:43.8934", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:39:43.8934", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:39:43.8934", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:39:43.8934", "level": "INFO", "ElapsedMilliseconds": 6.4092, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:39:43.8934", "level": "INFO", "ElapsedMilliseconds": 3.3997, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:39:43.9119", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 64, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:39:43.9119", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:39:43.9119", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:39:43.9119", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:39:43.9518", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:39:43.9761", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:39:43.9928", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:39:43.9928", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:39:44.8927", "level": "INFO", "elapsed": "35", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:39:44.8927", "level": "INFO", "elapsed": "35", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:39:44.9632", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:39:44.9632", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:39:45.0002", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:39:45.0002", "level": "INFO", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:39:45.0002", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 1001.7613, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:39:45.0002", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:39:45.0002", "level": "INFO", "ElapsedMilliseconds": 1099.9401, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:39:45.0673", "level": "INFO", "elapsed": "2", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:39:45.0673", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:39:45.0673", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 1096.1102, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:39:45.0673", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:39:45.0673", "level": "INFO", "ElapsedMilliseconds": 1160.9102, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:39:45.1002", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:39:45.1002", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:39:45.1002", "level": "INFO", "ElapsedMilliseconds": 0.6111, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:39:45.1113", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:39:45.1113", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:39:45.1113", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:39:45.1113", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:39:45.1747", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:39:45.1747", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:39:45.1747", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 60.4529, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:39:45.1747", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:39:45.1747", "level": "INFO", "ElapsedMilliseconds": 65.5361, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:39:57.7278", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:39:57.7294", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:39:57.7294", "level": "INFO", "ElapsedMilliseconds": 2.1345, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:39:57.7294", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:39:57.7294", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:39:57.7477", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:39:57.7477", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:39:57.7666", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:39:57.7946", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:39:57.7946", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 56.4383, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:39:57.7946", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:39:57.8071", "level": "INFO", "ElapsedMilliseconds": 69.3048, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:40:01.5967", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:40:01.5967", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:40:01.5967", "level": "INFO", "ElapsedMilliseconds": 1.2981, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:40:01.6088", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:40:01.6088", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:40:01.6088", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:40:01.6088", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:40:01.6088", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:40:01.6088", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 2.3268, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:40:01.6088", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:40:01.6088", "level": "INFO", "ElapsedMilliseconds": 4.9461, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:40:06.1777", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:40:06.1777", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:40:06.1777", "level": "INFO", "ElapsedMilliseconds": 2.1483, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:40:06.1777", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:40:06.1777", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:40:06.1777", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:40:06.1777", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:40:06.1976", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:40:06.1976", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:40:06.2286", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:40:06.2316", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:40:06.2316", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:40:06.2316", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:40:06.2316", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:40:06.2316", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:40:06.2466", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:40:06.2466", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:40:06.2466", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:40:06.2466", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:40:06.2466", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 66.7075, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:40:06.2466", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:40:06.2466", "level": "INFO", "ElapsedMilliseconds": 72.6137, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:40:08.8298", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:40:08.8298", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:40:08.8298", "level": "INFO", "ElapsedMilliseconds": 1.115, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:40:08.8758", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:40:08.8758", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:40:08.8758", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:40:08.8758", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:40:08.8882", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:40:08.8882", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:40:08.8882", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 10.4669, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:40:08.8882", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:40:08.8882", "level": "INFO", "ElapsedMilliseconds": 14.0153, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:40:10.1999", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:40:10.1999", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:40:10.1999", "level": "INFO", "ElapsedMilliseconds": 1.323, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:40:10.1999", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:40:10.1999", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:40:10.1999", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:40:10.1999", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:40:10.1999", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:40:10.1999", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.9276, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:40:10.1999", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:40:10.1999", "level": "INFO", "ElapsedMilliseconds": 2.1295, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:40:33.9038", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:40:33.9038", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:40:33.9038", "level": "INFO", "ElapsedMilliseconds": 1.9981, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:40:33.9151", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 111, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:40:33.9151", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:40:33.9151", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:40:33.9151", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:40:33.9663", "level": "INFO", "elapsed": "0", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:40:34.0413", "level": "INFO", "elapsed": "9", "parameters": "@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5)\r\nRETURNING \"Id\", \"CreatedAt\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:40:34.0626", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Create.TicketCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:40:34.0626", "level": "INFO", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 143.6961, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:40:34.0626", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:40:34.0626", "level": "INFO", "ElapsedMilliseconds": 151.509, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:40:34.1071", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:40:34.1071", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:40:34.1071", "level": "INFO", "ElapsedMilliseconds": 0.3562, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:40:34.1161", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:40:34.1161", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:40:34.1161", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:40:34.1161", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:40:34.1207", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:40:34.1207", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:40:34.1207", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 4.4429, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:40:34.1207", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:40:34.1207", "level": "INFO", "ElapsedMilliseconds": 5.5579, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:48:20.9747", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 12:48:21.1109", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 12:48:21.1109", "level": "INFO" }
{ "time": "2024-04-02 12:48:21.1109", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 12:48:21.1109", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 12:48:22.3456", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:48:22.4535", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 12:48:22.5334", "level": "INFO", "ElapsedMilliseconds": 191.3328, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:48:22.5334", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:48:22.5334", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:48:22.5334", "level": "INFO", "ElapsedMilliseconds": 1.724, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:48:22.5629", "level": "INFO", "ElapsedMilliseconds": 28.8053, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:48:22.6168", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:48:22.8516", "level": "INFO", "ElapsedMilliseconds": 234.7718, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:48:32.4576", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:48:32.4576", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:48:32.4576", "level": "INFO", "ElapsedMilliseconds": 8.7449, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:48:32.4809", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 41, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:48:32.4809", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:48:32.5278", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:48:32.5561", "level": "INFO", "RouteData": "{action = \"ForgotPassword\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] ForgotPassword(Models.DTOs.User.ForgotPassword.ForgotPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:48:45.1718", "level": "INFO", "elapsed": "40", "parameters": "@__model_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__model_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:48:50.1272", "level": "INFO", "StatusCode": 200, "EventId": 1, "EventName": "HttpStatusCodeResultExecuting" }
{ "time": "2024-04-02 12:48:50.1272", "level": "INFO", "ActionName": "Api.Controllers.AuthController.ForgotPassword (Api)", "ElapsedMilliseconds": 17572.624, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:48:50.1272", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:48:51.3391", "level": "INFO", "ElapsedMilliseconds": 18859.1731, "StatusCode": 200, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:50:17.2735", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:50:17.2735", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:50:17.2735", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:50:17.2735", "level": "INFO", "ElapsedMilliseconds": 3.6906, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:50:17.2955", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 64, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:50:17.2955", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:50:26.9725", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:50:27.8588", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:50:28.3563", "level": "INFO", "ElapsedMilliseconds": 11083.0849, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:50:28.3563", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:50:28.4351", "level": "INFO", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:50:28.4351", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:50:28.4798", "level": "INFO", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:50:28.5712", "level": "INFO", "elapsed": "3", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:50:28.5788", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:50:28.5788", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 221.1278, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:50:28.5788", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:50:28.5788", "level": "INFO", "ElapsedMilliseconds": 11286.3131, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:50:28.9352", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:50:28.9352", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:50:28.9819", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:50:28.9819", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:50:28.9995", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:50:28.9995", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:50:29.0320", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:50:29.0320", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 50.2614, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:50:29.0320", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:50:29.0320", "level": "INFO", "ElapsedMilliseconds": 98.7574, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:50:29.0724", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:50:29.0727", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:50:29.0727", "level": "INFO", "ElapsedMilliseconds": 0.5221, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:50:29.2420", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:50:30.2098", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:50:30.2098", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:50:30.2098", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:50:30.2204", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:50:30.2204", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:50:30.2204", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 9.8131, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:50:30.2204", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:50:30.7293", "level": "INFO", "ElapsedMilliseconds": 1487.4282, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:50:51.2541", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:53:30.6081", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:53:30.6414", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:53:30.6430", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:53:30.7131", "level": "INFO", "ElapsedMilliseconds": 71.7136, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:53:30.9301", "level": "INFO", "ElapsedMilliseconds": 159688.8916, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:53:31.2117", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:53:31.2117", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:53:31.2241", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:53:31.2241", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:53:31.2380", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:53:31.2380", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:53:31.2663", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:53:31.2703", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:53:31.2703", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:53:31.2703", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:53:31.2703", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:53:31.2703", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:53:31.2861", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:53:31.2861", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:53:31.2861", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:53:31.2861", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:53:31.2861", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 69.9512, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:53:31.2861", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:53:31.2861", "level": "INFO", "ElapsedMilliseconds": 84.5979, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:53:31.3462", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:53:32.0382", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:53:32.0382", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:53:32.0382", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:53:32.0534", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:53:32.0534", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:53:32.0751", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 31.6458, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:53:32.0751", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:53:32.3983", "level": "INFO", "ElapsedMilliseconds": 1052.173, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:59:27.9803", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:59:27.9803", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:59:27.9803", "level": "INFO", "ElapsedMilliseconds": 2.0237, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:59:27.9803", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 64, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:59:27.9803", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:59:27.9803", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:59:27.9803", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:59:27.9949", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:59:27.9949", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:59:27.9949", "level": "INFO", "ElapsedMilliseconds": 0.4365, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:59:28.0141", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:59:28.0141", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:59:28.0141", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:59:28.0141", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:59:28.0236", "level": "INFO", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:59:28.0236", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:59:28.0236", "level": "INFO", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:59:28.0236", "level": "INFO", "elapsed": "1", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:59:28.0236", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:59:28.0236", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 43.5515, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:59:28.0236", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:59:28.0236", "level": "INFO", "ElapsedMilliseconds": 45.2534, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:59:28.0359", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:59:28.0359", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:59:28.0359", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:59:28.0359", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 24.7404, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:59:28.0359", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:59:28.0359", "level": "INFO", "ElapsedMilliseconds": 25.6068, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:59:28.0724", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:59:28.0724", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:59:28.0724", "level": "INFO", "ElapsedMilliseconds": 0.3455, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 12:59:28.0724", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 12:59:28.0724", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 12:59:28.0724", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 12:59:28.0724", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 12:59:28.0724", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 12:59:28.0724", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 12:59:28.0724", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 3.209, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 12:59:28.0724", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 12:59:28.0724", "level": "INFO", "ElapsedMilliseconds": 4.2983, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:02:26.0839", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:02:26.0839", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:02:26.0839", "level": "INFO", "ElapsedMilliseconds": 7.5063, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:02:26.1067", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 148, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:02:26.1067", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:02:26.1067", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:02:26.1067", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:02:26.1760", "level": "INFO", "elapsed": "1", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:02:26.2136", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 101.8219, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:02:26.2136", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:02:26.2277", "level": "ERROR" }
{ "time": "2024-04-02 13:02:26.2995", "level": "INFO", "ElapsedMilliseconds": 192.8363, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:02:52.6609", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 13:02:53.0098", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 13:02:53.0142", "level": "INFO" }
{ "time": "2024-04-02 13:02:53.0142", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 13:02:53.0142", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 13:02:54.3401", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:02:54.4593", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 13:02:54.5365", "level": "INFO", "ElapsedMilliseconds": 197.5791, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:02:54.5365", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:02:54.5365", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:02:54.5365", "level": "INFO", "ElapsedMilliseconds": 2.2801, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:02:54.5742", "level": "INFO", "ElapsedMilliseconds": 36.4846, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:02:54.6288", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:02:54.8547", "level": "INFO", "ElapsedMilliseconds": 225.9941, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:03:00.3478", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:03:00.3478", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:03:00.3478", "level": "INFO", "ElapsedMilliseconds": 10.116, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:03:00.3774", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 159, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:03:00.3774", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:03:00.4385", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:03:00.4661", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:03:01.2643", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:03:01.2800", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 809.4757, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:03:01.2800", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:03:01.2800", "level": "INFO", "ElapsedMilliseconds": 910.4477, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:03:52.7854", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:03:52.7854", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:03:52.7854", "level": "INFO", "ElapsedMilliseconds": 7.0163, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:03:52.8367", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 157, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:03:52.8367", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:03:52.8367", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:03:52.8367", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:03:52.9135", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:03:52.9135", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 74.3362, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:03:52.9135", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:03:52.9135", "level": "INFO", "ElapsedMilliseconds": 77.7689, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:04:27.6349", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 13:04:27.9044", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 13:04:27.9044", "level": "INFO" }
{ "time": "2024-04-02 13:04:27.9044", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 13:04:27.9044", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 13:04:29.3069", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:04:29.4349", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 13:04:29.5137", "level": "INFO", "ElapsedMilliseconds": 210.8904, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:04:29.5137", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:04:29.5137", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:04:29.5266", "level": "INFO", "ElapsedMilliseconds": 3.1312, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:04:29.5620", "level": "INFO", "ElapsedMilliseconds": 40.1579, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:04:29.6079", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:04:29.8230", "level": "INFO", "ElapsedMilliseconds": 215.0749, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:04:33.0611", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:04:33.0661", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:04:33.0661", "level": "INFO", "ElapsedMilliseconds": 5.9208, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:04:33.0850", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 157, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:04:33.0850", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:04:33.1378", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:04:33.1655", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:04:34.3822", "level": "INFO", "elapsed": "48", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:04:34.4487", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 1278.1316, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:04:34.4498", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:04:34.4719", "level": "ERROR" }
{ "time": "2024-04-02 13:04:34.5481", "level": "INFO", "ElapsedMilliseconds": 1463.2007, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:05:25.9098", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 179, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:05:25.9144", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:05:25.9144", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:05:25.9144", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:05:25.9875", "level": "INFO", "elapsed": "1", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:05:26.0164", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 99.4582, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:05:26.0164", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:05:26.0289", "level": "ERROR" }
{ "time": "2024-04-02 13:05:26.0289", "level": "INFO", "ElapsedMilliseconds": 121.5472, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:05:46.4314", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 175, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:05:46.4314", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:05:46.4314", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:05:46.4314", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:05:46.4595", "level": "INFO", "elapsed": "1", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:05:46.4978", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 56.9053, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:05:46.4978", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:05:46.5156", "level": "ERROR" }
{ "time": "2024-04-02 13:05:46.5205", "level": "INFO", "ElapsedMilliseconds": 89.1478, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:06:10.3219", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 175, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:06:10.3219", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:06:10.3219", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:06:10.3219", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:06:10.3219", "level": "INFO", "elapsed": "1", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:06:10.3681", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 43.5407, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:06:10.3681", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:06:10.3681", "level": "ERROR" }
{ "time": "2024-04-02 13:06:10.3894", "level": "INFO", "ElapsedMilliseconds": 70.4578, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:06:12.2334", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 175, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:06:12.2334", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:06:12.2334", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:06:12.2334", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:06:12.2334", "level": "INFO", "elapsed": "1", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:06:12.2751", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 40.8372, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:06:12.2751", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:06:12.2895", "level": "ERROR" }
{ "time": "2024-04-02 13:06:12.2895", "level": "INFO", "ElapsedMilliseconds": 57.8814, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:06:18.9062", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 13:06:19.2310", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 13:06:19.2310", "level": "INFO" }
{ "time": "2024-04-02 13:06:19.2310", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 13:06:19.2310", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 13:06:20.6381", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:06:20.7531", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 13:06:20.8347", "level": "INFO", "ElapsedMilliseconds": 200.559, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:06:20.8347", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:06:20.8347", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:06:20.8347", "level": "INFO", "ElapsedMilliseconds": 2.5461, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:06:20.8712", "level": "INFO", "ElapsedMilliseconds": 33.1527, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:06:20.9245", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:06:21.1187", "level": "INFO", "ElapsedMilliseconds": 194.2169, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:06:38.9144", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 174, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:06:38.9144", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:06:39.0061", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:06:39.0423", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:06:40.4517", "level": "INFO", "elapsed": "59", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:06:40.5564", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 1506.0443, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:06:40.5564", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:06:40.6148", "level": "ERROR", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-02 13:06:40.6274", "level": "INFO", "ElapsedMilliseconds": 1713.0948, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:06:41.5856", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:06:41.5856", "level": "INFO", "ElapsedMilliseconds": 1.366, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:06:41.5856", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:06:41.7645", "level": "INFO", "ElapsedMilliseconds": 156.9572, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:06:41.9783", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:06:41.9783", "level": "INFO", "ElapsedMilliseconds": 10.2215, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:07:13.7381", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 174, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:07:13.7457", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:07:13.7457", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:07:13.7457", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:07:20.9299", "level": "INFO", "elapsed": "1", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:07:20.9829", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 7236.227, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:07:20.9829", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:07:20.9924", "level": "ERROR", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-02 13:07:20.9924", "level": "INFO", "ElapsedMilliseconds": 7255.8578, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:07:41.3901", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 174, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:07:41.3901", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:07:41.3971", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:07:41.3971", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:08:00.2820", "level": "INFO", "elapsed": "1", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:08:02.0074", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 20610.7317, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:08:02.0074", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:08:02.0074", "level": "ERROR", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-02 13:08:02.0074", "level": "INFO", "ElapsedMilliseconds": 20628.6763, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:08:16.4617", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 174, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:08:16.4617", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:08:16.4617", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:08:16.4617", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:08:58.9638", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 190, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:08:58.9638", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:08:58.9638", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:08:58.9638", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:08:58.9638", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:08:58.9638", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:08:58.9638", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:08:58.9638", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:08:59.4980", "level": "INFO", "ElapsedMilliseconds": 533.5304, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:08:59.4980", "level": "INFO", "ElapsedMilliseconds": 534.0544, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:08:59.7055", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 157, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:08:59.7055", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:08:59.7055", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:08:59.7055", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:08:59.9091", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 157, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:08:59.9091", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:08:59.9091", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:08:59.9091", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:09:11.9488", "level": "INFO", "elapsed": "3", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:09:12.6743", "level": "INFO", "elapsed": "2", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:09:12.9423", "level": "INFO", "elapsed": "2", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:09:14.1319", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 15118.8013, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:09:14.1820", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 14266.1877, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:09:14.1820", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:09:14.2246", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 14518.9934, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:09:14.2246", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:09:14.2704", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:09:14.7135", "level": "ERROR", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-02 13:09:14.7135", "level": "ERROR", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-02 13:09:14.7135", "level": "INFO", "ElapsedMilliseconds": 14806.8561, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:09:14.7135", "level": "INFO", "ElapsedMilliseconds": 15753.4569, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:09:14.9509", "level": "ERROR", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-02 13:09:14.9509", "level": "INFO", "ElapsedMilliseconds": 15247.1974, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:09:15.1887", "level": "INFO", "elapsed": "1", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:09:16.2397", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 59777.5374, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:09:16.2397", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:09:16.2397", "level": "ERROR", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-02 13:09:16.2524", "level": "INFO", "ElapsedMilliseconds": 59793.8637, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:09:56.9852", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 190, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:09:56.9852", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:09:56.9852", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:09:56.9852", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:10:11.9101", "level": "INFO", "elapsed": "1", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:10:12.5542", "level": "INFO", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:10:14.0734", "level": "INFO", "elapsed": "20", "parameters": "@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:10:23.4136", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Register.UserRegisterResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:10:25.2864", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 28299.5259, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:10:25.2875", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:10:25.2875", "level": "INFO", "ElapsedMilliseconds": 28308.7312, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:11:09.1565", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:11:09.1606", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:11:09.1606", "level": "INFO", "ElapsedMilliseconds": 8.3754, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:11:09.2751", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 165, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:11:09.2751", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:11:09.2751", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:11:09.2815", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:11:09.2815", "level": "INFO", "elapsed": "1", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:11:09.2940", "level": "INFO", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:11:09.3210", "level": "INFO", "elapsed": "23", "parameters": "@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:11:12.0122", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Register.UserRegisterResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:11:12.0130", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 2731.47, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:11:12.0130", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:11:12.0130", "level": "INFO", "ElapsedMilliseconds": 2738.6016, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:12:33.9287", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Reset password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:12:33.9287", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:12:33.9287", "level": "INFO", "ElapsedMilliseconds": 4.9077, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Reset password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:12:33.9363", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 58, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Reset password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:12:33.9363", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:12:33.9363", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ResetPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:12:33.9363", "level": "INFO", "RouteData": "{action = \"ResetPassword\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult ResetPassword(Models.DTOs.User.ForgotPassword.ResetPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:12:33.9363", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:12:33.9581", "level": "INFO", "ActionName": "Api.Controllers.AuthController.ResetPassword (Api)", "ElapsedMilliseconds": 20.0026, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:12:33.9581", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ResetPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:12:33.9581", "level": "INFO", "ElapsedMilliseconds": 22.078, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Reset password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:13:03.5376", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 74, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Reset password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:13:03.5376", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:13:03.5376", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ResetPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:13:03.5376", "level": "INFO", "RouteData": "{action = \"ResetPassword\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult ResetPassword(Models.DTOs.User.ForgotPassword.ResetPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:13:09.4925", "level": "INFO", "elapsed": "1", "parameters": "@__model_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__model_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:13:10.5238", "level": "INFO", "elapsed": "3", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:13:11.9202", "level": "INFO", "StatusCode": 200, "EventId": 1, "EventName": "HttpStatusCodeResultExecuting" }
{ "time": "2024-04-02 13:13:11.9202", "level": "INFO", "ActionName": "Api.Controllers.AuthController.ResetPassword (Api)", "ElapsedMilliseconds": 8382.3411, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:13:11.9202", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ResetPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:13:11.9202", "level": "INFO", "ElapsedMilliseconds": 8387.4012, "StatusCode": 200, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Reset password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:13:58.7989", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 13:13:58.9474", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 13:13:58.9474", "level": "INFO" }
{ "time": "2024-04-02 13:13:58.9474", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 13:13:58.9474", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 13:13:59.8616", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:13:59.9985", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 13:14:00.0846", "level": "INFO", "ElapsedMilliseconds": 229.334, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:14:00.0880", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:14:00.0880", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:14:00.0880", "level": "INFO", "ElapsedMilliseconds": 3.1265, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:14:00.1306", "level": "INFO", "ElapsedMilliseconds": 40.4747, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:14:00.1953", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:14:00.3990", "level": "INFO", "ElapsedMilliseconds": 203.8074, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:14:03.8839", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:14:03.8839", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:14:03.8839", "level": "INFO", "ElapsedMilliseconds": 7.7522, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:14:03.9012", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 58, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:14:03.9012", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:14:03.9422", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ResetPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:14:03.9715", "level": "INFO", "RouteData": "{action = \"ResetPassword\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult ResetPassword(Models.DTOs.User.ForgotPassword.ResetPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:14:04.7166", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:14:04.7306", "level": "INFO", "ActionName": "Api.Controllers.AuthController.ResetPassword (Api)", "ElapsedMilliseconds": 755.388, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:14:04.7306", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ResetPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:14:04.7306", "level": "INFO", "ElapsedMilliseconds": 836.7654, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:14:24.9604", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:14:24.9618", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:14:24.9618", "level": "INFO", "ElapsedMilliseconds": 1.9454, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:14:24.9618", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 58, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:14:24.9618", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:14:24.9787", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ResetPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:14:24.9787", "level": "INFO", "RouteData": "{action = \"ResetPassword\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult ResetPassword(Models.DTOs.User.ForgotPassword.ResetPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:14:25.0371", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:14:25.0371", "level": "INFO", "ActionName": "Api.Controllers.AuthController.ResetPassword (Api)", "ElapsedMilliseconds": 57.9162, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:14:25.0371", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ResetPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:14:25.0371", "level": "INFO", "ElapsedMilliseconds": 66.882, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:15:34.0430", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:15:34.0430", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:15:34.0430", "level": "INFO", "ElapsedMilliseconds": 2.8418, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:15:34.0562", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 141, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:15:34.0562", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:15:34.0562", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:15:34.0562", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:15:34.1511", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:15:34.1511", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 90.9483, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:15:34.1511", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:15:34.1511", "level": "INFO", "ElapsedMilliseconds": 103.3526, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:15:42.9715", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:15:42.9715", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:15:42.9715", "level": "INFO", "ElapsedMilliseconds": 1.8533, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:15:43.0386", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 154, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:15:43.0386", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:15:43.0386", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:15:43.0386", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:15:43.4782", "level": "INFO", "elapsed": "44", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:15:43.5142", "level": "INFO", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:15:43.7330", "level": "INFO", "elapsed": "11", "parameters": "@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:15:46.3751", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Register.UserRegisterResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:15:46.3751", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 3339.1368, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:15:46.3751", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:15:46.3751", "level": "INFO", "ElapsedMilliseconds": 3348.1154, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:16:12.9498", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:16:12.9498", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:16:12.9498", "level": "INFO", "ElapsedMilliseconds": 1.0055, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:16:12.9670", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 58, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:16:12.9670", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:16:12.9670", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ResetPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:16:12.9670", "level": "INFO", "RouteData": "{action = \"ResetPassword\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult ResetPassword(Models.DTOs.User.ForgotPassword.ResetPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:16:12.9670", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:16:12.9670", "level": "INFO", "ActionName": "Api.Controllers.AuthController.ResetPassword (Api)", "ElapsedMilliseconds": 1.442, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:16:12.9670", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ResetPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:16:12.9670", "level": "INFO", "ElapsedMilliseconds": 6.215, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:16:35.6148", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:16:35.6148", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:16:35.6148", "level": "INFO", "ElapsedMilliseconds": 2.9457, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:16:35.7917", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 148, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:16:35.7917", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:16:35.7917", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:16:35.7917", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:16:35.8400", "level": "INFO", "elapsed": "1", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:16:35.8400", "level": "INFO", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:16:35.8498", "level": "INFO", "elapsed": "3", "parameters": "@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:16:40.2703", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Register.UserRegisterResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:16:40.2712", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 4474.671, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:16:40.2712", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:16:40.2712", "level": "INFO", "ElapsedMilliseconds": 4481.1005, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:18:35.9243", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:18:35.9243", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:18:35.9243", "level": "INFO", "ElapsedMilliseconds": 2.3791, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:18:35.9515", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 58, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:18:35.9515", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:18:35.9515", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ResetPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:18:35.9515", "level": "INFO", "RouteData": "{action = \"ResetPassword\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult ResetPassword(Models.DTOs.User.ForgotPassword.ResetPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:18:35.9515", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:18:35.9515", "level": "INFO", "ActionName": "Api.Controllers.AuthController.ResetPassword (Api)", "ElapsedMilliseconds": 1.3817, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:18:35.9515", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ResetPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:18:35.9515", "level": "INFO", "ElapsedMilliseconds": 9.2332, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:19:06.6232", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Reset password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:19:06.6232", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:19:06.6232", "level": "INFO", "ElapsedMilliseconds": 0.8815, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Reset password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:19:06.6333", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 58, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Reset password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:19:06.6333", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:19:06.6333", "level": "INFO", "ElapsedMilliseconds": 0.4342, "StatusCode": 404, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Reset password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:19:06.6333", "level": "INFO", "Method": "POST", "Scheme": "http", "Host": {"Value":"192.168.0.104:5274", "HasValue":true, "Host":"192.168.0.104", "Port":5274}, "PathBase": {"Value":"", "HasValue":false}, "Path": {"Value":"/api/Auth/Reset password", "HasValue":true}, "StatusCode": 404, "EventId": 16 }
{ "time": "2024-04-02 13:19:32.4724", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:19:32.4724", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:19:32.4724", "level": "INFO", "ElapsedMilliseconds": 1.4129, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:19:32.4724", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 58, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:19:32.4724", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:19:32.4724", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ResetPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:19:32.4724", "level": "INFO", "RouteData": "{action = \"ResetPassword\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult ResetPassword(Models.DTOs.User.ForgotPassword.ResetPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:19:32.4724", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:19:32.4724", "level": "INFO", "ActionName": "Api.Controllers.AuthController.ResetPassword (Api)", "ElapsedMilliseconds": 0.923, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:19:32.4724", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ResetPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:19:32.4724", "level": "INFO", "ElapsedMilliseconds": 1.3977, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:21:12.3472", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:21:12.3472", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:21:12.3472", "level": "INFO", "ElapsedMilliseconds": 33.4478, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:21:12.3622", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 65, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:21:12.3622", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:21:12.3622", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ResetPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:21:12.3622", "level": "INFO", "RouteData": "{action = \"ResetPassword\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult ResetPassword(Models.DTOs.User.ForgotPassword.ResetPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:21:51.3637", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 13:21:51.5244", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 13:21:51.5244", "level": "INFO" }
{ "time": "2024-04-02 13:21:51.5244", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 13:21:51.5303", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 13:21:52.7420", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:21:52.8393", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 13:21:52.9250", "level": "INFO", "ElapsedMilliseconds": 185.8864, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:21:52.9250", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:21:52.9250", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:21:52.9250", "level": "INFO", "ElapsedMilliseconds": 3.1236, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:21:52.9613", "level": "INFO", "ElapsedMilliseconds": 31.5611, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:21:53.0299", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:21:53.2809", "level": "INFO", "ElapsedMilliseconds": 251.0868, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:21:58.0253", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:21:58.0253", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:21:58.0253", "level": "INFO", "ElapsedMilliseconds": 5.4792, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:21:58.0410", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 65, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:21:58.0410", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:21:58.0875", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ResetPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:21:58.1104", "level": "INFO", "RouteData": "{action = \"ResetPassword\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult ResetPassword(Models.DTOs.User.ForgotPassword.ResetPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:22:04.1949", "level": "INFO", "elapsed": "50", "parameters": "@__model_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__model_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:22:05.7235", "level": "INFO", "elapsed": "5", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:22:08.1287", "level": "INFO", "StatusCode": 200, "EventId": 1, "EventName": "HttpStatusCodeResultExecuting" }
{ "time": "2024-04-02 13:22:08.1287", "level": "INFO", "ActionName": "Api.Controllers.AuthController.ResetPassword (Api)", "ElapsedMilliseconds": 10018.8798, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:22:08.1287", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ResetPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:22:08.1287", "level": "INFO", "ElapsedMilliseconds": 10102.0806, "StatusCode": 200, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:24:31.0234", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:24:31.0251", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:24:31.0251", "level": "INFO", "ElapsedMilliseconds": 2.3239, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:24:31.0251", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 64, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:24:31.0251", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:24:31.0427", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:24:31.0427", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:24:31.1287", "level": "INFO", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:24:31.1416", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:24:31.1911", "level": "INFO", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:24:31.2009", "level": "INFO", "elapsed": "1", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:24:31.2009", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:24:31.2009", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 159.0443, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:24:31.2009", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:24:31.2009", "level": "INFO", "ElapsedMilliseconds": 170.6789, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:24:31.2433", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:24:31.2433", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:24:31.2433", "level": "INFO", "ElapsedMilliseconds": 0.636, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:24:31.2648", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:24:31.2648", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:24:31.3296", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:24:31.3296", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:24:31.3477", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:24:31.3477", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:24:31.3477", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 19.0957, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:24:31.3477", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:24:31.3477", "level": "INFO", "ElapsedMilliseconds": 85.647, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:24:31.4674", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:24:31.4674", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:24:31.4674", "level": "INFO", "ElapsedMilliseconds": 0.5602, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:24:31.4832", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:24:31.4832", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:24:31.4832", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:24:31.4832", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:24:31.4976", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:24:31.5089", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:24:31.5260", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:24:31.5260", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 41.5884, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:24:31.5260", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:24:31.5260", "level": "INFO", "ElapsedMilliseconds": 45.1704, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:25:21.6907", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:25:21.6907", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:25:21.6907", "level": "INFO", "ElapsedMilliseconds": 1.2932, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:25:21.7305", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:25:21.7305", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:25:21.7305", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:25:21.7305", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:25:21.7305", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:25:21.7438", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:25:21.7438", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:25:21.7438", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 13.1359, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:25:21.7438", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:25:21.7438", "level": "INFO", "ElapsedMilliseconds": 14.5233, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:25:37.9010", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:25:37.9010", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:25:37.9010", "level": "INFO", "ElapsedMilliseconds": 1.2026, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:25:37.9010", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 85, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:25:37.9010", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:25:37.9010", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:25:37.9010", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:25:37.9161", "level": "INFO", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:25:37.9161", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:25:37.9161", "level": "INFO", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:25:37.9161", "level": "INFO", "elapsed": "2", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:25:37.9161", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:25:37.9161", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 18.5021, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:25:37.9161", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:25:37.9161", "level": "INFO", "ElapsedMilliseconds": 19.2624, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:25:37.9428", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:25:37.9428", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:25:37.9428", "level": "INFO", "ElapsedMilliseconds": 0.5655, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:25:37.9635", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:25:37.9635", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:25:37.9635", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:25:37.9635", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:25:37.9635", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:25:37.9635", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:25:37.9635", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 4.8771, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:25:37.9635", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:25:37.9635", "level": "INFO", "ElapsedMilliseconds": 6.3642, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:25:38.0037", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:25:38.0037", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:25:38.0037", "level": "INFO", "ElapsedMilliseconds": 0.7459, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:25:38.0407", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:25:38.0407", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:25:38.0407", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:25:38.0407", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:25:38.0407", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:25:38.0407", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:25:38.0407", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:25:38.0407", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 10.2101, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:25:38.0407", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:25:38.0407", "level": "INFO", "ElapsedMilliseconds": 11.7297, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:29:25.0121", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:29:25.0121", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:29:25.0121", "level": "INFO", "ElapsedMilliseconds": 2.06, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:29:25.0439", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 85, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:29:25.0439", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:29:25.0439", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:29:25.0439", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:29:25.0687", "level": "INFO", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:29:25.0687", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:29:25.0687", "level": "INFO", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:29:25.0687", "level": "INFO", "elapsed": "1", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:29:25.0687", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:29:25.0687", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 33.7278, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:29:25.0687", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:29:25.0687", "level": "INFO", "ElapsedMilliseconds": 34.7271, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:29:25.0947", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:29:25.0947", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:29:25.0947", "level": "INFO", "ElapsedMilliseconds": 0.2463, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:29:25.1052", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:29:25.1052", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:29:25.1052", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:29:25.1052", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:29:25.1052", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:29:25.1052", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:29:25.1052", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 3.2423, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:29:25.1052", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:29:25.1052", "level": "INFO", "ElapsedMilliseconds": 4.2989, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:29:25.1516", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:29:25.1516", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:29:25.1516", "level": "INFO", "ElapsedMilliseconds": 0.2835, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:29:25.1698", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:29:25.1698", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:29:25.1698", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:29:25.1698", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:29:25.1760", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:29:25.1760", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:29:25.1760", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:29:25.1760", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 9.5609, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:29:25.1760", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:29:25.1760", "level": "INFO", "ElapsedMilliseconds": 10.8471, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:31:28.4378", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:31:28.4396", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:31:28.4396", "level": "INFO", "ElapsedMilliseconds": 2.4433, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:31:28.5051", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:31:28.5051", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:31:28.5051", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:31:28.5051", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:31:28.5051", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:31:28.5168", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:31:28.5168", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:31:28.5168", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 11.1729, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:31:28.5168", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:31:28.5168", "level": "INFO", "ElapsedMilliseconds": 12.6286, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:31:46.3992", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:31:46.3992", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:31:46.3992", "level": "INFO", "ElapsedMilliseconds": 1.3992, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:31:46.4091", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 85, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:31:46.4091", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:31:46.4091", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:31:46.4091", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:31:46.4091", "level": "INFO", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:31:46.4091", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:31:46.4091", "level": "INFO", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:31:46.4256", "level": "INFO", "elapsed": "2", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:31:46.4256", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:31:46.4256", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 16.1967, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:31:46.4256", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:31:46.4256", "level": "INFO", "ElapsedMilliseconds": 17.1811, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:31:46.4395", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:31:46.4395", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:31:46.4395", "level": "INFO", "ElapsedMilliseconds": 0.4846, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:31:46.4615", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:31:46.4615", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:31:46.4615", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:31:46.4615", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:31:46.4615", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:31:46.4615", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:31:46.4615", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 3.6949, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:31:46.4615", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:31:46.4615", "level": "INFO", "ElapsedMilliseconds": 4.5354, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:31:46.4983", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:31:46.4983", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:31:46.4983", "level": "INFO", "ElapsedMilliseconds": 0.3112, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:31:46.5165", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:31:46.5165", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:31:46.5165", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:31:46.5165", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:31:46.5165", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:31:46.5165", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:31:46.5165", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:31:46.5165", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 6.8759, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:31:46.5165", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:31:46.5165", "level": "INFO", "ElapsedMilliseconds": 8.2387, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:33:50.5619", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:33:50.5619", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:33:50.5619", "level": "INFO", "ElapsedMilliseconds": 3.1863, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:33:50.5956", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 85, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:33:50.5956", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:33:50.5956", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:33:50.5956", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:33:50.5956", "level": "INFO", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:33:50.5956", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:33:50.6111", "level": "INFO", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:33:50.6111", "level": "INFO", "elapsed": "4", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:33:50.6111", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:33:50.6111", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 22.316, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:33:50.6111", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:33:50.6111", "level": "INFO", "ElapsedMilliseconds": 23.7152, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:33:50.6818", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:33:50.6818", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:33:50.6818", "level": "INFO", "ElapsedMilliseconds": 0.3054, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:33:50.7060", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:33:50.7060", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:33:50.7060", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:33:50.7060", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:33:50.7060", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:33:50.7060", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:33:50.7060", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 6.6882, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:33:50.7060", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:33:50.7060", "level": "INFO", "ElapsedMilliseconds": 8.1338, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:33:50.7701", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:33:50.7701", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:33:50.7701", "level": "INFO", "ElapsedMilliseconds": 0.5231, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:33:50.7812", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:33:50.7812", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:33:50.7812", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:33:50.7812", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:33:50.7812", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:33:50.7812", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:33:50.7812", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:33:50.7812", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 8.4715, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:33:50.7812", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:33:50.7812", "level": "INFO", "ElapsedMilliseconds": 9.6615, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:34:08.5715", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:34:08.5715", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:34:08.5715", "level": "INFO", "ElapsedMilliseconds": 1.0809, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:34:08.5943", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 84, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:34:08.5943", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:34:08.5943", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:34:08.5943", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:34:08.5943", "level": "INFO", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:34:08.5943", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:34:08.5943", "level": "INFO", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:34:08.6114", "level": "INFO", "elapsed": "3", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:34:08.6114", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:34:08.6114", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 17.3397, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:34:08.6114", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:34:08.6114", "level": "INFO", "ElapsedMilliseconds": 18.0059, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:34:08.6499", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:34:08.6499", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:34:08.6499", "level": "INFO", "ElapsedMilliseconds": 0.1909, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:34:08.6599", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:34:08.6599", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:34:08.6599", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:34:08.6599", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:34:08.6599", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:34:08.6599", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:34:08.6599", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 4.1677, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:34:08.6599", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:34:08.6599", "level": "INFO", "ElapsedMilliseconds": 5.1666, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:34:08.7033", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:34:08.7033", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:34:08.7033", "level": "INFO", "ElapsedMilliseconds": 0.3689, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:34:08.7263", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:34:08.7263", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:34:08.7263", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:34:08.7263", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:34:08.7263", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:34:08.7336", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:34:08.7336", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:34:08.7336", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 7.0088, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:34:08.7336", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:34:08.7336", "level": "INFO", "ElapsedMilliseconds": 7.8896, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:34:35.8782", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:34:35.8782", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:34:35.8782", "level": "INFO", "ElapsedMilliseconds": 4.0864, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:34:35.8998", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 85, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:34:35.8998", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:34:35.8998", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:34:35.8998", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:34:35.9210", "level": "INFO", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:34:35.9210", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:34:35.9210", "level": "INFO", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:34:35.9210", "level": "INFO", "elapsed": "1", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:34:35.9210", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:34:35.9210", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 28.9604, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:34:35.9210", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:34:35.9210", "level": "INFO", "ElapsedMilliseconds": 29.4231, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:34:35.9567", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:34:35.9567", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:34:35.9567", "level": "INFO", "ElapsedMilliseconds": 0.3084, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:34:35.9846", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:34:35.9846", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:34:35.9846", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:34:35.9846", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:34:35.9846", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:34:35.9846", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:34:35.9846", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 5.3091, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:34:35.9846", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:34:35.9846", "level": "INFO", "ElapsedMilliseconds": 6.1324, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:34:36.0494", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:34:36.0494", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:34:36.0494", "level": "INFO", "ElapsedMilliseconds": 0.3963, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:34:36.0800", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:34:36.0800", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:34:36.0800", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:34:36.0800", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:34:36.0800", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:34:36.0800", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:34:36.0800", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:34:36.0800", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 6.1123, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:34:36.0800", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:34:36.0800", "level": "INFO", "ElapsedMilliseconds": 7.2521, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:35:15.8735", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:35:15.8735", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:35:15.8735", "level": "INFO", "ElapsedMilliseconds": 0.8528, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:35:15.8959", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 85, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:35:15.8959", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:35:15.8959", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:35:15.8959", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:35:15.8959", "level": "INFO", "elapsed": "0", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:35:15.9044", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:35:15.9044", "level": "INFO", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:35:15.9044", "level": "INFO", "elapsed": "2", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:35:15.9044", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:35:15.9044", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 14.7816, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:35:15.9044", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:35:15.9044", "level": "INFO", "ElapsedMilliseconds": 15.2188, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:35:15.9347", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:35:15.9347", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:35:15.9347", "level": "INFO", "ElapsedMilliseconds": 0.2313, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:35:15.9627", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:35:15.9627", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:35:15.9627", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:35:15.9627", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:35:15.9661", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:35:15.9661", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:35:15.9661", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 5.1482, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:35:15.9661", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:35:15.9661", "level": "INFO", "ElapsedMilliseconds": 5.7793, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:35:16.0010", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:35:16.0010", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:35:16.0010", "level": "INFO", "ElapsedMilliseconds": 0.7167, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:35:16.0212", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:35:16.0212", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:35:16.0212", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:35:16.0212", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:35:16.0212", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:35:16.0304", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:35:16.0304", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:35:16.0304", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 8.9552, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:35:16.0304", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:35:16.0304", "level": "INFO", "ElapsedMilliseconds": 9.7337, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:37:35.3274", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:37:35.3274", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:37:35.3274", "level": "INFO", "ElapsedMilliseconds": 0.8902, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:37:35.3274", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 85, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:37:35.3274", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:37:35.3274", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:37:35.3274", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:37:35.3408", "level": "INFO", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:37:35.3408", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:37:35.3408", "level": "INFO", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:37:35.3408", "level": "INFO", "elapsed": "2", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:37:35.3408", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:37:35.3408", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 14.581, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:37:35.3408", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:37:35.3408", "level": "INFO", "ElapsedMilliseconds": 15.0867, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:37:35.3666", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:37:35.3666", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:37:35.3666", "level": "INFO", "ElapsedMilliseconds": 0.1884, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:37:35.3825", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:37:35.3825", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:37:35.3825", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:37:35.3825", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:37:35.3857", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:37:35.3857", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:37:35.3857", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 2.9595, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:37:35.3857", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:37:35.3857", "level": "INFO", "ElapsedMilliseconds": 3.8525, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:37:35.4297", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:37:35.4297", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:37:35.4297", "level": "INFO", "ElapsedMilliseconds": 0.494, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:37:35.4380", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:37:35.4380", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:37:35.4380", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:37:35.4380", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:37:35.4380", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:37:35.4380", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:37:35.4380", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:37:35.4380", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 5.6637, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:37:35.4380", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:37:35.4380", "level": "INFO", "ElapsedMilliseconds": 6.3859, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:39:54.3859", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:39:54.3859", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:39:54.4150", "level": "INFO", "ElapsedMilliseconds": 30.0394, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:39:54.4292", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 84, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:39:54.4292", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:39:54.4292", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:39:54.4292", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:39:54.4491", "level": "INFO", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:39:54.4491", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:39:54.4491", "level": "INFO", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:39:54.4491", "level": "INFO", "elapsed": "1", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:39:54.4491", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:39:54.4491", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 27.5282, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:39:54.4491", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:39:54.4491", "level": "INFO", "ElapsedMilliseconds": 28.1555, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:39:54.4895", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:39:54.4895", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:39:54.4895", "level": "INFO", "ElapsedMilliseconds": 0.1736, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:39:54.5009", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:39:54.5009", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:39:54.5009", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:39:54.5009", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:39:54.5009", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:39:54.5009", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:39:54.5009", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 2.816, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:39:54.5009", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:39:54.5009", "level": "INFO", "ElapsedMilliseconds": 3.4781, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:39:54.5447", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:39:54.5447", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:39:54.5447", "level": "INFO", "ElapsedMilliseconds": 0.1571, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:39:54.5572", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:39:54.5572", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:39:54.5572", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:39:54.5572", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:39:54.5572", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:39:54.5572", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:39:54.5572", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:39:54.5572", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 6.1728, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:39:54.5572", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:39:54.5572", "level": "INFO", "ElapsedMilliseconds": 7.0274, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:40:05.5365", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:40:05.5416", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:40:05.5416", "level": "INFO", "ElapsedMilliseconds": 7.1897, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:40:05.5833", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:40:05.5853", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:40:05.5853", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:40:05.5853", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:40:05.6047", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:40:05.6047", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:40:05.6047", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 11.896, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:40:05.6047", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:40:05.6047", "level": "INFO", "ElapsedMilliseconds": 25.6605, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:40:19.0510", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:40:19.0510", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:40:19.0510", "level": "INFO", "ElapsedMilliseconds": 1.2098, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:40:19.0840", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:40:19.0840", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:40:19.0858", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:40:19.0858", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:40:19.0858", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:40:19.0858", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:40:19.0858", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 6.174, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:40:19.0858", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:40:19.0858", "level": "INFO", "ElapsedMilliseconds": 8.2684, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:40:53.5175", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:40:53.5175", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:40:53.5175", "level": "INFO", "ElapsedMilliseconds": 3.9645, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:40:53.5347", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 63, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:40:53.5347", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:40:53.5347", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:40:53.5347", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:40:53.5388", "level": "INFO", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:40:53.5859", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "System.String", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:40:53.5859", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 51.0853, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:40:53.5859", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:40:53.5859", "level": "INFO", "ElapsedMilliseconds": 51.5545, "StatusCode": 400, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:41:07.4712", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:41:07.4712", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:41:07.4712", "level": "INFO", "ElapsedMilliseconds": 0.3484, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:41:07.4886", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 65, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:41:07.4886", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:41:07.4886", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:41:07.4886", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:41:07.4922", "level": "INFO", "elapsed": "0", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:41:07.4922", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:41:07.4922", "level": "INFO", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:41:07.5066", "level": "INFO", "elapsed": "2", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:41:07.5066", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:41:07.5066", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 18.0155, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:41:07.5066", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:41:07.5066", "level": "INFO", "ElapsedMilliseconds": 18.5981, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:41:07.5338", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:41:07.5338", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:41:07.5338", "level": "INFO", "ElapsedMilliseconds": 0.1874, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:41:07.5501", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:41:07.5501", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:41:07.5501", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:41:07.5501", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:41:07.5545", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:41:07.5545", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:41:07.5545", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 4.2653, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:41:07.5545", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:41:07.5545", "level": "INFO", "ElapsedMilliseconds": 5.112, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:41:07.6028", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:41:07.6028", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:41:07.6028", "level": "INFO", "ElapsedMilliseconds": 0.1413, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:41:07.6203", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:41:07.6203", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:41:07.6203", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:41:07.6203", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:41:07.6203", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:41:07.6203", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:41:07.6203", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:41:07.6203", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 6.0141, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:41:07.6203", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:41:07.6203", "level": "INFO", "ElapsedMilliseconds": 6.7292, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:46:56.2160", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:46:56.2160", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:46:56.2191", "level": "INFO", "ElapsedMilliseconds": 3.5309, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:46:56.2191", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 85, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:46:56.2191", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:46:56.2191", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:46:56.2191", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:46:56.2563", "level": "INFO", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:46:56.2563", "level": "INFO", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:46:56.2563", "level": "INFO", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:46:56.2563", "level": "INFO", "elapsed": "1", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:46:56.2563", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:46:56.2563", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 31.8124, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:46:56.2563", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:46:56.2660", "level": "INFO", "ElapsedMilliseconds": 32.5843, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:46:56.3005", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:46:56.3005", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:46:56.3005", "level": "INFO", "ElapsedMilliseconds": 0.1687, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:46:56.3131", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:46:56.3131", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:46:56.3131", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:46:56.3131", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:46:56.3131", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:46:56.3131", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:46:56.3131", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 3.0244, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:46:56.3131", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:46:56.3131", "level": "INFO", "ElapsedMilliseconds": 3.8642, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:46:56.3851", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:46:56.3851", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:46:56.3851", "level": "INFO", "ElapsedMilliseconds": 0.1996, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:46:56.4008", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:46:56.4008", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:46:56.4008", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:46:56.4008", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:46:56.4008", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:46:56.4076", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:46:56.4076", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:46:56.4076", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 6.6793, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:46:56.4076", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:46:56.4076", "level": "INFO", "ElapsedMilliseconds": 7.4, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:49:45.7611", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 13:49:45.9219", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 13:49:45.9262", "level": "INFO" }
{ "time": "2024-04-02 13:49:45.9262", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 13:49:45.9262", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 13:49:46.5819", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:49:46.7062", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 13:49:46.7862", "level": "INFO", "ElapsedMilliseconds": 207.6933, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:49:46.7862", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:49:46.7862", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:49:46.7961", "level": "INFO", "ElapsedMilliseconds": 4.0606, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:49:46.8295", "level": "INFO", "ElapsedMilliseconds": 40.4888, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:49:46.8938", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:49:47.0478", "level": "INFO", "ElapsedMilliseconds": 154.0674, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:50:57.0054", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:50:57.0054", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:50:57.0137", "level": "INFO", "ElapsedMilliseconds": 8.4644, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:50:57.0302", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:50:57.0302", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:50:57.1204", "level": "INFO", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-02 13:50:57.1204", "level": "INFO", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-02 13:50:57.1204", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:50:57.1415", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:51:17.7226", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:17.7226", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:17.7226", "level": "INFO", "ElapsedMilliseconds": 1.6675, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:17.7226", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 20586.0496, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:51:17.7402", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:51:17.7614", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 163, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:17.7614", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:17.7683", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:51:17.7683", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:51:17.7895", "level": "ERROR", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-02 13:51:17.7895", "level": "INFO", "ElapsedMilliseconds": 20770.8874, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:18.3260", "level": "INFO", "elapsed": "54", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:18.3522", "level": "INFO", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:18.5390", "level": "INFO", "elapsed": "12", "parameters": "@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:21.3972", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Register.UserRegisterResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:51:21.3972", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 3624.0876, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:51:21.3972", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:51:21.4111", "level": "INFO", "ElapsedMilliseconds": 3649.838, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:28.7656", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:28.7656", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:28.7656", "level": "INFO", "ElapsedMilliseconds": 2.2311, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:28.7848", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 85, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:28.7848", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:28.7848", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:51:28.7848", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:51:28.8227", "level": "INFO", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:28.8324", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:28.8589", "level": "INFO", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:28.8729", "level": "INFO", "elapsed": "1", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:28.8729", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:51:28.8729", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 84.5789, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:51:28.8729", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:51:28.8729", "level": "INFO", "ElapsedMilliseconds": 91.9924, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:28.9020", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:28.9020", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:28.9020", "level": "INFO", "ElapsedMilliseconds": 0.3697, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:28.9175", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:28.9175", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:28.9718", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:51:28.9718", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:51:28.9836", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:28.9836", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:51:28.9836", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 13.0619, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:51:28.9836", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:51:28.9836", "level": "INFO", "ElapsedMilliseconds": 69.6544, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:29.0445", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:29.0445", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:29.0445", "level": "INFO", "ElapsedMilliseconds": 0.464, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:29.0445", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:29.0445", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:29.0600", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:51:29.0600", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:51:29.0758", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:29.0909", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:29.1167", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:51:29.1167", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 58.0586, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:51:29.1167", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:51:29.1167", "level": "INFO", "ElapsedMilliseconds": 60.3389, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:29.2150", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:29.2150", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:29.2150", "level": "INFO", "ElapsedMilliseconds": 0.3703, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:29.2257", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 64, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:29.2257", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:29.2257", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:51:29.2257", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:51:31.9009", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:31.9078", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:31.9078", "level": "INFO", "ElapsedMilliseconds": 8.9797, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:32.0840", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:32.0840", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:32.0840", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:51:32.0840", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:51:32.6296", "level": "INFO", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:32.6296", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:32.6384", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:51:32.6384", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 553.3934, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:51:32.6384", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:51:32.6384", "level": "INFO", "ElapsedMilliseconds": 554.9759, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:36.0110", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:36.2210", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:36.2210", "level": "INFO", "ElapsedMilliseconds": 211.0899, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:36.4436", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:36.6723", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:41.3340", "level": "INFO", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:41.3340", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:41.3412", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:51:41.3412", "level": "INFO", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:41.3412", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:51:41.3412", "level": "INFO", "elapsed": "2", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:41.3412", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:51:41.3412", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 12123.2946, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:51:41.3412", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:51:41.3412", "level": "INFO", "ElapsedMilliseconds": 12124.2455, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:41.3412", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:41.3635", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:41.3755", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:41.3755", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:41.3755", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:41.3755", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:41.3755", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:51:41.3755", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 46.7476, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:51:41.3755", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:51:41.3755", "level": "INFO", "ElapsedMilliseconds": 4947.5816, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:41.4057", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:41.4057", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:41.4057", "level": "INFO", "ElapsedMilliseconds": 0.316, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:41.4057", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:41.4057", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:41.4057", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:51:41.4057", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:51:41.4057", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:41.4057", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:51:41.4057", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 5.5757, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:51:41.4057", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:51:41.4057", "level": "INFO", "ElapsedMilliseconds": 6.6145, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:44.6114", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:44.6121", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:44.6121", "level": "INFO", "ElapsedMilliseconds": 1.274, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:44.6121", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:44.6121", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:44.6121", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:51:44.6121", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:51:44.6470", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:44.6775", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:51:44.6870", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 60.0747, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:51:44.6870", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:51:44.6870", "level": "INFO", "ElapsedMilliseconds": 67.6715, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:45.6116", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:45.6116", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:45.6116", "level": "INFO", "ElapsedMilliseconds": 1.2874, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:45.6297", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:45.6297", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:45.6297", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:51:45.6297", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:51:45.6297", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:51:45.6297", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 2.4511, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:51:45.6297", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:51:45.6297", "level": "INFO", "ElapsedMilliseconds": 4.4338, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:45.8325", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:45.8325", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:45.8325", "level": "INFO", "ElapsedMilliseconds": 0.4183, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:45.8476", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:45.8476", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:45.8476", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:51:45.8476", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:51:45.8476", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:45.8578", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:45.8578", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:45.8578", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:45.8578", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:45.8578", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:51:45.8578", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:51:45.8578", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 17.3027, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:51:45.8578", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:51:45.8578", "level": "INFO", "ElapsedMilliseconds": 20.9681, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:59.7667", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:59.7667", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:59.7667", "level": "INFO", "ElapsedMilliseconds": 2.2956, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:51:59.7911", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 92, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:51:59.7911", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:51:59.7911", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:51:59.7958", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:52:37.8264", "level": "INFO", "elapsed": "1", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:53:01.2743", "level": "INFO", "elapsed": "5", "parameters": "@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5)\r\nRETURNING \"Id\", \"CreatedAt\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:53:03.8247", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Create.TicketCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:53:05.7030", "level": "INFO", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 65907.9777, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:53:05.7030", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:53:05.7038", "level": "INFO", "ElapsedMilliseconds": 65913.5588, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:53:05.8660", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:53:05.8660", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:53:05.8660", "level": "INFO", "ElapsedMilliseconds": 0.3998, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:53:05.9564", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:53:05.9564", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:53:05.9564", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:53:05.9564", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:53:07.0023", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:53:07.0023", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:53:07.0023", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 1047.7528, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:53:07.0023", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:53:07.0023", "level": "INFO", "ElapsedMilliseconds": 1049.1056, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:54:05.2864", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:54:05.2864", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:54:05.2864", "level": "INFO", "ElapsedMilliseconds": 2.4636, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:54:05.3044", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:54:05.3044", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:54:05.3044", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:54:05.3044", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:54:05.3130", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:54:05.3130", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:54:05.3130", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:54:05.3130", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:54:05.3130", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:54:05.3242", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:54:05.3242", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:54:05.3242", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 18.5733, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:54:05.3242", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:54:05.3242", "level": "INFO", "ElapsedMilliseconds": 20.5807, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:54:39.3950", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:54:39.3950", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:54:39.3950", "level": "INFO", "ElapsedMilliseconds": 2.5325, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:54:39.4078", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:54:39.4078", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:54:39.4078", "level": "INFO", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-02 13:54:39.4078", "level": "INFO", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-02 13:54:39.4078", "level": "INFO", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 13:54:39.4078", "level": "INFO", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-02 13:54:39.4078", "level": "INFO", "ElapsedMilliseconds": 9.6714, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:55:11.1421", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:55:11.1421", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:55:11.1421", "level": "INFO", "ElapsedMilliseconds": 0.5952, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:55:11.1511", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 153, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:55:11.1511", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:55:11.1511", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:55:11.1511", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:55:11.2179", "level": "INFO", "elapsed": "1", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:55:11.2179", "level": "INFO", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:55:11.2340", "level": "INFO", "elapsed": "3", "parameters": "@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:55:13.6326", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Register.UserRegisterResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:55:13.6326", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 2481.875, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:55:13.6326", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:55:13.6326", "level": "INFO", "ElapsedMilliseconds": 2482.7043, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:59:09.6935", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:59:09.6935", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:59:09.6972", "level": "INFO", "ElapsedMilliseconds": 3.6985, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:59:09.7125", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 65, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:59:09.7125", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:59:09.7125", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:59:09.7125", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:59:09.7351", "level": "INFO", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:59:09.7351", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:59:09.7351", "level": "INFO", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:59:09.7457", "level": "INFO", "elapsed": "2", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:59:09.7457", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:59:09.7457", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 29.4566, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:59:09.7457", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:59:09.7457", "level": "INFO", "ElapsedMilliseconds": 33.782, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:59:09.7689", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:59:09.7689", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:59:09.7689", "level": "INFO", "ElapsedMilliseconds": 0.2037, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:59:09.7810", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:59:09.7810", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:59:09.7810", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:59:09.7810", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:59:09.7810", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:59:09.7810", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:59:09.7810", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 3.8464, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:59:09.7810", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:59:09.7810", "level": "INFO", "ElapsedMilliseconds": 4.6301, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:59:09.8297", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:59:09.8297", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:59:09.8297", "level": "INFO", "ElapsedMilliseconds": 0.4197, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:59:09.8441", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:59:09.8441", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:59:09.8441", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:59:09.8441", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:59:09.8441", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:59:09.8521", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:59:09.8521", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:59:09.8521", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 7.4804, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:59:09.8521", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:59:09.8521", "level": "INFO", "ElapsedMilliseconds": 8.8748, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:59:18.7093", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:59:18.7093", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:59:18.7102", "level": "INFO", "ElapsedMilliseconds": 0.8563, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:59:18.7266", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:59:18.7266", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:59:18.7266", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:59:18.7266", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:59:18.7266", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:59:18.7266", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:59:18.7266", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:59:18.7266", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:59:18.7421", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:59:18.7421", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:59:18.7421", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:59:18.7421", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 17.2299, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:59:18.7421", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:59:18.7421", "level": "INFO", "ElapsedMilliseconds": 18.4396, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:59:54.5509", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:59:54.5509", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:59:54.5509", "level": "INFO", "ElapsedMilliseconds": 0.247, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 13:59:54.5636", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 13:59:54.5636", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 13:59:54.5636", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 13:59:54.5636", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 13:59:54.5636", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:59:54.5694", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:59:54.5694", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:59:54.5694", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:59:54.5694", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:59:54.5694", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 13:59:54.5694", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 13:59:54.5694", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 15.8883, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 13:59:54.5694", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 13:59:54.5694", "level": "INFO", "ElapsedMilliseconds": 16.9123, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:02:57.4415", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:02:57.4472", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:02:57.4472", "level": "INFO", "ElapsedMilliseconds": 5.8865, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:02:57.4625", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:02:57.4625", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:02:57.4625", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:02:57.4625", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:02:57.4625", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:02:57.4625", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:02:57.4625", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:02:57.4743", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:02:57.4743", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:02:57.4743", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:02:57.4743", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:02:57.4743", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 14.8873, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:02:57.4743", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:02:57.4743", "level": "INFO", "ElapsedMilliseconds": 16.4417, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:03:32.1472", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:03:32.1472", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:03:32.1472", "level": "INFO", "ElapsedMilliseconds": 6.5746, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:03:32.1472", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:03:32.1472", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:03:32.1472", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:03:32.1472", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:03:32.1642", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:03:32.1642", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:03:32.1642", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:03:32.1642", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:03:32.1642", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:03:32.1758", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:03:32.1758", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:03:32.1758", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 15.9648, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:03:32.1758", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:03:32.1758", "level": "INFO", "ElapsedMilliseconds": 17.5939, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:03:51.8829", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:03:51.8829", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:03:51.8829", "level": "INFO", "ElapsedMilliseconds": 0.9883, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:03:51.9697", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:03:51.9697", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:03:51.9697", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:03:51.9697", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:03:51.9739", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:03:51.9739", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:03:51.9739", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:03:51.9739", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:03:51.9739", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:03:51.9739", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:03:51.9739", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:03:51.9739", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 14.3513, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:03:51.9739", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:03:51.9739", "level": "INFO", "ElapsedMilliseconds": 15.3382, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:12:22.6299", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-02 14:12:22.6299", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:12:22.6341", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:22.6341", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:22.6341", "level": "INFO", "ElapsedMilliseconds": 41.3741, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:12:22.6341", "level": "INFO", "ElapsedMilliseconds": 6.5937, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-02 14:12:22.6616", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-02 14:12:22.6616", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:12:22.6616", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:22.6616", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:22.6616", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:12:22.6616", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:12:22.6616", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:12:22.6616", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:12:22.6834", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:22.6834", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:12:22.6834", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 21.5431, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:12:22.6834", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:12:22.6834", "level": "INFO", "ElapsedMilliseconds": 22.3235, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:12:22.6918", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:22.6918", "level": "INFO", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:22.6918", "level": "INFO", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:22.6918", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:12:22.6918", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 37.9718, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:12:22.6918", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:12:22.6918", "level": "INFO", "ElapsedMilliseconds": 43.2332, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-02 14:12:24.6473", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:12:24.6473", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:24.6473", "level": "INFO", "ElapsedMilliseconds": 0.6435, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:12:24.6888", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:12:24.6888", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:24.6888", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:12:24.6888", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:12:24.6949", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:24.6949", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:24.6949", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:24.6949", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:24.7068", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:24.7068", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:24.7068", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:12:24.7068", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 18.8324, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:12:24.7068", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:12:24.7068", "level": "INFO", "ElapsedMilliseconds": 20.3377, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:12:27.2070", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=2", "EventId": 1 }
{ "time": "2024-04-02 14:12:27.2077", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:27.2077", "level": "INFO", "ElapsedMilliseconds": 0.8518, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=2", "EventId": 2 }
{ "time": "2024-04-02 14:12:27.2389", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:12:27.2389", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:27.2389", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:12:27.2389", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:12:27.2389", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:27.2389", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:12:27.2389", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 3.9892, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:12:27.2389", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:12:27.2389", "level": "INFO", "ElapsedMilliseconds": 5.1568, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:12:27.2389", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=2", "EventId": 1 }
{ "time": "2024-04-02 14:12:27.2389", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:27.2389", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:12:27.2389", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:12:27.2389", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:27.2389", "level": "INFO", "elapsed": "0", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:27.2389", "level": "INFO", "elapsed": "0", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:27.2389", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:12:27.2389", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 7.8268, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:12:27.2389", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:12:27.2389", "level": "INFO", "ElapsedMilliseconds": 8.8235, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=2", "EventId": 2 }
{ "time": "2024-04-02 14:12:29.2317", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:12:29.2317", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:29.2317", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:12:29.2317", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:12:29.2373", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:29.2373", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:29.2373", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:29.2373", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:29.2373", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:29.2373", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:29.2373", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:12:29.2373", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 16.6317, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:12:29.2373", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:12:29.2373", "level": "INFO", "ElapsedMilliseconds": 18.1155, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:12:39.3455", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-02 14:12:39.3455", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:12:39.3455", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:39.3455", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:39.3468", "level": "INFO", "ElapsedMilliseconds": 0.816, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:12:39.3468", "level": "INFO", "ElapsedMilliseconds": 1.7087, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-02 14:12:39.3468", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-02 14:12:39.3468", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:39.3468", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:12:39.3468", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:12:39.3468", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:12:39.3468", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:39.3468", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:12:39.3468", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:12:39.3468", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:39.3954", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:39.3954", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:12:39.3954", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 36.753, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:12:39.3954", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:12:39.3954", "level": "INFO", "ElapsedMilliseconds": 37.4618, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:12:39.3954", "level": "INFO", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:39.3954", "level": "INFO", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:39.3954", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:12:39.3954", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 44.3658, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:12:39.3954", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:12:39.3954", "level": "INFO", "ElapsedMilliseconds": 45.3107, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-02 14:12:43.7472", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:12:43.7472", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:43.7472", "level": "INFO", "ElapsedMilliseconds": 0.4088, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:12:43.7854", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:12:43.7854", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:43.7854", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:12:43.7854", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:12:43.7912", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:43.7912", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:43.7912", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:43.8002", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:43.8002", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:43.8002", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:43.8002", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:12:43.8002", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 17.4848, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:12:43.8002", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:12:43.8002", "level": "INFO", "ElapsedMilliseconds": 19.1029, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:12:46.1762", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=2", "EventId": 1 }
{ "time": "2024-04-02 14:12:46.1762", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:12:46.1762", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:46.1762", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:46.1762", "level": "INFO", "ElapsedMilliseconds": 1.1825, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=2", "EventId": 2 }
{ "time": "2024-04-02 14:12:46.1762", "level": "INFO", "ElapsedMilliseconds": 0.1488, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:12:46.1762", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=2", "EventId": 1 }
{ "time": "2024-04-02 14:12:46.1762", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:12:46.1762", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:46.1762", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:46.1762", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:12:46.1762", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:12:46.1762", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:12:46.1762", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:12:46.1992", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:46.1992", "level": "INFO", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:46.1992", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:12:46.1992", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 6.6349, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:12:46.1992", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:12:46.1992", "level": "INFO", "ElapsedMilliseconds": 7.693, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:12:46.1992", "level": "INFO", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:46.2064", "level": "INFO", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:46.2064", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:12:46.2064", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 12.468, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:12:46.2064", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:12:46.2064", "level": "INFO", "ElapsedMilliseconds": 13.527, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=2", "EventId": 2 }
{ "time": "2024-04-02 14:12:50.0078", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:12:50.0078", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:50.0078", "level": "INFO", "ElapsedMilliseconds": 0.9889, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:12:50.0078", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:12:50.0078", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:50.0078", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:12:50.0252", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:12:50.0252", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:50.0252", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:50.0346", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:50.0346", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:50.0346", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:50.0346", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:50.0346", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:12:50.0346", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 16.3533, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:12:50.0346", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:12:50.0346", "level": "INFO", "ElapsedMilliseconds": 17.5334, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:12:51.6754", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-02 14:12:51.6754", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:51.6754", "level": "INFO", "ElapsedMilliseconds": 0.3385, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-02 14:12:51.6754", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:12:51.6754", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:51.6754", "level": "INFO", "ElapsedMilliseconds": 0.2162, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:12:51.6957", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-02 14:12:51.6957", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:51.6957", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:12:51.6957", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:51.6957", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:12:51.6957", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:12:51.6957", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:12:51.6957", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:12:51.6957", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:51.6957", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:12:51.6957", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:51.6957", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 6.9427, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:12:51.6957", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:12:51.6957", "level": "INFO", "ElapsedMilliseconds": 7.9635, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:12:51.7068", "level": "INFO", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:51.7068", "level": "INFO", "elapsed": "0", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:51.7068", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:12:51.7068", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 12.417, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:12:51.7068", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:12:51.7068", "level": "INFO", "ElapsedMilliseconds": 13.6529, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-02 14:12:54.6808", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:12:54.6808", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:12:54.6808", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:12:54.6808", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:12:54.6808", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:54.6908", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:54.6908", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:54.6908", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:54.6908", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:54.6908", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:12:54.6908", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:12:54.6908", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 16.4229, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:12:54.6908", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:12:54.6908", "level": "INFO", "ElapsedMilliseconds": 18.8319, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:13:07.3204", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:13:07.3204", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:13:07.3204", "level": "INFO", "ElapsedMilliseconds": 2.067, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:13:07.3204", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:13:07.3204", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:13:07.3204", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:13:07.3204", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:13:07.3404", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:07.3404", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:07.3404", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:07.3404", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:07.3488", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:07.3488", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:07.3488", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:13:07.3488", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 12.7636, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:13:07.3488", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:13:07.3488", "level": "INFO", "ElapsedMilliseconds": 13.4076, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:13:10.7913", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-02 14:13:10.7913", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:13:10.7913", "level": "INFO", "ElapsedMilliseconds": 1.1243, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-02 14:13:10.7913", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:13:10.7913", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:13:10.7913", "level": "INFO", "ElapsedMilliseconds": 0.3207, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:13:10.7913", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-02 14:13:10.7913", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:13:10.7913", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:13:10.7913", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:13:10.8083", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:13:10.8083", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:10.8083", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:13:10.8083", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:13:10.8083", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:13:10.8083", "level": "INFO", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:10.8083", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:10.8161", "level": "INFO", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:10.8161", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:13:10.8161", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:13:10.8161", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 6.0751, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:13:10.8161", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 11.3633, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:13:10.8161", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:13:10.8161", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:13:10.8161", "level": "INFO", "ElapsedMilliseconds": 12.4624, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-02 14:13:10.8161", "level": "INFO", "ElapsedMilliseconds": 8.1368, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:13:12.3263", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:13:12.3272", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:13:12.3272", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:13:12.3272", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:13:12.3322", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:12.3322", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:12.3322", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:12.3322", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:12.3322", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:12.3322", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:12.3322", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:13:12.3322", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 17.1006, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:13:12.3322", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:13:12.3322", "level": "INFO", "ElapsedMilliseconds": 18.9968, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:13:21.0973", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:13:21.0973", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:13:21.0973", "level": "INFO", "ElapsedMilliseconds": 1.0946, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:13:21.1157", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:13:21.1157", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:13:21.1157", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:13:21.1157", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:13:21.1157", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:21.1157", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:21.1157", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:21.1286", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:21.1286", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:21.1286", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:13:21.1286", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:13:21.1286", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 16.8492, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:13:21.1286", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:13:21.1286", "level": "INFO", "ElapsedMilliseconds": 17.6537, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:17:54.3650", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:17:54.3650", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:17:54.3650", "level": "INFO", "ElapsedMilliseconds": 3.6373, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:17:54.4214", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:17:54.4214", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:17:54.4214", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:17:54.4214", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:17:54.5639", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:17:54.5671", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:17:54.5671", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:17:54.5671", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:17:54.5671", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:17:54.5671", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:17:54.5671", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:17:54.5671", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 152.2658, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:17:54.5671", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:17:54.5671", "level": "INFO", "ElapsedMilliseconds": 153.8343, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:18:09.3474", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:18:09.3474", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:18:09.3474", "level": "INFO", "ElapsedMilliseconds": 0.3662, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:18:09.3844", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:18:09.3844", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:18:09.3844", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:18:09.3844", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:18:09.3844", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:18:09.3844", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:18:09.3844", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:18:09.3937", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:18:09.3937", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:18:09.3937", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:18:09.3937", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:18:09.3937", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 12.8952, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:18:09.3937", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:18:09.3937", "level": "INFO", "ElapsedMilliseconds": 13.637, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:20:44.6808", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:20:44.6808", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:20:44.6808", "level": "INFO", "ElapsedMilliseconds": 2.4485, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:20:44.7356", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:20:44.7356", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:20:44.7356", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:20:44.7356", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:20:44.7413", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:20:44.7413", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:20:44.7413", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:20:44.7413", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:20:44.7413", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:20:44.7538", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:20:44.7538", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:20:44.7538", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 17.8021, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:20:44.7538", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:20:44.7538", "level": "INFO", "ElapsedMilliseconds": 18.9907, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:20:50.8819", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:20:50.8819", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:20:50.8819", "level": "INFO", "ElapsedMilliseconds": 1.5704, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:20:50.8819", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:20:50.8819", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:20:50.8819", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:20:50.8819", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:20:50.9114", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:20:50.9114", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:20:50.9114", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:20:50.9114", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:20:50.9114", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:20:50.9114", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:20:50.9114", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:20:50.9114", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 17.2483, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:20:50.9114", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:20:50.9114", "level": "INFO", "ElapsedMilliseconds": 18.4615, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:20:58.4294", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:20:58.4294", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:20:58.4294", "level": "INFO", "ElapsedMilliseconds": 0.8469, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:20:58.4587", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 146, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:20:58.4587", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:20:58.4587", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:20:58.4587", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:20:58.4868", "level": "INFO", "elapsed": "1", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:20:58.4889", "level": "INFO", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:20:58.4889", "level": "INFO", "elapsed": "2", "parameters": "@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:21:01.0084", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Register.UserRegisterResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:21:01.0084", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 2549.5945, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:21:01.0084", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:21:01.0084", "level": "INFO", "ElapsedMilliseconds": 2550.0906, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:22:12.9595", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:22:12.9595", "level": "INFO", "ElapsedMilliseconds": 5.676, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:22:12.9978", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:22:13.0907", "level": "INFO", "ElapsedMilliseconds": 92.9451, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:22:13.2536", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:22:13.2653", "level": "INFO", "ElapsedMilliseconds": 11.7084, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:24:44.7391", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:24:44.7391", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:24:44.7391", "level": "INFO", "ElapsedMilliseconds": 4.1268, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:24:44.7736", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:24:44.7736", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:24:44.7736", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:24:44.7736", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:24:44.8008", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:24:44.8008", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:24:44.8008", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:24:44.8008", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:24:44.8008", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:24:44.8178", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:24:44.8178", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:24:44.8178", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 43.7805, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:24:44.8178", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:24:44.8178", "level": "INFO", "ElapsedMilliseconds": 44.6979, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:29:57.9162", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:29:57.9162", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:29:57.9162", "level": "INFO", "ElapsedMilliseconds": 7.5933, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:29:58.2717", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:29:58.2717", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:29:58.2717", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:29:58.2717", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:29:58.2963", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:29:58.2963", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:29:58.3009", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:29:58.3009", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:29:58.3009", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:29:58.3009", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:29:58.3009", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:29:58.3009", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 31.8838, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:29:58.3009", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:29:58.3009", "level": "INFO", "ElapsedMilliseconds": 35.1402, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:31:21.7354", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:31:21.7354", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:31:21.7354", "level": "INFO", "ElapsedMilliseconds": 1.0325, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:31:21.7525", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:31:21.7525", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:31:21.7525", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:31:21.7525", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:31:21.7558", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:31:21.7558", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:31:21.7558", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:31:21.7558", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:31:21.7558", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:31:21.7558", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:31:21.7558", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:31:21.7558", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 12.2668, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:31:21.7558", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:31:21.7558", "level": "INFO", "ElapsedMilliseconds": 12.9946, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:32:47.2408", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:32:47.2408", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:32:47.2408", "level": "INFO", "ElapsedMilliseconds": 3.2241, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:32:47.2408", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:32:47.2408", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:32:47.2408", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:32:47.2408", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:32:47.2656", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:32:47.2656", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:32:47.2698", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:32:47.2698", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:32:47.2698", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:32:47.2698", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:32:47.2698", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:32:47.2698", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 15.7109, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:32:47.2698", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:32:47.2698", "level": "INFO", "ElapsedMilliseconds": 16.2368, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:32:51.5540", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:32:51.5540", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:32:51.5540", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:32:51.5540", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:32:51.5540", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:32:51.5736", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:32:51.5736", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:32:51.5924", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:32:51.6074", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:32:51.6268", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:32:51.6268", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:32:51.6268", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 72.5018, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:32:51.6268", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:32:51.6268", "level": "INFO", "ElapsedMilliseconds": 73.2498, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:33:59.7359", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:33:59.7415", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:33:59.7415", "level": "INFO", "ElapsedMilliseconds": 5.8896, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:33:59.7808", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:33:59.7808", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:33:59.7808", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:33:59.7808", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:33:59.7846", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:33:59.7846", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:33:59.7846", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:33:59.7846", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:33:59.7846", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:33:59.7846", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:33:59.7846", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:33:59.7846", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 14.1456, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:33:59.7846", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:33:59.7846", "level": "INFO", "ElapsedMilliseconds": 14.8916, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:34:12.7584", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:34:12.7584", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:34:12.7584", "level": "INFO", "ElapsedMilliseconds": 0.2665, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:34:12.7584", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:34:12.7584", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:34:12.7745", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:34:12.7745", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:34:12.7745", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:34:12.7745", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:34:12.7745", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:34:12.7845", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:34:12.7845", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:34:12.7845", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:34:12.7845", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:34:12.7845", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 13.7931, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:34:12.7845", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:34:12.7845", "level": "INFO", "ElapsedMilliseconds": 15.0248, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:34:17.6428", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:34:17.6442", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:34:17.6442", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:34:17.6442", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:34:17.6442", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:34:17.6442", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:34:17.6597", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:34:17.6597", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:34:17.6597", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:34:17.6597", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:34:17.6597", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:34:17.6597", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 23.2764, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:34:17.6597", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:34:17.6597", "level": "INFO", "ElapsedMilliseconds": 25.4865, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:34:53.4349", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:34:53.4349", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:34:53.4349", "level": "INFO", "ElapsedMilliseconds": 4.1712, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:34:53.4527", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:34:53.4527", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:34:53.4527", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:34:53.4527", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:34:53.4570", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:34:53.4570", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:34:53.4570", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:34:53.4570", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:34:53.4570", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:34:53.4570", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:34:53.4570", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:34:53.4570", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 14.6069, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:34:53.4570", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:34:53.4570", "level": "INFO", "ElapsedMilliseconds": 15.5318, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:38:55.2263", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:38:55.2263", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:38:55.2263", "level": "INFO", "ElapsedMilliseconds": 3.3119, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:38:55.2263", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:38:55.2263", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:38:55.2402", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:38:55.2402", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:38:55.2615", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:38:55.2615", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:38:55.2615", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:38:55.2615", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:38:55.2695", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:38:55.2695", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:38:55.2695", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:38:55.2695", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 31.422, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:38:55.2695", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:38:55.2695", "level": "INFO", "ElapsedMilliseconds": 32.3414, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:39:30.5996", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:39:30.5996", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:39:30.5996", "level": "INFO", "ElapsedMilliseconds": 1.5714, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:39:30.5996", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:39:30.5996", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:39:30.5996", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:39:30.5996", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:39:30.6146", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:39:30.6146", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:39:30.6146", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:39:30.6146", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:39:30.6146", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:39:30.6659", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:39:30.6659", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:39:30.6659", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 54.334, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:39:30.6659", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:39:30.6659", "level": "INFO", "ElapsedMilliseconds": 55.2621, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:40:01.7042", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:40:01.7078", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:40:01.7078", "level": "INFO", "ElapsedMilliseconds": 4.883, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:40:02.1549", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:40:02.1549", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:40:02.1549", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:40:02.1549", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:40:02.1595", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:40:02.1595", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:40:02.1595", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:40:02.1595", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:40:02.1595", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:40:02.1595", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:40:02.1595", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:40:02.1595", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 15.3138, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:40:02.1595", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:40:02.1595", "level": "INFO", "ElapsedMilliseconds": 16.2334, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:41:07.5907", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:41:07.5907", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:41:07.5907", "level": "INFO", "ElapsedMilliseconds": 2.939, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:41:07.9130", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:41:07.9130", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:41:07.9130", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:41:07.9130", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:41:07.9205", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:41:07.9205", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:41:07.9254", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:41:07.9254", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:41:07.9254", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:41:07.9254", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:41:07.9254", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:41:07.9254", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 17.3415, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:41:07.9254", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:41:07.9254", "level": "INFO", "ElapsedMilliseconds": 18.9136, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:41:26.5239", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:41:26.5245", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:41:26.5245", "level": "INFO", "ElapsedMilliseconds": 0.9136, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:41:26.5506", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:41:26.5506", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:41:26.5506", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:41:26.5506", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:41:26.5554", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:41:26.5554", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:41:26.5554", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:41:26.5554", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:41:26.5554", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:41:26.5668", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:41:26.5668", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:41:26.5668", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 15.5135, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:41:26.5668", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:41:26.5668", "level": "INFO", "ElapsedMilliseconds": 16.704, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:44:55.4228", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:44:55.4228", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:44:55.4228", "level": "INFO", "ElapsedMilliseconds": 5.4143, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:44:55.4353", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 143, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:44:55.4353", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:44:55.4353", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:44:55.4353", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:44:55.4826", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:44:55.5124", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 76.6731, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:44:55.5124", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:44:55.5124", "level": "INFO", "ElapsedMilliseconds": 77.3492, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:45:24.4762", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:45:24.4762", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:45:24.4762", "level": "INFO", "ElapsedMilliseconds": 2.2172, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:45:24.5251", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:45:24.5251", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:45:24.5251", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:45:24.5251", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:45:24.5647", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:45:24.5685", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:45:24.5685", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:45:24.5685", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:45:24.5685", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:45:24.5685", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:45:24.5685", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:45:24.5685", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 50.124, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:45:24.5685", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:45:24.5685", "level": "INFO", "ElapsedMilliseconds": 59.2552, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:45:29.4488", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:45:29.4488", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:45:29.4488", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:45:29.4488", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:45:29.4488", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:45:29.4488", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:45:29.4571", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:45:29.4571", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:45:29.4571", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:45:29.4571", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:45:29.4571", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:45:29.4571", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 13.4695, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:45:29.4571", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:45:29.4571", "level": "INFO", "ElapsedMilliseconds": 15.0898, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:46:31.7467", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:46:31.7467", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:46:31.7467", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:46:31.7467", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:46:31.7663", "level": "INFO", "elapsed": "2", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:46:31.7693", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:46:31.7693", "level": "INFO", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:46:31.7693", "level": "INFO", "elapsed": "1", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:46:31.7693", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:46:31.7693", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 26.1273, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:46:31.7693", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:46:31.7693", "level": "INFO", "ElapsedMilliseconds": 33.8964, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:47:24.8026", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:47:24.8026", "level": "INFO", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 14:47:24.8026", "level": "INFO", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-02 14:47:24.8026", "level": "INFO", "ElapsedMilliseconds": 13.3986, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:47:28.7088", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:47:28.7088", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:47:28.7088", "level": "INFO", "ElapsedMilliseconds": 12.6023, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:47:28.7548", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:47:28.7548", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:47:28.7548", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:47:28.7548", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:47:28.7548", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:47:28.7548", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:47:28.7548", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:47:28.7548", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:47:28.7548", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:47:28.7548", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:47:28.7548", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:47:28.7548", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 13.0758, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:47:28.7548", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:47:28.7548", "level": "INFO", "ElapsedMilliseconds": 13.7155, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:47:43.4170", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:47:43.4170", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:47:43.4170", "level": "INFO", "ElapsedMilliseconds": 3.102, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:47:43.4306", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:47:43.4306", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:47:43.4306", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:47:43.4306", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:47:43.4306", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:47:43.4448", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:47:43.4448", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:47:43.4585", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:47:43.4585", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:47:43.4585", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:47:43.4585", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:47:43.4585", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 36.0323, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:47:43.4585", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:47:43.4585", "level": "INFO", "ElapsedMilliseconds": 37.9443, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:48:24.4741", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:48:24.4741", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:48:24.4741", "level": "INFO", "ElapsedMilliseconds": 0.6821, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:48:24.4741", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:48:24.4741", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:48:24.4912", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:48:24.4912", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:48:24.4912", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:48:24.4912", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:48:24.4912", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:48:24.5043", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:48:24.5043", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:48:24.5043", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:48:24.5043", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:48:24.5043", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 17.4882, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:48:24.5043", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:48:24.5043", "level": "INFO", "ElapsedMilliseconds": 25.1011, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:48:33.0703", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:48:33.0932", "level": "INFO", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-02 14:48:33.0932", "level": "INFO", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-02 14:48:33.0932", "level": "INFO", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 14:48:33.0932", "level": "INFO", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-02 14:48:33.0932", "level": "INFO", "ElapsedMilliseconds": 24.3429, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:48:35.1862", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:48:35.1862", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:48:35.1862", "level": "INFO", "ElapsedMilliseconds": 0.5334, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:48:35.1985", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:48:35.1985", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:48:35.1985", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:48:35.1985", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:48:35.1985", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:48:35.1985", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:48:35.1985", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:48:35.2075", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:48:35.2075", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:48:35.2075", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:48:35.2075", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:48:35.2075", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 13.14, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:48:35.2075", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:48:35.2075", "level": "INFO", "ElapsedMilliseconds": 13.6528, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:48:50.0658", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:48:50.0658", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:48:50.0658", "level": "INFO", "ElapsedMilliseconds": 0.5807, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:48:50.0658", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:48:50.0658", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:48:50.0658", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:48:50.0658", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:48:50.0826", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:48:50.0826", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:48:50.0826", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:48:50.0826", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:48:50.0826", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:48:50.0826", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:48:50.0826", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:48:50.0826", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 14.7513, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:48:50.0826", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:48:50.0826", "level": "INFO", "ElapsedMilliseconds": 15.8337, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:49:25.3280", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:49:25.3341", "level": "INFO", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-02 14:49:25.3341", "level": "INFO", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-02 14:49:25.3341", "level": "INFO", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 14:49:25.3341", "level": "INFO", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-02 14:49:25.3341", "level": "INFO", "ElapsedMilliseconds": 11.3191, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:49:26.6590", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:49:26.6601", "level": "INFO", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-02 14:49:26.6601", "level": "INFO", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-02 14:49:26.6601", "level": "INFO", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 14:49:26.6601", "level": "INFO", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-02 14:49:26.6601", "level": "INFO", "ElapsedMilliseconds": 1.5194, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:49:40.0075", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:49:40.0075", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:49:40.0075", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:49:40.0075", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:49:40.0212", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:49:40.0530", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:49:40.0530", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:49:40.0530", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:49:40.0530", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:49:40.0530", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:49:40.0530", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 52.7046, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:49:40.0530", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:49:40.0530", "level": "INFO", "ElapsedMilliseconds": 53.7688, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:50:34.4304", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:50:34.4304", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:50:34.4304", "level": "INFO", "ElapsedMilliseconds": 1.0849, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:50:34.4432", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:50:34.4432", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:50:34.4432", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:50:34.4432", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:50:34.4817", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:50:34.4817", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:50:34.4884", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:50:34.4884", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:50:34.4884", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:50:34.4884", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:50:34.4884", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:50:34.4884", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 54.1807, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:50:34.4884", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:50:34.4884", "level": "INFO", "ElapsedMilliseconds": 55.1138, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:50:51.2644", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:50:51.2644", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:50:51.2644", "level": "INFO", "ElapsedMilliseconds": 2.8551, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:50:51.2790", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:50:51.2790", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:50:51.2790", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:50:51.2790", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:50:51.2790", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:50:51.2847", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:50:51.2847", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:50:51.2847", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:50:51.2847", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:50:51.2847", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:50:51.2847", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:50:51.2847", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 13.8661, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:50:51.2847", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:50:51.2847", "level": "INFO", "ElapsedMilliseconds": 14.5641, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:51:06.3990", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:51:06.3990", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:51:06.3990", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:51:06.3990", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:51:06.3990", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:51:06.3990", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:51:06.4105", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:51:06.4105", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:51:06.4105", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:51:06.4105", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:51:06.4105", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 15.4893, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:51:06.4105", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:51:06.4105", "level": "INFO", "ElapsedMilliseconds": 16.2779, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:51:12.3622", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:51:12.3632", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:51:12.3632", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:51:12.3632", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:51:12.3632", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:51:12.3632", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:51:12.3632", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:51:12.3632", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:51:12.3794", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:51:12.3794", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:51:12.3794", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 16.308, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:51:12.3794", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:51:12.3794", "level": "INFO", "ElapsedMilliseconds": 17.5774, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:51:13.6268", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:51:13.6268", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:51:13.6268", "level": "INFO", "ElapsedMilliseconds": 0.4332, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:51:13.6743", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:51:13.6743", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:51:13.6750", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:51:13.6750", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:51:13.6750", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:51:13.6750", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:51:13.6750", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:51:13.6750", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:51:13.6750", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:51:13.6935", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:51:13.6935", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:51:13.6935", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 18.6763, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:51:13.6935", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:51:13.6935", "level": "INFO", "ElapsedMilliseconds": 21.245, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:51:43.4848", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 14:51:43.9209", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 14:51:43.9265", "level": "INFO" }
{ "time": "2024-04-02 14:51:43.9265", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 14:51:43.9265", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 14:51:44.0032", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:51:44.0709", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 14:51:44.4922", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:51:44.5323", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:51:44.7071", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:51:44.9444", "level": "INFO", "ElapsedMilliseconds": 236.6479, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:51:44.9444", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:51:44.9444", "level": "INFO", "ElapsedMilliseconds": 1.8189, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:51:44.9444", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:51:45.0277", "level": "INFO", "ElapsedMilliseconds": 77.5195, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:51:45.1068", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:51:45.2769", "level": "INFO", "ElapsedMilliseconds": 170.1506, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:51:50.3560", "level": "INFO", "elapsed": "50", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:51:53.4802", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:51:59.5536", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:52:01.6600", "level": "INFO", "elapsed": "3", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:52:04.7282", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:52:06.0087", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:52:08.3139", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:52:09.4221", "level": "INFO", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:52:11.5431", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:52:12.6273", "level": "INFO", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:52:15.1000", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:52:19.4091", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:52:20.0473", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:52:20.7284", "level": "INFO", "ElapsedMilliseconds": 1507.403, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:52:20.7455", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 36207.3819, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:52:20.7455", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:52:20.7644", "level": "INFO", "ElapsedMilliseconds": 36770.6098, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:52:20.7945", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 157, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:52:20.7945", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:52:20.7945", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:52:20.8118", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:52:35.0066", "level": "INFO", "elapsed": "2", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:52:35.0066", "level": "INFO", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:52:35.1416", "level": "INFO", "elapsed": "15", "parameters": "@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:52:37.9945", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Register.UserRegisterResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:52:37.9945", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 17186.981, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:52:37.9945", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:52:37.9945", "level": "INFO", "ElapsedMilliseconds": 17207.4372, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:52:58.3388", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:52:58.3388", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:52:58.3388", "level": "INFO", "ElapsedMilliseconds": 2.0722, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:52:58.4328", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:52:58.4328", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:52:58.4328", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:52:58.4328", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:54:19.2715", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:54:19.2715", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:54:19.2715", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:54:19.2715", "level": "INFO", "ElapsedMilliseconds": 1.8687, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:54:19.2715", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:54:19.2715", "level": "INFO", "ElapsedMilliseconds": 2.1657, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:54:19.2715", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:54:19.2715", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:54:19.2715", "level": "INFO", "ElapsedMilliseconds": 0.4192, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:54:19.2715", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:19.2715", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:19.2715", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:19.2856", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:19.2856", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:19.2856", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:19.2856", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:54:19.2856", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:54:19.2856", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:19.2856", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:54:19.2856", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 64, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:54:19.2856", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:54:19.2856", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:54:19.2856", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:54:19.2856", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:54:19.2856", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:19.2856", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:54:19.2856", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:54:19.2856", "level": "INFO", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:54:19.2856", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:54:19.3017", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:21.3170", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:21.3170", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:54:21.3170", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:21.3698", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 82928.9961, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:54:21.3698", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:54:21.3698", "level": "INFO", "ElapsedMilliseconds": 82937.5385, "StatusCode": 499, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:54:21.3698", "level": "INFO", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:21.3698", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:21.3790", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:21.3790", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:54:21.4160", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:21.4160", "level": "INFO", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:21.4160", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 2118.3739, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:54:21.4160", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:54:21.4160", "level": "INFO", "ElapsedMilliseconds": 2125.8526, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:54:21.4160", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:21.4160", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:21.4271", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:21.4271", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:21.4271", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:21.4271", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:21.4271", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:21.4430", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:21.4430", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:54:21.4430", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 2146.4033, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:54:21.4430", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:54:21.4430", "level": "INFO", "ElapsedMilliseconds": 2151.8873, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:54:21.4573", "level": "INFO", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:21.4573", "level": "INFO", "elapsed": "1", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:21.4573", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:54:21.4573", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 2161.1031, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:54:21.4573", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:54:21.4573", "level": "INFO", "ElapsedMilliseconds": 2169.9415, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:54:21.4978", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:54:21.4978", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:54:21.4978", "level": "INFO", "ElapsedMilliseconds": 0.415, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:54:21.5518", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:54:21.5518", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:54:21.5518", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:54:21.5518", "level": "INFO", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:54:21.5605", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:21.5605", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:54:21.5605", "level": "INFO", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 11.2911, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:54:21.5605", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:54:21.5656", "level": "INFO", "ElapsedMilliseconds": 13.8177, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:54:38.3956", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:54:38.3956", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:54:38.3956", "level": "INFO", "ElapsedMilliseconds": 2.2608, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:54:38.4468", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:54:38.4468", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:54:38.4468", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:54:38.4468", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:54:54.8896", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:54.8938", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:54.8938", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:54.8938", "level": "INFO", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:54.8938", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:54.8938", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:54.9093", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:54.9093", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:54.9093", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:54.9093", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:54:54.9093", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:54:54.9093", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 16469.2138, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:54:54.9093", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:54:54.9093", "level": "INFO", "ElapsedMilliseconds": 16471.261, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:55:20.3571", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:55:20.3571", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:55:20.3571", "level": "INFO", "ElapsedMilliseconds": 0.7805, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:55:20.3715", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:55:20.3715", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:55:20.3715", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:55:20.3715", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:56:16.9527", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:56:16.9590", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:56:16.9590", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:56:16.9590", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:56:16.9590", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:56:16.9727", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:56:16.9727", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:56:16.9727", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:56:16.9727", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:56:17.0167", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:56:17.0167", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 14:56:17.0167", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 56644.4684, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:56:17.0167", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:56:17.0167", "level": "INFO", "ElapsedMilliseconds": 56646.69, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:56:18.2511", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:56:18.2651", "level": "INFO", "ElapsedMilliseconds": 14.5505, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:56:18.2807", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:56:18.2807", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:56:18.2807", "level": "INFO", "ElapsedMilliseconds": 0.3532, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:56:18.2912", "level": "INFO", "ElapsedMilliseconds": 10.6204, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:56:18.3448", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:56:18.3591", "level": "INFO", "ElapsedMilliseconds": 14.3977, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:58:10.4600", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:58:10.4600", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:58:10.4600", "level": "INFO", "ElapsedMilliseconds": 5.8062, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:58:10.5619", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:58:10.5619", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:58:10.5619", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:58:10.5619", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:58:10.5801", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:58:10.6336", "level": "ERROR", "contextType": "DataAccessLayer.Persistence.ProjectDbContext", "newline": "\r\n", "error": {"Type":"System.InvalidCastException", "TargetSite":"Void ThrowInvalidCastException_NoValue(Npgsql.BackendMessages.FieldDescription)", "Message":"Column 'CreatedAt' is null.", "Data":{}, "Source":"Npgsql", "HResult":-2147467262, "StackTrace":"   at Npgsql.ThrowHelper.ThrowInvalidCastException_NoValue(FieldDescription field)\r\n   at Npgsql.NpgsqlDataReader.DbNullValueOrThrow[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetFieldValueCore[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetDateTime(Int32 ordinal)\r\n   at lambda_method359(Closure, QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()"}, "EventId": 10100, "EventName": "Microsoft.EntityFrameworkCore.Query.QueryIterationFailed" }
{ "time": "2024-04-02 14:59:35.2326", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 84666.1731, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 14:59:35.2326", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 14:59:35.2398", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:59:35.2398", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:59:35.2398", "level": "INFO", "ElapsedMilliseconds": 2.1518, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:59:35.2398", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:59:35.2398", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:59:35.2398", "level": "INFO", "ElapsedMilliseconds": 0.3583, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:59:35.2552", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:59:35.2552", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:59:35.2552", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:59:35.2552", "level": "ERROR", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-02 14:59:35.2552", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:59:36.2912", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:59:36.2912", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:59:36.2912", "level": "INFO", "ElapsedMilliseconds": 85735.9803, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 14:59:36.2912", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:59:36.3020", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:59:36.3020", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:59:36.3020", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 14:59:36.3020", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 14:59:36.3020", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 14:59:36.3020", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 14:59:36.3020", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:59:36.3020", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:59:36.3020", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:59:36.3180", "level": "ERROR", "contextType": "DataAccessLayer.Persistence.ProjectDbContext", "newline": "\r\n", "error": {"Type":"System.InvalidCastException", "TargetSite":"Void ThrowInvalidCastException_NoValue(Npgsql.BackendMessages.FieldDescription)", "Message":"Column 'CreatedAt' is null.", "Data":{}, "Source":"Npgsql", "HResult":-2147467262, "StackTrace":"   at Npgsql.ThrowHelper.ThrowInvalidCastException_NoValue(FieldDescription field)\r\n   at Npgsql.NpgsqlDataReader.DbNullValueOrThrow[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetFieldValueCore[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetDateTime(Int32 ordinal)\r\n   at lambda_method359(Closure, QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()"}, "EventId": 10100, "EventName": "Microsoft.EntityFrameworkCore.Query.QueryIterationFailed" }
{ "time": "2024-04-02 14:59:36.3180", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 14:59:36.3180", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:00:04.7793", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:00:04.7793", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 28475.4578, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:00:04.7793", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 15:00:04.7793", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:00:04.7856", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 29522.9983, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:00:04.7856", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:00:04.7856", "level": "INFO", "ElapsedMilliseconds": 29530.8828, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:00:04.7856", "level": "ERROR", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-02 15:00:04.7856", "level": "INFO", "ElapsedMilliseconds": 28488.0546, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:01:02.4959", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:01:02.4959", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 15:01:02.4959", "level": "INFO", "ElapsedMilliseconds": 6.2097, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:01:02.5097", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:01:02.5097", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 15:01:02.5097", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:01:02.5097", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:01:05.3823", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:01:05.3823", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 15:01:05.3823", "level": "INFO", "ElapsedMilliseconds": 1.0357, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:01:05.8403", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:01:06.2327", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 15:01:06.2327", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:01:06.2327", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:01:18.4476", "level": "INFO", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:01:18.4851", "level": "ERROR", "contextType": "DataAccessLayer.Persistence.ProjectDbContext", "newline": "\r\n", "error": {"Type":"System.InvalidCastException", "TargetSite":"Void ThrowInvalidCastException_NoValue(Npgsql.BackendMessages.FieldDescription)", "Message":"Column 'CreatedAt' is null.", "Data":{}, "Source":"Npgsql", "HResult":-2147467262, "StackTrace":"   at Npgsql.ThrowHelper.ThrowInvalidCastException_NoValue(FieldDescription field)\r\n   at Npgsql.NpgsqlDataReader.DbNullValueOrThrow[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetFieldValueCore[T](Int32 ordinal)\r\n   at lambda_method359(Closure, QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()"}, "EventId": 10100, "EventName": "Microsoft.EntityFrameworkCore.Query.QueryIterationFailed" }
{ "time": "2024-04-02 15:01:19.5245", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 13289.6246, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:01:19.5758", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:01:19.8775", "level": "ERROR", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-02 15:01:19.8795", "level": "INFO", "ElapsedMilliseconds": 14040.262, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:01:19.8795", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:01:22.2067", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:01:24.3817", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:01:25.3834", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:01:27.5965", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:01:28.7505", "level": "INFO", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:01:31.8507", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:01:32.7157", "level": "INFO", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:01:35.1895", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:01:36.2449", "level": "INFO", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:01:41.7706", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 15:01:47.6241", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 45110.471, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:01:47.6241", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:01:47.6241", "level": "INFO", "ElapsedMilliseconds": 45114.8875, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:02:20.4243", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 15:02:20.6098", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 15:02:20.6098", "level": "INFO" }
{ "time": "2024-04-02 15:02:20.6098", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 15:02:20.6195", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 15:02:21.3948", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:02:21.5639", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 15:02:21.6534", "level": "INFO", "ElapsedMilliseconds": 266.9543, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:02:21.6534", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:02:21.6534", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:02:21.6534", "level": "INFO", "ElapsedMilliseconds": 3.5013, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:02:21.7037", "level": "INFO", "ElapsedMilliseconds": 47.4124, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:02:21.8648", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:02:22.0679", "level": "INFO", "ElapsedMilliseconds": 203.1214, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:02:27.5206", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:02:27.5870", "level": "INFO", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 15:02:27.5870", "level": "INFO", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-02 15:02:27.5870", "level": "INFO", "ElapsedMilliseconds": 72.0046, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:02:40.5644", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:02:40.6406", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:02:40.6691", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:02:44.5729", "level": "INFO", "elapsed": "38", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:02:44.6647", "level": "ERROR", "contextType": "DataAccessLayer.Persistence.ProjectDbContext", "newline": "\r\n", "error": {"Type":"System.InvalidCastException", "TargetSite":"Void ThrowInvalidCastException_NoValue(Npgsql.BackendMessages.FieldDescription)", "Message":"Column 'CreatedAt' is null.", "Data":{}, "Source":"Npgsql", "HResult":-2147467262, "StackTrace":"   at Npgsql.ThrowHelper.ThrowInvalidCastException_NoValue(FieldDescription field)\r\n   at Npgsql.NpgsqlDataReader.DbNullValueOrThrow[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetFieldValueCore[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetDateTime(Int32 ordinal)\r\n   at lambda_method5(Closure, QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()"}, "EventId": 10100, "EventName": "Microsoft.EntityFrameworkCore.Query.QueryIterationFailed" }
{ "time": "2024-04-02 15:04:28.7862", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 15:04:28.9629", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 15:04:28.9629", "level": "INFO" }
{ "time": "2024-04-02 15:04:28.9629", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 15:04:28.9629", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 15:04:29.4998", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:04:29.5445", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 15:04:29.6789", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:04:29.7006", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:04:29.7006", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:04:29.8856", "level": "INFO", "ElapsedMilliseconds": 184.6225, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:04:29.9002", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:04:29.9002", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:04:29.9128", "level": "INFO", "ElapsedMilliseconds": 12.5932, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:04:29.9705", "level": "INFO", "ElapsedMilliseconds": 69.5937, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:04:30.1227", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:04:30.3000", "level": "INFO", "ElapsedMilliseconds": 178.0036, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:04:39.5117", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:04:39.5117", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:04:39.5212", "level": "INFO", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:04:40.6236", "level": "INFO", "elapsed": "53", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:04:40.6236", "level": "INFO", "elapsed": "53", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:04:44.3294", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 15:04:44.3294", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 15:05:01.3380", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 31632.5446, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:05:01.3380", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 21809.8028, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:05:01.3380", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:05:01.3380", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:05:01.3380", "level": "INFO", "ElapsedMilliseconds": 21835.104, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:05:01.3380", "level": "INFO", "ElapsedMilliseconds": 31851.9127, "StatusCode": 499, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:05:44.5001", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 169, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:05:44.5131", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 15:05:44.5131", "level": "INFO", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 15:05:44.5302", "level": "INFO", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-02 15:05:44.5302", "level": "INFO", "ElapsedMilliseconds": 31.3017, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:06:10.0692", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:06:10.0692", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:06:10.0692", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:06:12.6635", "level": "INFO", "elapsed": "1", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:06:13.8384", "level": "INFO", "elapsed": "51", "parameters": "@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5)\r\nRETURNING \"Id\", \"CreatedAt\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:06:13.9423", "level": "ERROR", "contextType": "DataAccessLayer.Persistence.ProjectDbContext", "newline": "\r\n", "error": {"Type":"Microsoft.EntityFrameworkCore.DbUpdateException", "Entries":[], "TargetSite":"Void MoveNext()", "Message":"An error occurred while saving the entity changes. See the inner exception for details.", "Data":{}, "InnerException":"System.InvalidCastException: Column 'CreatedAt' is null.\r\n   at Npgsql.ThrowHelper.ThrowInvalidCastException_NoValue(FieldDescription field)\r\n   at Npgsql.NpgsqlDataReader.DbNullValueOrThrow[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetFieldValueCore[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetDateTime(Int32 ordinal)\r\n   at lambda_method270(Closure, DbDataReader, Int32)\r\n   at Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetReaderFieldValue(IProperty property, RelationalDataReader relationalReader, Int32 ordinal, Boolean detailedErrorsEnabled)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommand.PropagateResults(RelationalDataReader relationalReader)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.Consume(RelationalDataReader reader, Boolean async, CancellationToken cancellationToken)", "Source":"Npgsql.EntityFrameworkCore.PostgreSQL", "HResult":-2146233088, "StackTrace":"   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.Consume(RelationalDataReader reader, Boolean async, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)"}, "EventId": 10000, "EventName": "Microsoft.EntityFrameworkCore.Update.SaveChangesFailed" }
{ "time": "2024-04-02 15:06:14.0712", "level": "INFO", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 3986.702, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:06:14.0712", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:06:14.0994", "level": "ERROR", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-02 15:06:14.0994", "level": "INFO", "ElapsedMilliseconds": 4036.3729, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:06:34.2952", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:06:34.2952", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:06:34.3047", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:06:37.1140", "level": "INFO", "elapsed": "1", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:07:16.7975", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 15:07:17.1315", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 15:07:17.1315", "level": "INFO" }
{ "time": "2024-04-02 15:07:17.1315", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 15:07:17.1315", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 15:07:17.9236", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:07:17.9790", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 15:07:17.9956", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:07:18.1467", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:07:18.1802", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:07:18.2256", "level": "INFO", "ElapsedMilliseconds": 229.2295, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:07:18.2321", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:07:18.2321", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:07:18.2637", "level": "INFO", "ElapsedMilliseconds": 9.9113, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:07:18.2970", "level": "INFO", "ElapsedMilliseconds": 64.9927, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:07:18.6522", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:07:18.7451", "level": "INFO", "ElapsedMilliseconds": 92.9047, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:07:24.0381", "level": "INFO", "elapsed": "46", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:07:25.5883", "level": "INFO", "elapsed": "11", "parameters": "@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5)\r\nRETURNING \"Id\", \"CreatedAt\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:07:25.6616", "level": "ERROR", "contextType": "DataAccessLayer.Persistence.ProjectDbContext", "newline": "\r\n", "error": {"Type":"Microsoft.EntityFrameworkCore.DbUpdateException", "Entries":[], "TargetSite":"Void MoveNext()", "Message":"An error occurred while saving the entity changes. See the inner exception for details.", "Data":{}, "InnerException":"System.InvalidCastException: Column 'CreatedAt' is null.\r\n   at Npgsql.ThrowHelper.ThrowInvalidCastException_NoValue(FieldDescription field)\r\n   at Npgsql.NpgsqlDataReader.DbNullValueOrThrow[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetFieldValueCore[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetDateTime(Int32 ordinal)\r\n   at lambda_method209(Closure, DbDataReader, Int32)\r\n   at Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetReaderFieldValue(IProperty property, RelationalDataReader relationalReader, Int32 ordinal, Boolean detailedErrorsEnabled)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommand.PropagateResults(RelationalDataReader relationalReader)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.Consume(RelationalDataReader reader, Boolean async, CancellationToken cancellationToken)", "Source":"Npgsql.EntityFrameworkCore.PostgreSQL", "HResult":-2146233088, "StackTrace":"   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.Consume(RelationalDataReader reader, Boolean async, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)"}, "EventId": 10000, "EventName": "Microsoft.EntityFrameworkCore.Update.SaveChangesFailed" }
{ "time": "2024-04-02 15:07:25.7635", "level": "INFO", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 7579.0191, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:07:25.7635", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:07:25.7820", "level": "ERROR", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-02 15:07:25.7931", "level": "INFO", "ElapsedMilliseconds": 7881.4771, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:09:05.3513", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:09:05.3513", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:09:05.3513", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:09:07.4352", "level": "INFO", "elapsed": "0", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:09:09.5682", "level": "INFO", "elapsed": "3", "parameters": "@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5)\r\nRETURNING \"Id\", \"CreatedAt\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:09:09.6017", "level": "ERROR", "contextType": "DataAccessLayer.Persistence.ProjectDbContext", "newline": "\r\n", "error": {"Type":"Microsoft.EntityFrameworkCore.DbUpdateException", "Entries":[], "TargetSite":"Void MoveNext()", "Message":"An error occurred while saving the entity changes. See the inner exception for details.", "Data":{}, "InnerException":"System.InvalidCastException: Column 'CreatedAt' is null.\r\n   at Npgsql.ThrowHelper.ThrowInvalidCastException_NoValue(FieldDescription field)\r\n   at Npgsql.NpgsqlDataReader.DbNullValueOrThrow[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetFieldValueCore[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetDateTime(Int32 ordinal)\r\n   at lambda_method209(Closure, DbDataReader, Int32)\r\n   at Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetReaderFieldValue(IProperty property, RelationalDataReader relationalReader, Int32 ordinal, Boolean detailedErrorsEnabled)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommand.PropagateResults(RelationalDataReader relationalReader)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.Consume(RelationalDataReader reader, Boolean async, CancellationToken cancellationToken)", "Source":"Npgsql.EntityFrameworkCore.PostgreSQL", "HResult":-2146233088, "StackTrace":"   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.Consume(RelationalDataReader reader, Boolean async, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)"}, "EventId": 10000, "EventName": "Microsoft.EntityFrameworkCore.Update.SaveChangesFailed" }
{ "time": "2024-04-02 15:09:09.7288", "level": "INFO", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 4370.7133, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:09:09.7288", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:09:09.7412", "level": "ERROR", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-02 15:09:09.7412", "level": "INFO", "ElapsedMilliseconds": 4392.3002, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:10:04.0561", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:10:04.0732", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:10:04.0763", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:10:06.4260", "level": "INFO", "elapsed": "1", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:10:07.5291", "level": "INFO", "elapsed": "27", "parameters": "@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5)\r\nRETURNING \"Id\", \"CreatedAt\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:10:07.5375", "level": "ERROR", "contextType": "DataAccessLayer.Persistence.ProjectDbContext", "newline": "\r\n", "error": {"Type":"Microsoft.EntityFrameworkCore.DbUpdateException", "Entries":[], "TargetSite":"Void MoveNext()", "Message":"An error occurred while saving the entity changes. See the inner exception for details.", "Data":{}, "InnerException":"System.InvalidCastException: Column 'CreatedAt' is null.\r\n   at Npgsql.ThrowHelper.ThrowInvalidCastException_NoValue(FieldDescription field)\r\n   at Npgsql.NpgsqlDataReader.DbNullValueOrThrow[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetFieldValueCore[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetDateTime(Int32 ordinal)\r\n   at lambda_method209(Closure, DbDataReader, Int32)\r\n   at Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetReaderFieldValue(IProperty property, RelationalDataReader relationalReader, Int32 ordinal, Boolean detailedErrorsEnabled)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommand.PropagateResults(RelationalDataReader relationalReader)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.Consume(RelationalDataReader reader, Boolean async, CancellationToken cancellationToken)", "Source":"Npgsql.EntityFrameworkCore.PostgreSQL", "HResult":-2146233088, "StackTrace":"   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.Consume(RelationalDataReader reader, Boolean async, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)"}, "EventId": 10000, "EventName": "Microsoft.EntityFrameworkCore.Update.SaveChangesFailed" }
{ "time": "2024-04-02 15:10:07.6632", "level": "INFO", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 3586.5649, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:10:07.6632", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:10:07.6632", "level": "ERROR", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-02 15:10:07.6632", "level": "INFO", "ElapsedMilliseconds": 3619.8365, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:11:12.7523", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:11:12.7611", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 15:11:12.7611", "level": "INFO", "ElapsedMilliseconds": 9.8316, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:11:12.7611", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:11:12.7692", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 15:11:12.7692", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:11:12.7692", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:11:12.7692", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 15:11:12.7692", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 7.4026, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:11:12.7692", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:11:12.7692", "level": "INFO", "ElapsedMilliseconds": 12.1985, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:11:32.1641", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:11:32.1641", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:11:32.1641", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:11:35.0345", "level": "INFO", "elapsed": "1", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:11:35.9231", "level": "INFO", "elapsed": "2", "parameters": "@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5)\r\nRETURNING \"Id\", \"CreatedAt\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:11:35.9748", "level": "ERROR", "contextType": "DataAccessLayer.Persistence.ProjectDbContext", "newline": "\r\n", "error": {"Type":"Microsoft.EntityFrameworkCore.DbUpdateException", "Entries":[], "TargetSite":"Void MoveNext()", "Message":"An error occurred while saving the entity changes. See the inner exception for details.", "Data":{}, "InnerException":"System.InvalidCastException: Column 'CreatedAt' is null.\r\n   at Npgsql.ThrowHelper.ThrowInvalidCastException_NoValue(FieldDescription field)\r\n   at Npgsql.NpgsqlDataReader.DbNullValueOrThrow[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetFieldValueCore[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetDateTime(Int32 ordinal)\r\n   at lambda_method209(Closure, DbDataReader, Int32)\r\n   at Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetReaderFieldValue(IProperty property, RelationalDataReader relationalReader, Int32 ordinal, Boolean detailedErrorsEnabled)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommand.PropagateResults(RelationalDataReader relationalReader)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.Consume(RelationalDataReader reader, Boolean async, CancellationToken cancellationToken)", "Source":"Npgsql.EntityFrameworkCore.PostgreSQL", "HResult":-2146233088, "StackTrace":"   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.Consume(RelationalDataReader reader, Boolean async, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)"}, "EventId": 10000, "EventName": "Microsoft.EntityFrameworkCore.Update.SaveChangesFailed" }
{ "time": "2024-04-02 15:11:36.0853", "level": "INFO", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 3911.3072, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:11:36.0853", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:11:36.0853", "level": "ERROR", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-02 15:11:36.0853", "level": "INFO", "ElapsedMilliseconds": 3929.2534, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:11:40.2457", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:11:40.2579", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 15:11:40.2579", "level": "INFO", "ElapsedMilliseconds": 12.6439, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:11:40.3184", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:11:40.3184", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 15:11:40.3184", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:11:40.3184", "level": "INFO", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:11:40.3184", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 15:11:40.3184", "level": "INFO", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.4338, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:11:40.3184", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:11:40.3184", "level": "INFO", "ElapsedMilliseconds": 6.3502, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:11:45.1935", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:11:45.1948", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 15:11:45.1948", "level": "INFO", "ElapsedMilliseconds": 1.6121, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:11:45.2698", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:11:45.2698", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 15:11:45.2698", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:11:45.2698", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:11:58.6494", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:11:58.6494", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:11:58.6665", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:11:58.6820", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:11:58.6820", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:11:58.6820", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:11:58.6927", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:11:58.6927", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:11:58.6927", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:11:58.6927", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:11:58.6927", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 15:11:58.6927", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 13431.7702, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:11:58.6927", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:11:58.6927", "level": "INFO", "ElapsedMilliseconds": 13436.415, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:12:08.1370", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:12:08.1370", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:12:08.1370", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:12:10.5036", "level": "INFO", "elapsed": "0", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:12:12.0226", "level": "INFO", "elapsed": "21", "parameters": "@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5)\r\nRETURNING \"Id\", \"CreatedAt\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:12:12.0310", "level": "ERROR", "contextType": "DataAccessLayer.Persistence.ProjectDbContext", "newline": "\r\n", "error": {"Type":"Microsoft.EntityFrameworkCore.DbUpdateException", "Entries":[], "TargetSite":"Void MoveNext()", "Message":"An error occurred while saving the entity changes. See the inner exception for details.", "Data":{}, "InnerException":"System.InvalidCastException: Column 'CreatedAt' is null.\r\n   at Npgsql.ThrowHelper.ThrowInvalidCastException_NoValue(FieldDescription field)\r\n   at Npgsql.NpgsqlDataReader.DbNullValueOrThrow[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetFieldValueCore[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetDateTime(Int32 ordinal)\r\n   at lambda_method209(Closure, DbDataReader, Int32)\r\n   at Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetReaderFieldValue(IProperty property, RelationalDataReader relationalReader, Int32 ordinal, Boolean detailedErrorsEnabled)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommand.PropagateResults(RelationalDataReader relationalReader)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.Consume(RelationalDataReader reader, Boolean async, CancellationToken cancellationToken)", "Source":"Npgsql.EntityFrameworkCore.PostgreSQL", "HResult":-2146233088, "StackTrace":"   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.Consume(RelationalDataReader reader, Boolean async, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)"}, "EventId": 10000, "EventName": "Microsoft.EntityFrameworkCore.Update.SaveChangesFailed" }
{ "time": "2024-04-02 15:12:12.1523", "level": "INFO", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 4010.8339, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:12:12.1523", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:12:12.1585", "level": "ERROR", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-02 15:12:12.1599", "level": "INFO", "ElapsedMilliseconds": 4022.9658, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:12:34.2493", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:12:34.2493", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:12:34.2493", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:12:57.2311", "level": "INFO", "elapsed": "1", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:14:21.0376", "level": "INFO", "elapsed": "5", "parameters": "@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5)\r\nRETURNING \"Id\", \"CreatedAt\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:14:21.0994", "level": "ERROR", "contextType": "DataAccessLayer.Persistence.ProjectDbContext", "newline": "\r\n", "error": {"Type":"Microsoft.EntityFrameworkCore.DbUpdateException", "Entries":[], "TargetSite":"Void MoveNext()", "Message":"An error occurred while saving the entity changes. See the inner exception for details.", "Data":{}, "InnerException":"System.InvalidCastException: Column 'CreatedAt' is null.\r\n   at Npgsql.ThrowHelper.ThrowInvalidCastException_NoValue(FieldDescription field)\r\n   at Npgsql.NpgsqlDataReader.DbNullValueOrThrow[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetFieldValueCore[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetDateTime(Int32 ordinal)\r\n   at lambda_method209(Closure, DbDataReader, Int32)\r\n   at Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetReaderFieldValue(IProperty property, RelationalDataReader relationalReader, Int32 ordinal, Boolean detailedErrorsEnabled)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommand.PropagateResults(RelationalDataReader relationalReader)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.Consume(RelationalDataReader reader, Boolean async, CancellationToken cancellationToken)", "Source":"Npgsql.EntityFrameworkCore.PostgreSQL", "HResult":-2146233088, "StackTrace":"   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.Consume(RelationalDataReader reader, Boolean async, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)"}, "EventId": 10000, "EventName": "Microsoft.EntityFrameworkCore.Update.SaveChangesFailed" }
{ "time": "2024-04-02 15:14:21.2457", "level": "INFO", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 106992.6527, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:14:21.2457", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:14:21.2538", "level": "ERROR", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-02 15:14:21.2538", "level": "INFO", "ElapsedMilliseconds": 107006.1607, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:15:25.7762", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:15:25.7762", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:15:25.7762", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:15:28.1887", "level": "INFO", "elapsed": "1", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:15:29.1602", "level": "INFO", "elapsed": "3", "parameters": "@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5)\r\nRETURNING \"Id\", \"CreatedAt\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:15:29.2081", "level": "ERROR", "contextType": "DataAccessLayer.Persistence.ProjectDbContext", "newline": "\r\n", "error": {"Type":"Microsoft.EntityFrameworkCore.DbUpdateException", "Entries":[], "TargetSite":"Void MoveNext()", "Message":"An error occurred while saving the entity changes. See the inner exception for details.", "Data":{}, "InnerException":"System.InvalidCastException: Column 'CreatedAt' is null.\r\n   at Npgsql.ThrowHelper.ThrowInvalidCastException_NoValue(FieldDescription field)\r\n   at Npgsql.NpgsqlDataReader.DbNullValueOrThrow[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetFieldValueCore[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetDateTime(Int32 ordinal)\r\n   at lambda_method209(Closure, DbDataReader, Int32)\r\n   at Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetReaderFieldValue(IProperty property, RelationalDataReader relationalReader, Int32 ordinal, Boolean detailedErrorsEnabled)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommand.PropagateResults(RelationalDataReader relationalReader)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.Consume(RelationalDataReader reader, Boolean async, CancellationToken cancellationToken)", "Source":"Npgsql.EntityFrameworkCore.PostgreSQL", "HResult":-2146233088, "StackTrace":"   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.Consume(RelationalDataReader reader, Boolean async, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)"}, "EventId": 10000, "EventName": "Microsoft.EntityFrameworkCore.Update.SaveChangesFailed" }
{ "time": "2024-04-02 15:15:29.3331", "level": "INFO", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 3552.4781, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:15:29.3331", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:15:29.3431", "level": "ERROR", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-02 15:15:29.3431", "level": "INFO", "ElapsedMilliseconds": 3569.4623, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:15:45.3806", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:15:45.3806", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 15:15:45.3806", "level": "INFO", "ElapsedMilliseconds": 1.2156, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:15:45.5571", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:15:45.5571", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 15:15:45.5571", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:15:45.5571", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:15:57.0850", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:15:57.0854", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 15:15:57.0854", "level": "INFO", "ElapsedMilliseconds": 7.8199, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:15:57.0854", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:15:57.0854", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 15:15:57.1037", "level": "INFO", "ElapsedMilliseconds": 8.8694, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:15:57.1836", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:15:59.5186", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:15:59.5225", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:15:59.5225", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:15:59.5225", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:15:59.5225", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:15:59.5225", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:15:59.5225", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:15:59.5388", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:15:59.5388", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:15:59.5388", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 15:15:59.5388", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 13983.8051, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:15:59.5388", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:15:59.5388", "level": "INFO", "ElapsedMilliseconds": 13987.4913, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:15:59.6617", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:15:59.6617", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 15:15:59.6617", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:15:59.6617", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:16:02.2778", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:02.2778", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:02.2851", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:02.2851", "level": "INFO", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:02.2851", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:02.2851", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:02.2851", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:02.2851", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:02.3049", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:02.3049", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:02.3049", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 15:16:02.3049", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 2646.6491, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:16:02.3049", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:16:02.3049", "level": "INFO", "ElapsedMilliseconds": 2647.6402, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:16:02.3296", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:16:02.3296", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 15:16:02.3296", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:16:02.3296", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:16:03.3590", "level": "INFO", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:03.3661", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:03.3661", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:03.3661", "level": "INFO", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:03.3661", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:03.3661", "level": "INFO", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:03.3799", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:03.3799", "level": "INFO", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:03.3799", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:03.3799", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:03.3799", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 15:16:03.3799", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 1057.2496, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:16:03.3799", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:16:03.3799", "level": "INFO", "ElapsedMilliseconds": 1058.5659, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:16:03.3799", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:16:03.3799", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 15:16:03.3799", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:16:03.3799", "level": "INFO", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:16:04.0869", "level": "INFO", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:04.0869", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:04.0869", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:04.0869", "level": "INFO", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:04.0994", "level": "INFO", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:04.0994", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:04.0994", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:04.0994", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:04.0994", "level": "INFO", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:04.0994", "level": "INFO", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:04.0994", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 15:16:04.0994", "level": "INFO", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 716.257, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:16:04.0994", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:16:04.0994", "level": "INFO", "ElapsedMilliseconds": 716.9101, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:16:17.2867", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:16:17.2867", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:16:17.2867", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:16:30.5445", "level": "INFO", "elapsed": "1", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:38.0539", "level": "INFO", "elapsed": "27", "parameters": "@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5)\r\nRETURNING \"Id\", \"CreatedAt\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:16:38.0637", "level": "ERROR", "contextType": "DataAccessLayer.Persistence.ProjectDbContext", "newline": "\r\n", "error": {"Type":"Microsoft.EntityFrameworkCore.DbUpdateException", "Entries":[], "TargetSite":"Void MoveNext()", "Message":"An error occurred while saving the entity changes. See the inner exception for details.", "Data":{}, "InnerException":"System.InvalidCastException: Column 'CreatedAt' is null.\r\n   at Npgsql.ThrowHelper.ThrowInvalidCastException_NoValue(FieldDescription field)\r\n   at Npgsql.NpgsqlDataReader.DbNullValueOrThrow[T](Int32 ordinal)\r\n   at Npgsql.NpgsqlDataReader.GetFieldValueCore[T](Int32 ordinal)\r\n   at lambda_method209(Closure, DbDataReader, Int32)\r\n   at Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetReaderFieldValue(IProperty property, RelationalDataReader relationalReader, Int32 ordinal, Boolean detailedErrorsEnabled)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommand.PropagateResults(RelationalDataReader relationalReader)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.Consume(RelationalDataReader reader, Boolean async, CancellationToken cancellationToken)", "Source":"Npgsql.EntityFrameworkCore.PostgreSQL", "HResult":-2146233088, "StackTrace":"   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlModificationCommandBatch.Consume(RelationalDataReader reader, Boolean async, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)"}, "EventId": 10000, "EventName": "Microsoft.EntityFrameworkCore.Update.SaveChangesFailed" }
{ "time": "2024-04-02 15:16:38.1839", "level": "INFO", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 20891.4951, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:16:38.1839", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:16:38.1912", "level": "ERROR", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-02 15:16:38.1912", "level": "INFO", "ElapsedMilliseconds": 20905.8683, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:21:14.4579", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:21:14.4966", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:21:14.4966", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:21:55.3305", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 15:21:55.5187", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 15:21:55.5187", "level": "INFO" }
{ "time": "2024-04-02 15:21:55.5187", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 15:21:55.5187", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 15:21:55.8566", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:21:55.9409", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 15:21:56.5068", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:21:56.6041", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 15:21:56.6411", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 15:21:56.7440", "level": "INFO", "ElapsedMilliseconds": 236.8932, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:21:56.7440", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:21:56.7440", "level": "INFO", "ElapsedMilliseconds": 3.7412, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:21:56.7440", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:21:56.8115", "level": "INFO", "ElapsedMilliseconds": 58.2255, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:21:56.8910", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:21:57.0621", "level": "INFO", "ElapsedMilliseconds": 171.1911, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:22:02.2206", "level": "INFO", "elapsed": "51", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:22:03.4130", "level": "INFO", "elapsed": "11", "parameters": "@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 15:22:06.9957", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Create.TicketCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 15:22:08.9244", "level": "INFO", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 12277.1397, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 15:22:08.9244", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 15:22:08.9402", "level": "INFO", "ElapsedMilliseconds": 13093.6699, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:33:39.5862", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 15:33:39.6554", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 15:33:39.6554", "level": "INFO" }
{ "time": "2024-04-02 15:33:39.6554", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 15:33:39.6554", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 15:33:40.8063", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:33:40.9226", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 15:33:41.0264", "level": "INFO", "ElapsedMilliseconds": 219.9248, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:33:41.0372", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:33:41.0372", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:33:41.0372", "level": "INFO", "ElapsedMilliseconds": 1.4074, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:33:41.0688", "level": "INFO", "ElapsedMilliseconds": 31.2334, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:33:41.1584", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:33:41.4515", "level": "INFO", "ElapsedMilliseconds": 293.0301, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:42:26.0309", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 15:42:26.1777", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 15:42:26.1777", "level": "INFO" }
{ "time": "2024-04-02 15:42:26.1777", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 15:42:26.1840", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 15:42:26.9462", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:42:27.0573", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 15:42:27.1327", "level": "INFO", "ElapsedMilliseconds": 189.3686, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:42:27.1327", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:42:27.1327", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:42:27.1519", "level": "INFO", "ElapsedMilliseconds": 11.9166, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:42:27.1715", "level": "INFO", "ElapsedMilliseconds": 31.5216, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:42:27.2223", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:42:27.3556", "level": "INFO", "ElapsedMilliseconds": 133.3034, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:54:34.3518", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 15:54:34.4566", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 15:54:34.4566", "level": "INFO" }
{ "time": "2024-04-02 15:54:34.4566", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 15:54:34.4566", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 15:54:35.1319", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:54:35.2013", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 15:54:35.2834", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:54:35.2882", "level": "INFO", "ElapsedMilliseconds": 149.9837, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:54:35.2882", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:54:35.2882", "level": "INFO", "ElapsedMilliseconds": 1.7486, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:54:35.3122", "level": "INFO", "ElapsedMilliseconds": 28.7502, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 15:54:35.3915", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 15:54:35.5051", "level": "INFO", "ElapsedMilliseconds": 113.603, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:11:57.9781", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 16:11:59.2509", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 16:11:59.2574", "level": "INFO" }
{ "time": "2024-04-02 16:11:59.2574", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 16:11:59.2574", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 16:12:00.4752", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:12:00.6485", "level": "INFO", "ElapsedMilliseconds": 183.0484, "StatusCode": 404, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:12:00.6485", "level": "INFO", "Method": "GET", "Scheme": "http", "Host": {"Value":"localhost:5274", "HasValue":true, "Host":"localhost", "Port":5274}, "PathBase": {"Value":"", "HasValue":false}, "Path": {"Value":"/swagger/index.html", "HasValue":true}, "StatusCode": 404, "EventId": 16 }
{ "time": "2024-04-02 16:12:13.2503", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 16:12:13.3830", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 16:12:13.3872", "level": "INFO" }
{ "time": "2024-04-02 16:12:13.3872", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 16:12:13.3872", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 16:12:14.0112", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:12:14.1665", "level": "INFO", "ElapsedMilliseconds": 159.2716, "StatusCode": 404, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:12:14.1665", "level": "INFO", "Method": "GET", "Scheme": "http", "Host": {"Value":"localhost:5274", "HasValue":true, "Host":"localhost", "Port":5274}, "PathBase": {"Value":"", "HasValue":false}, "Path": {"Value":"/swagger/index.html", "HasValue":true}, "StatusCode": 404, "EventId": 16 }
{ "time": "2024-04-02 16:12:18.7201", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:12:18.7297", "level": "INFO", "ElapsedMilliseconds": 9.7762, "StatusCode": 404, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:12:18.7297", "level": "INFO", "Method": "GET", "Scheme": "http", "Host": {"Value":"localhost:5274", "HasValue":true, "Host":"localhost", "Port":5274}, "PathBase": {"Value":"", "HasValue":false}, "Path": {"Value":"/swagger/index.html", "HasValue":true}, "StatusCode": 404, "EventId": 16 }
{ "time": "2024-04-02 16:12:49.8465", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 16:12:50.3402", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 16:12:50.3402", "level": "INFO" }
{ "time": "2024-04-02 16:12:50.3544", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 16:12:50.3544", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 16:12:54.3042", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:12:55.1994", "level": "INFO", "ElapsedMilliseconds": 901.2267, "StatusCode": 404, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:12:55.1994", "level": "INFO", "Method": "GET", "Scheme": "http", "Host": {"Value":"localhost:5274", "HasValue":true, "Host":"localhost", "Port":5274}, "PathBase": {"Value":"", "HasValue":false}, "Path": {"Value":"/swagger/index.html", "HasValue":true}, "StatusCode": 404, "EventId": 16 }
{ "time": "2024-04-02 16:14:20.9174", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 16:14:21.0753", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 16:14:21.0753", "level": "INFO" }
{ "time": "2024-04-02 16:14:21.0813", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 16:14:21.0813", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 16:14:22.1440", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:14:22.3031", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 16:14:22.4049", "level": "INFO", "ElapsedMilliseconds": 265.928, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:14:22.4141", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:14:22.4141", "level": "INFO", "ElapsedMilliseconds": 3.5833, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:14:22.4141", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:14:22.4607", "level": "INFO", "ElapsedMilliseconds": 45.1392, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:14:22.5218", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:14:22.7349", "level": "INFO", "ElapsedMilliseconds": 213.1819, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:14:41.9306", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 166, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:14:44.8998", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:14:44.9549", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:14:44.9970", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:14:45.9409", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:14:45.9615", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 959.9293, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:14:45.9615", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:14:47.5520", "level": "INFO", "ElapsedMilliseconds": 5621.6631, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:15:45.7904", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 156, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:15:45.9181", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:15:45.9259", "level": "INFO", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:15:45.9977", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:15:46.0086", "level": "INFO", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 82.599, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:15:46.0086", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:15:46.0086", "level": "INFO", "ElapsedMilliseconds": 218.8112, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:16:30.5822", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 75, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:16:30.5822", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:16:30.5822", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:16:30.5822", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:16:31.0865", "level": "INFO", "elapsed": "55", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:16:31.2114", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "System.String", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:16:31.2114", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 618.9534, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:16:31.2114", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:16:31.2114", "level": "INFO", "ElapsedMilliseconds": 636.8338, "StatusCode": 400, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:16:37.4473", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:16:37.4473", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:16:37.4473", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:16:37.4473", "level": "INFO", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:16:37.4629", "level": "INFO", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:16:37.4736", "level": "INFO", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:16:37.5087", "level": "INFO", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:16:37.5810", "level": "INFO", "elapsed": "3", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:16:37.5896", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:16:37.5896", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 141.6841, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:16:37.5896", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:16:37.5896", "level": "INFO", "ElapsedMilliseconds": 143.707, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:16:58.5396", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 41, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:16:58.5396", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:16:58.5396", "level": "INFO", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Admin)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 16:16:58.5528", "level": "INFO", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-02 16:16:58.5528", "level": "INFO", "ElapsedMilliseconds": 13.5377, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:17:28.0620", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 44, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:17:28.0692", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Update (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:17:28.0692", "level": "INFO", "RouteData": "{action = \"Update\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult Update(Models.DTOs.Product.Update.ProductUpdateDto)", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:17:28.0838", "level": "INFO", "elapsed": "3", "parameters": "@__productUpdateDto_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__productUpdateDto_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:17:32.5679", "level": "INFO", "ActionName": "ProductController.Update (Api)", "ElapsedMilliseconds": 4497.5205, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:17:32.5679", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Update (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:17:34.6826", "level": "ERROR" }
{ "time": "2024-04-02 16:17:36.1302", "level": "INFO", "ElapsedMilliseconds": 8068.0592, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:18:05.9240", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 44, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:18:05.9321", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Update (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:18:05.9321", "level": "INFO", "RouteData": "{action = \"Update\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult Update(Models.DTOs.Product.Update.ProductUpdateDto)", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:18:05.9321", "level": "INFO", "elapsed": "0", "parameters": "@__productUpdateDto_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__productUpdateDto_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:18:11.0588", "level": "INFO", "ActionName": "ProductController.Update (Api)", "ElapsedMilliseconds": 5126.4905, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:18:11.0588", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Update (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:18:55.3346", "level": "ERROR" }
{ "time": "2024-04-02 16:19:18.2389", "level": "INFO", "ElapsedMilliseconds": 72314.9474, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:23:02.6999", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 16:23:02.8394", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 16:23:02.8394", "level": "INFO" }
{ "time": "2024-04-02 16:23:02.8394", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 16:23:02.8394", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 16:23:03.5422", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:23:03.6637", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 16:23:03.7525", "level": "INFO", "ElapsedMilliseconds": 211.7074, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:23:03.7570", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:23:03.7570", "level": "INFO", "ElapsedMilliseconds": 2.3783, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:23:03.7570", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:23:03.8016", "level": "INFO", "ElapsedMilliseconds": 33.4017, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:23:03.9130", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:23:04.0509", "level": "INFO", "ElapsedMilliseconds": 137.3866, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:23:22.9670", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 16:23:23.0986", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 16:23:23.0986", "level": "INFO" }
{ "time": "2024-04-02 16:23:23.0986", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 16:23:23.0986", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 16:23:23.6224", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:23:23.7260", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 16:23:23.7991", "level": "INFO", "ElapsedMilliseconds": 180.1088, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:23:23.7991", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:23:23.7991", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:23:23.8075", "level": "INFO", "ElapsedMilliseconds": 4.7534, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:23:23.8305", "level": "INFO", "ElapsedMilliseconds": 27.7601, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:23:23.8843", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:23:24.0209", "level": "INFO", "ElapsedMilliseconds": 136.6902, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:23:30.4367", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 44, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:23:30.5767", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Update (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:23:30.6137", "level": "INFO", "RouteData": "{action = \"Update\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult Update(Models.DTOs.Product.Update.ProductUpdateDto)", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:23:32.0068", "level": "INFO", "elapsed": "47", "parameters": "@__productUpdateDto_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__productUpdateDto_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:23:34.2077", "level": "INFO", "ActionName": "ProductController.Update (Api)", "ElapsedMilliseconds": 3588.0193, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:23:34.2077", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Update (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:23:35.2862", "level": "ERROR" }
{ "time": "2024-04-02 16:23:35.3051", "level": "INFO", "ElapsedMilliseconds": 4868.3572, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:24:03.1806", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:24:03.1806", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:24:03.1806", "level": "INFO", "ElapsedMilliseconds": 13.075, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:24:03.1806", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 101, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:24:03.1806", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:24:03.1806", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:24:03.2048", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:24:03.3125", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:24:03.3270", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 122.0002, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:24:03.3270", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:24:03.3270", "level": "INFO", "ElapsedMilliseconds": 133.7691, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:24:28.2798", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:24:28.2798", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:24:28.2798", "level": "INFO", "ElapsedMilliseconds": 0.941, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:24:28.2887", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 101, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:24:28.2887", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:24:28.2887", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:24:28.2887", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:24:28.3185", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:24:28.3185", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 28.0318, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:24:28.3185", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:24:28.3185", "level": "INFO", "ElapsedMilliseconds": 30.3713, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:24:31.5516", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 44, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:24:31.5516", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Update (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:24:31.5516", "level": "INFO", "RouteData": "{action = \"Update\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult Update(Models.DTOs.Product.Update.ProductUpdateDto)", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:24:31.5711", "level": "INFO", "elapsed": "1", "parameters": "@__productUpdateDto_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__productUpdateDto_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:24:34.9840", "level": "INFO", "ActionName": "ProductController.Update (Api)", "ElapsedMilliseconds": 3424.6542, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:24:34.9840", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Update (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:24:40.9924", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:26:13.9736", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:26:13.9736", "level": "INFO", "ElapsedMilliseconds": 92985.4881, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:26:13.9736", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:26:13.9736", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:26:13.9736", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:26:13.9736", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:26:13.9736", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:26:13.9736", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:26:13.9736", "level": "INFO", "ElapsedMilliseconds": 0.4355, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:26:13.9736", "level": "INFO", "ElapsedMilliseconds": 0.1987, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:26:13.9736", "level": "INFO", "ElapsedMilliseconds": 0.3708, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:26:13.9879", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 101, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:26:14.0255", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:26:14.0255", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:26:14.0637", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 158, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:26:14.0637", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:26:14.0637", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:26:14.0637", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:26:14.0637", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 158, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:26:14.0656", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:26:14.0656", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:26:14.0656", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:26:14.0656", "level": "ERROR" }
{ "time": "2024-04-02 16:26:14.0656", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:26:38.9371", "level": "INFO", "ElapsedMilliseconds": 127385.6029, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:26:39.0096", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:26:39.0096", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 24945.2468, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:26:39.0096", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:26:39.0096", "level": "INFO", "ElapsedMilliseconds": 25022.4489, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:26:39.0096", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 106, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:26:39.0096", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:26:39.0096", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:26:39.0096", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:26:39.0096", "level": "INFO", "ElapsedMilliseconds": 0.3752, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:26:39.0096", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:26:39.0096", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:26:39.0470", "level": "INFO", "elapsed": "6", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:26:39.0616", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:26:39.0616", "level": "INFO", "elapsed": "3", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:26:39.0616", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 43.4125, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:26:39.0616", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:26:39.0616", "level": "INFO", "ElapsedMilliseconds": 52.2948, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:26:39.0724", "level": "INFO", "elapsed": "2", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:26:39.0724", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 148, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:26:39.0724", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:26:39.0724", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:26:39.0724", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:26:39.1203", "level": "INFO", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:26:39.1438", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:26:39.1438", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 71.0407, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:26:39.1438", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:26:39.1438", "level": "INFO", "ElapsedMilliseconds": 71.7958, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:26:39.3448", "level": "INFO", "elapsed": "13", "parameters": "@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:26:39.3448", "level": "INFO", "elapsed": "13", "parameters": "@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:26:42.5595", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Register.UserRegisterResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:26:42.5635", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 28497.1669, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:26:42.5635", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:26:42.5635", "level": "INFO", "ElapsedMilliseconds": 28501.8853, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:26:42.5635", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Register.UserRegisterResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:26:42.5635", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 28506.5873, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:26:42.5635", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:26:42.5635", "level": "INFO", "ElapsedMilliseconds": 28509.1133, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:27:22.7719", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 16:27:22.9134", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 16:27:22.9134", "level": "INFO" }
{ "time": "2024-04-02 16:27:22.9134", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 16:27:22.9134", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 16:27:23.9104", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:27:24.0249", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 16:27:24.1044", "level": "INFO", "ElapsedMilliseconds": 200.0506, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:27:24.1044", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:27:24.1044", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:27:24.1044", "level": "INFO", "ElapsedMilliseconds": 2.8064, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:27:24.1464", "level": "INFO", "ElapsedMilliseconds": 37.1302, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:27:24.1876", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:27:24.3012", "level": "INFO", "ElapsedMilliseconds": 113.3637, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:27:26.8266", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 44, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:27:26.9264", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Update (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:27:26.9462", "level": "INFO", "RouteData": "{action = \"Update\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult Update(Models.DTOs.Product.Update.ProductUpdateDto)", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:27:28.0124", "level": "INFO", "elapsed": "48", "parameters": "@__productUpdateDto_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__productUpdateDto_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:27:30.7579", "level": "INFO", "ActionName": "ProductController.Update (Api)", "ElapsedMilliseconds": 3799.4272, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:27:30.7579", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Update (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:27:31.9641", "level": "ERROR" }
{ "time": "2024-04-02 16:27:32.0507", "level": "INFO", "ElapsedMilliseconds": 5224.0609, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:28:06.7064", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:28:06.7064", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:28:06.7064", "level": "INFO", "ElapsedMilliseconds": 12.2508, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:28:06.7305", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 112, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:28:06.7305", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:28:06.7305", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:28:06.7305", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:28:06.8557", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:28:06.8752", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 135.4582, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:28:06.8752", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:28:06.8752", "level": "INFO", "ElapsedMilliseconds": 145.1562, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:28:53.6461", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:28:53.6612", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:28:53.6612", "level": "INFO", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:28:53.6802", "level": "ERROR" }
{ "time": "2024-04-02 16:28:53.7074", "level": "INFO", "elapsed": "4", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:28:53.7198", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:28:53.7198", "level": "INFO", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 58.7413, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:28:53.7198", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:28:53.7226", "level": "INFO", "ElapsedMilliseconds": 78.0729, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:29:19.5117", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:29:19.5117", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:29:19.5117", "level": "INFO", "ElapsedMilliseconds": 6.0245, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:29:19.5354", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 123, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:29:19.5354", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:29:19.5354", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:29:19.5354", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:29:19.5722", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:29:19.5722", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 36.1236, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:29:19.5722", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:29:19.5722", "level": "INFO", "ElapsedMilliseconds": 37.6369, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:29:23.7150", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 123, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:29:23.7150", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:29:23.7150", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:29:23.7150", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:29:23.7668", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:29:23.7668", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 50.41, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:29:23.7668", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:29:23.7668", "level": "INFO", "ElapsedMilliseconds": 52.4082, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:29:32.3687", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 16:29:32.5232", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 16:29:32.5232", "level": "INFO" }
{ "time": "2024-04-02 16:29:32.5357", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 16:29:32.5357", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 16:29:33.2362", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:29:33.3785", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 16:29:33.4754", "level": "INFO", "ElapsedMilliseconds": 247.1337, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:29:33.4754", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:29:33.4754", "level": "INFO", "ElapsedMilliseconds": 3.2082, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:29:33.4754", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:29:33.5256", "level": "INFO", "ElapsedMilliseconds": 41.2187, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:29:33.5774", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:29:33.7025", "level": "INFO", "ElapsedMilliseconds": 125.1805, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:29:41.6083", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:29:41.6906", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:29:41.7154", "level": "INFO", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:29:42.6619", "level": "ERROR" }
{ "time": "2024-04-02 16:29:43.1181", "level": "INFO", "elapsed": "22", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:29:43.1784", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:29:43.1879", "level": "INFO", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 1468.7407, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:29:43.1879", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:29:43.2005", "level": "INFO", "ElapsedMilliseconds": 1592.154, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:29:59.6037", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 44, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:29:59.6889", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Update (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:29:59.6990", "level": "INFO", "RouteData": "{action = \"Update\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult Update(Models.DTOs.Product.Update.ProductUpdateDto)", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:29:59.9050", "level": "INFO", "elapsed": "10", "parameters": "@__productUpdateDto_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__productUpdateDto_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:30:01.9076", "level": "INFO", "ActionName": "ProductController.Update (Api)", "ElapsedMilliseconds": 2208.2474, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:30:01.9117", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Update (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:30:03.0715", "level": "ERROR" }
{ "time": "2024-04-02 16:30:03.1735", "level": "INFO", "ElapsedMilliseconds": 3564.3699, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:30:20.2329", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:30:20.2329", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:30:20.2329", "level": "INFO", "ElapsedMilliseconds": 5.3855, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:30:20.2418", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 146, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:30:20.2418", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:30:20.2418", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:30:20.2556", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:30:20.3062", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:30:20.3211", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 65.4037, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:30:20.3211", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:30:20.3211", "level": "INFO", "ElapsedMilliseconds": 79.6281, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:30:34.7054", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:30:34.7074", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:30:34.7074", "level": "INFO", "ElapsedMilliseconds": 2.5371, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:30:34.7074", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 146, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:30:34.7074", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:30:34.7074", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:30:34.7074", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:30:34.7486", "level": "INFO", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:30:34.7486", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 29.4587, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:30:34.7486", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:30:34.7486", "level": "INFO", "ElapsedMilliseconds": 30.4256, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:30:58.8875", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 16:30:59.0255", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 16:30:59.0255", "level": "INFO" }
{ "time": "2024-04-02 16:30:59.0255", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 16:30:59.0255", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 16:30:59.8513", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:30:59.9581", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 16:31:00.0629", "level": "INFO", "ElapsedMilliseconds": 215.2834, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:31:00.0708", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:31:00.0708", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:31:00.0708", "level": "INFO", "ElapsedMilliseconds": 2.5482, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:31:00.1007", "level": "INFO", "ElapsedMilliseconds": 29.9124, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:31:00.1556", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:31:00.3281", "level": "INFO", "ElapsedMilliseconds": 172.4502, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:31:02.9129", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 44, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:31:03.0092", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Update (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:31:03.0279", "level": "INFO", "RouteData": "{action = \"Update\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult Update(Models.DTOs.Product.Update.ProductUpdateDto)", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:31:03.9916", "level": "INFO", "elapsed": "42", "parameters": "@__productUpdateDto_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__productUpdateDto_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:31:07.4414", "level": "INFO", "ActionName": "ProductController.Update (Api)", "ElapsedMilliseconds": 4409.5709, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:31:07.4428", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Update (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:31:10.5576", "level": "ERROR" }
{ "time": "2024-04-02 16:31:10.6442", "level": "INFO", "ElapsedMilliseconds": 7731.2086, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:33:04.8932", "level": "INFO", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 16:33:05.0375", "level": "INFO", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 16:33:05.0375", "level": "INFO" }
{ "time": "2024-04-02 16:33:05.0375", "level": "INFO", "EnvName": "Development" }
{ "time": "2024-04-02 16:33:05.0447", "level": "INFO", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 16:33:05.7771", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:33:05.8857", "level": "WARN", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 16:33:05.9676", "level": "INFO", "ElapsedMilliseconds": 197.5191, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:33:05.9676", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:33:05.9752", "level": "INFO", "ElapsedMilliseconds": 4.1686, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:33:05.9752", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:33:06.0320", "level": "INFO", "ElapsedMilliseconds": 55.1198, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:33:06.0795", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:33:06.2099", "level": "INFO", "ElapsedMilliseconds": 130.4446, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:33:09.9130", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 44, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:33:10.0154", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Update (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:33:10.0349", "level": "INFO", "RouteData": "{action = \"Update\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult Update(Models.DTOs.Product.Update.ProductUpdateDto)", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:33:11.3955", "level": "INFO", "elapsed": "64", "parameters": "@__productUpdateDto_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__productUpdateDto_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:33:13.1806", "level": "INFO", "ActionName": "ProductController.Update (Api)", "ElapsedMilliseconds": 3140.3492, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:33:13.1806", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Update (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:33:13.2027", "level": "ERROR" }
{ "time": "2024-04-02 16:33:13.2974", "level": "INFO", "ElapsedMilliseconds": 3384.2686, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:33:46.6099", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:33:46.6181", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:33:46.6181", "level": "INFO", "ElapsedMilliseconds": 10.2015, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:33:46.6181", "level": "INFO", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 160, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:33:46.6181", "level": "INFO", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:33:46.6181", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:33:46.6401", "level": "INFO", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:33:46.7361", "level": "INFO", "elapsed": "5", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:33:46.7438", "level": "INFO", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:33:46.9676", "level": "INFO", "elapsed": "13", "parameters": "@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:33:49.5859", "level": "INFO", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Register.UserRegisterResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:33:49.5859", "level": "INFO", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 2953.2316, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:33:49.5859", "level": "INFO", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:33:49.5971", "level": "INFO", "ElapsedMilliseconds": 2969.4385, "StatusCode": 499, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:34:25.7973", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 16:34:25.9460", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 16:34:25.9460", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-02 16:34:25.9460", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-02 16:34:25.9460", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 16:34:26.7544", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:34:26.8687", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 16:34:26.9451", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 194.3697ms", "ElapsedMilliseconds": 194.3697, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:34:26.9451", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:34:26.9451", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.9136ms", "ElapsedMilliseconds": 2.9136, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:34:26.9451", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:34:26.9877", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 35.8700ms", "ElapsedMilliseconds": 35.87, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:34:27.0585", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:34:27.2550", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 196.5606ms", "ElapsedMilliseconds": 196.5606, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:34:28.8208", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Product/UpdateProduct - application/json 44", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 44, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:34:28.9181", "level": "INFO", "message": "Executing endpoint 'ProductController.Update (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Update (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:34:28.9368", "level": "INFO", "message": "Route matched with {action = \"Update\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Update(Models.DTOs.Product.Update.ProductUpdateDto) on controller ProductController (Api).", "RouteData": "{action = \"Update\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult Update(Models.DTOs.Product.Update.ProductUpdateDto)", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:34:30.0403", "level": "INFO", "message": "Executed DbCommand (50ms) [Parameters=[@__productUpdateDto_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__productUpdateDto_Id_0\r\nLIMIT 1", "elapsed": "50", "parameters": "@__productUpdateDto_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__productUpdateDto_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:34:32.5057", "level": "INFO", "message": "Executed action ProductController.Update (Api) in 3564.2391ms", "ActionName": "ProductController.Update (Api)", "ElapsedMilliseconds": 3564.2391, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:34:32.5057", "level": "INFO", "message": "Executed endpoint 'ProductController.Update (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Update (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:34:32.5267", "level": "ERROR", "message": "Resource not found" }
{ "time": "2024-04-02 16:34:32.6170", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Product/UpdateProduct - 400 - application/json 3796.1021ms", "ElapsedMilliseconds": 3796.1021, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:35:21.3947", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/register - application/json 163", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 163, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:35:21.3947", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:35:21.3947", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:35:21.4068", "level": "INFO", "message": "Route matched with {action = \"Register\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:35:21.5100", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]'.", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:35:21.5275", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Register (Api) in 120.5598ms", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 120.5598, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:35:21.5275", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:35:21.5275", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/register - 400 - application/json;+charset=utf-8 133.5064ms", "ElapsedMilliseconds": 133.5064, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:37:32.4895", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 16:37:32.6340", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 16:37:32.6340", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-02 16:37:32.6340", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-02 16:37:32.6443", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 16:37:33.4599", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:37:33.6416", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 16:37:33.7714", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 321.4556ms", "ElapsedMilliseconds": 321.4556, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:37:33.7913", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:37:33.7913", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:37:33.7913", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.1837ms", "ElapsedMilliseconds": 2.1837, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:37:33.9143", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 122.1763ms", "ElapsedMilliseconds": 122.1763, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:37:33.9673", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:37:34.1170", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 149.6879ms", "ElapsedMilliseconds": 149.6879, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:38:28.4618", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 16:38:28.6206", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 16:38:28.6206", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-02 16:38:28.6206", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-02 16:38:28.6206", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 16:38:29.1951", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:38:29.3106", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 16:38:29.3855", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 194.8407ms", "ElapsedMilliseconds": 194.8407, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:38:29.3948", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:38:29.3948", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:38:29.3948", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 4.3977ms", "ElapsedMilliseconds": 4.3977, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:38:29.4724", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 76.3088ms", "ElapsedMilliseconds": 76.3088, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:38:29.5280", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:38:29.6504", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 122.4042ms", "ElapsedMilliseconds": 122.4042, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:38:33.0449", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Product/UpdateProduct - application/json 44", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 44, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:38:33.1438", "level": "INFO", "message": "Executing endpoint 'ProductController.Update (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Update (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:38:33.1626", "level": "INFO", "message": "Route matched with {action = \"Update\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Update(Models.DTOs.Product.Update.ProductUpdateDto) on controller ProductController (Api).", "RouteData": "{action = \"Update\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult Update(Models.DTOs.Product.Update.ProductUpdateDto)", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:38:34.4450", "level": "INFO", "message": "Executed DbCommand (53ms) [Parameters=[@__productUpdateDto_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__productUpdateDto_Id_0\r\nLIMIT 1", "elapsed": "53", "parameters": "@__productUpdateDto_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__productUpdateDto_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:38:37.2326", "level": "INFO", "message": "Executed action ProductController.Update (Api) in 4064.1827ms", "ActionName": "ProductController.Update (Api)", "ElapsedMilliseconds": 4064.1827, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:38:37.2326", "level": "INFO", "message": "Executed endpoint 'ProductController.Update (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Update (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:38:37.3755", "level": "ERROR", "message": "testtt {\"Errors\":null,\"Message\":\"Resource not found\",\"Data\":{},\"InnerException\":null,\"HelpLink\":null,\"Source\":\"Core\",\"HResult\":-2146233088,\"StackTrace\":\"   at Core.Repositories.Repository`1.GetSingle(Expression`1 expression, Boolean throwException) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Core\\\\Repositories\\\\Repository.cs:line 61\\r\\n   at Business.Services.ProductService.Update(ProductUpdateDto productUpdateDto) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Application\\\\Services\\\\ProductService.cs:line 96\\r\\n   at ProductController.Update(ProductUpdateDto request) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\ProductController.cs:line 113\\r\\n   at lambda_method3(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\"}" }
{ "time": "2024-04-02 16:38:37.3876", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Product/UpdateProduct - 400 - application/json 4342.8390ms", "ElapsedMilliseconds": 4342.839, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/UpdateProduct", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:42:18.3711", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:42:18.3790", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:42:18.3790", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - 204 - - 9.6388ms", "ElapsedMilliseconds": 9.6388, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:42:18.3991", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - application/json 156", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 156, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:42:18.3991", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:42:18.3991", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:42:18.4122", "level": "INFO", "message": "Route matched with {action = \"Register\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:42:18.5168", "level": "INFO", "message": "Executed DbCommand (5ms) [Parameters=[@__userRegister_Email_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "elapsed": "5", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:42:18.5256", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:42:18.7461", "level": "INFO", "message": "Executed DbCommand (13ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "elapsed": "13", "parameters": "@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:42:21.3450", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Register.UserRegisterResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Register.UserRegisterResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:42:21.3450", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Register (Api) in 2939.9261ms", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 2939.9261, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:42:21.3450", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:42:21.3450", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - 200 - application/json;+charset=utf-8 2956.6032ms", "ElapsedMilliseconds": 2956.6032, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:43:44.6423", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:43:44.6423", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:43:44.6423", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - 204 - - 0.9035ms", "ElapsedMilliseconds": 0.9035, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:43:44.6579", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - application/json 65", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 65, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:43:44.6579", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:43:44.6579", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:43:44.6579", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:43:44.7284", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:43:44.7397", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:43:44.7698", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:43:44.7968", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "3", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:43:44.7968", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.Tokens'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:43:44.8000", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 135.244ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 135.244, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:43:44.8000", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:43:44.8000", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 142.4890ms", "ElapsedMilliseconds": 142.489, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:43:44.8245", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:43:44.8245", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:43:44.8245", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 0.5895ms", "ElapsedMilliseconds": 0.5895, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:43:44.8314", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:43:44.8314", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:43:44.8314", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 1.3583ms", "ElapsedMilliseconds": 1.3583, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:43:44.8314", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:43:44.8314", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:43:44.8314", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:43:44.8314", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:43:44.8314", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:43:44.8314", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:43:44.8482", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 11.4084ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 11.4084, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:43:44.8482", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:43:44.8482", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 14.0579ms", "ElapsedMilliseconds": 14.0579, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:43:44.8482", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:43:44.8482", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:43:44.8482", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:43:44.8482", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:43:44.8685", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:43:44.8685", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:43:44.8685", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 15.212ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 15.212, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:43:44.8685", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:43:44.8685", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 18.8436ms", "ElapsedMilliseconds": 18.8436, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:43:44.9082", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:43:44.9082", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:43:44.9082", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 0.5586ms", "ElapsedMilliseconds": 0.5586, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:43:44.9211", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:43:44.9254", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:43:44.9254", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:43:44.9254", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:43:44.9415", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:43:44.9589", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:43:44.9797", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:43:44.9797", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 53.8581ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 53.8581, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:43:44.9797", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:43:44.9797", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 200 - application/json;+charset=utf-8 61.1564ms", "ElapsedMilliseconds": 61.1564, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:45:50.5540", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:45:50.5540", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:45:50.5540", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - 204 - - 0.5407ms", "ElapsedMilliseconds": 0.5407, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:45:50.5540", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - application/json 65", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 65, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:45:50.5540", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:45:50.5540", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:45:50.5540", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:45:50.5681", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:45:50.5681", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:45:50.5681", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:45:50.5681", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "1", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:45:50.5681", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.Tokens'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:45:50.5681", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 15.18ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 15.18, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:45:50.5681", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:45:50.5681", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 15.8059ms", "ElapsedMilliseconds": 15.8059, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:45:50.6169", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:45:50.6169", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:45:50.6169", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 0.3401ms", "ElapsedMilliseconds": 0.3401, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:45:50.7252", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:45:50.7252", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:45:50.7252", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 39.2685ms", "ElapsedMilliseconds": 39.2685, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:45:50.7252", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:45:50.7252", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:45:50.7252", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:45:50.7252", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:45:50.7252", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:45:50.7252", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:45:50.7252", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 4.6917ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 4.6917, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:45:50.7252", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:45:50.7252", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 5.7901ms", "ElapsedMilliseconds": 5.7901, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:45:50.7404", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:45:50.7404", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:45:50.7404", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:45:50.7404", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:45:50.7580", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:45:50.7580", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:45:50.7580", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 18.5165ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 18.5165, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:45:50.7580", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:45:50.7580", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 19.6283ms", "ElapsedMilliseconds": 19.6283, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:45:50.7910", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:45:50.7910", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:45:50.7910", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 0.5043ms", "ElapsedMilliseconds": 0.5043, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:45:50.8252", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:45:50.8252", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:45:50.8252", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:45:50.8252", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:45:50.8252", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:45:50.8358", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:45:50.8358", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:45:50.8358", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 10.5996ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 10.5996, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:45:50.8358", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:45:50.8358", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 200 - application/json;+charset=utf-8 11.6359ms", "ElapsedMilliseconds": 11.6359, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:45:54.3749", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:45:54.3749", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:45:54.3749", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 1.5603ms", "ElapsedMilliseconds": 1.5603, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:45:54.3890", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:45:54.3890", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:45:54.3890", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:45:54.3890", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:46:30.6830", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:46:30.6910", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:46:30.6910", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:46:30.7178", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:46:30.7178", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:46:30.7178", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:46:30.7266", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:46:30.7266", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:46:30.7266", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:46:30.7266", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:46:30.7266", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:46:30.7421", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 36350.4936ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 36350.4936, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:46:30.7421", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:46:30.7421", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 36353.5173ms", "ElapsedMilliseconds": 36353.5173, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:46:32.0215", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:46:32.0492", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 27.9538ms", "ElapsedMilliseconds": 27.9538, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:46:32.0666", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:46:32.0666", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 0.7593ms", "ElapsedMilliseconds": 0.7593, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:46:32.0695", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:46:32.0854", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 16.2613ms", "ElapsedMilliseconds": 16.2613, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:46:32.1376", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:46:32.1613", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 23.7384ms", "ElapsedMilliseconds": 23.7384, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:46:35.3481", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:46:35.3481", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:46:35.3511", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - 204 - - 3.0072ms", "ElapsedMilliseconds": 3.0072, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:46:35.3511", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - application/json 79", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 79, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:46:35.3511", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:46:35.3511", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:46:35.3677", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:46:35.3677", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:46:35.3987", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'System.String'.", "ObjectResultType": "BadRequestObjectResult", "Type": "System.String", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:46:35.3987", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 31.077ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 31.077, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:46:35.3987", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:46:35.3987", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - 400 - text/plain;+charset=utf-8 38.4023ms", "ElapsedMilliseconds": 38.4023, "StatusCode": 400, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:46:37.9754", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - application/json 79", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 79, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:46:37.9761", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:46:37.9761", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:46:37.9761", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:46:37.9761", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:46:38.0139", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'System.String'.", "ObjectResultType": "BadRequestObjectResult", "Type": "System.String", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:46:38.0139", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 37.2584ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 37.2584, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:46:38.0139", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:46:38.0139", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - 400 - text/plain;+charset=utf-8 38.8268ms", "ElapsedMilliseconds": 38.8268, "StatusCode": 400, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:46:40.5203", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - application/json 169", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 169, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:46:40.5203", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:46:40.5203", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 16:46:40.5203", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-02 16:46:40.5203", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - 401 0 - 12.7804ms", "ElapsedMilliseconds": 12.7804, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:46:55.4217", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - application/json 177", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:46:55.4217", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 16:46:55.4217", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-02 16:46:55.4217", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - 401 0 - 2.2531ms", "ElapsedMilliseconds": 2.2531, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:46:59.6081", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:46:59.6081", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:46:59.6081", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - 204 - - 1.1682ms", "ElapsedMilliseconds": 1.1682, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:46:59.6196", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - application/json 64", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 64, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:46:59.6196", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:46:59.6196", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:46:59.6196", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:46:59.6196", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:46:59.6196", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:46:59.6294", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:46:59.6294", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "3", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:46:59.6294", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.Tokens'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:46:59.6294", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:46:59.6294", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:46:59.6294", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 0.3124ms", "ElapsedMilliseconds": 0.3124, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:46:59.6294", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 16.5304ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 16.5304, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:46:59.6294", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:46:59.6294", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 17.2100ms", "ElapsedMilliseconds": 17.21, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:46:59.6497", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:46:59.6497", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:46:59.6497", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:46:59.6497", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 1.8571ms", "ElapsedMilliseconds": 1.8571, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:46:59.6497", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:46:59.6497", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:46:59.6497", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:46:59.6497", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:46:59.6497", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:46:59.6497", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:46:59.6497", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 6.1742ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 6.1742, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:46:59.6497", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:46:59.6497", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 200 - application/json;+charset=utf-8 9.2382ms", "ElapsedMilliseconds": 9.2382, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:46:59.6643", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:46:59.6643", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:46:59.6643", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:46:59.6643", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:46:59.6643", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:46:59.6643", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:46:59.6643", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 5.1749ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 5.1749, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:46:59.6643", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:46:59.6643", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 7.3315ms", "ElapsedMilliseconds": 7.3315, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:47:18.4520", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - application/json 177", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:47:18.4520", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 16:47:18.4520", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-02 16:47:18.4520", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - 403 0 - 3.9542ms", "ElapsedMilliseconds": 3.9542, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:47:20.1178", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - application/json 177", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:47:20.1178", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 16:47:20.1178", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-02 16:47:20.1178", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - 403 0 - 2.5019ms", "ElapsedMilliseconds": 2.5019, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:47:23.6558", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:47:23.6558", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:47:23.6558", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 1.5412ms", "ElapsedMilliseconds": 1.5412, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:47:23.6769", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:47:23.6769", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:47:23.6769", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:47:23.6769", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:48:17.3783", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:48:17.3783", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:48:17.3783", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:48:17.3783", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:48:17.3783", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 3.5515ms", "ElapsedMilliseconds": 3.5515, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:48:17.3783", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:48:17.3783", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:48:17.3783", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:48:17.3973", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:48:17.3973", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:48:17.3973", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:48:17.3973", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:48:17.3973", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:48:17.3973", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:48:17.3973", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:48:17.3973", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:48:17.3973", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:48:17.4111", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:48:17.4111", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:48:17.4111", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 53733.9697ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 53733.9697, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:48:17.4111", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:48:17.4111", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 53737.4872ms", "ElapsedMilliseconds": 53737.4872, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:48:17.4111", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:48:17.4111", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:48:17.4111", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 23.3757ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 23.3757, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:48:17.4111", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:48:17.4111", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 28.3560ms", "ElapsedMilliseconds": 28.356, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:48:35.8817", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - application/json 177", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:48:35.8817", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n ---> System.ArgumentException: IDX14102: Unable to decode the header '[PII of type 'Microsoft.IdentityModel.Logging.SecurityArtifact' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' as Base64Url encoded string.\r\n ---> System.Text.Json.JsonReaderException: '0xC8' is an invalid start of a value. LineNumber: 0 | BytePositionInLine: 0.\r\n   at System.Text.Json.ThrowHelper.ThrowJsonReaderException(Utf8JsonReader& json, ExceptionResource resource, Byte nextByte, ReadOnlySpan`1 bytes)\r\n   at System.Text.Json.Utf8JsonReader.ConsumeValue(Byte marker)\r\n   at System.Text.Json.Utf8JsonReader.ReadFirstToken(Byte first)\r\n   at System.Text.Json.Utf8JsonReader.ReadSingleSegment()\r\n   at System.Text.Json.Utf8JsonReader.Read()\r\n   at Microsoft.IdentityModel.Tokens.Json.JsonSerializerPrimitives.IsReaderAtTokenType(Utf8JsonReader& reader, JsonTokenType tokenType, Boolean advanceReader)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.CreateHeaderClaimSet(Byte[] bytes, Int32 length)\r\n   at Microsoft.IdentityModel.Tokens.Base64UrlEncoding.Decode[T](String input, Int32 offset, Int32 length, Func`3 action)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.CreateClaimSet(String rawString, Int32 startIndex, Int32 length, Func`3 action)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)\r\n   --- End of inner exception stack trace ---", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-02 16:48:35.8817", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-02 16:48:35.8817", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 16:48:35.8817", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-02 16:48:35.8817", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - 401 0 - 12.3329ms", "ElapsedMilliseconds": 12.3329, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:48:37.1566", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - application/json 177", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:48:37.1566", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n ---> System.ArgumentException: IDX14102: Unable to decode the header '[PII of type 'Microsoft.IdentityModel.Logging.SecurityArtifact' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' as Base64Url encoded string.\r\n ---> System.Text.Json.JsonReaderException: '0xC8' is an invalid start of a value. LineNumber: 0 | BytePositionInLine: 0.\r\n   at System.Text.Json.ThrowHelper.ThrowJsonReaderException(Utf8JsonReader& json, ExceptionResource resource, Byte nextByte, ReadOnlySpan`1 bytes)\r\n   at System.Text.Json.Utf8JsonReader.ConsumeValue(Byte marker)\r\n   at System.Text.Json.Utf8JsonReader.ReadFirstToken(Byte first)\r\n   at System.Text.Json.Utf8JsonReader.ReadSingleSegment()\r\n   at System.Text.Json.Utf8JsonReader.Read()\r\n   at Microsoft.IdentityModel.Tokens.Json.JsonSerializerPrimitives.IsReaderAtTokenType(Utf8JsonReader& reader, JsonTokenType tokenType, Boolean advanceReader)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.CreateHeaderClaimSet(Byte[] bytes, Int32 length)\r\n   at Microsoft.IdentityModel.Tokens.Base64UrlEncoding.Decode[T](String input, Int32 offset, Int32 length, Func`3 action)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.CreateClaimSet(String rawString, Int32 startIndex, Int32 length, Func`3 action)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)\r\n   --- End of inner exception stack trace ---", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-02 16:48:37.1566", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-02 16:48:37.1566", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 16:48:37.1566", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-02 16:48:37.1566", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - 401 0 - 1.8595ms", "ElapsedMilliseconds": 1.8595, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:49:02.6008", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:49:02.6008", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:49:02.6008", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:49:02.6008", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:49:02.6008", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:49:02.6008", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:49:02.6141", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:49:02.6141", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "3", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:49:02.6141", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.Tokens'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:49:02.6141", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 17.837ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 17.837, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:49:02.6141", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:49:02.6141", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 19.8487ms", "ElapsedMilliseconds": 19.8487, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:49:13.9410", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - application/json 177", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:49:13.9410", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 16:49:13.9410", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-02 16:49:13.9410", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - 403 0 - 1.0690ms", "ElapsedMilliseconds": 1.069, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:49:36.4360", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:49:36.4360", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:49:36.4360", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 0.4316ms", "ElapsedMilliseconds": 0.4316, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:49:36.4360", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:49:36.4360", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:49:36.4360", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:49:36.4360", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:49:36.4463", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:49:36.4463", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:49:36.4463", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:49:36.4463", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 7.4143ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 7.4143, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:49:36.4463", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:49:36.4463", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 8.3041ms", "ElapsedMilliseconds": 8.3041, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:49:44.3533", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - application/json 177", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:49:44.3533", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 16:49:44.3533", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-02 16:49:44.3533", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - 403 0 - 1.0998ms", "ElapsedMilliseconds": 1.0998, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:50:20.3298", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - application/json 155", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 155, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:50:20.3298", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 16:50:20.3354", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-02 16:50:20.3354", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - 403 0 - 5.7238ms", "ElapsedMilliseconds": 5.7238, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:50:52.5508", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - application/json 155", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 155, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:50:52.5508", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 16:50:52.5508", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-02 16:50:52.5508", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - 403 0 - 8.5037ms", "ElapsedMilliseconds": 8.5037, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:51:06.3899", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:51:06.3899", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:51:06.3899", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 1.8069ms", "ElapsedMilliseconds": 1.8069, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:51:06.4115", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:51:06.4115", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:51:06.4115", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:51:06.4115", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:51:06.4178", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:51:06.4370", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:51:06.4370", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:51:06.4370", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 24.7976ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 24.7976, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:51:06.4370", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:51:06.4370", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 26.1186ms", "ElapsedMilliseconds": 26.1186, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:51:11.4031", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:51:11.4031", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:51:11.4031", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:51:11.4031", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:51:11.4031", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:51:11.4114", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:51:11.4114", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:51:11.4114", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 7.06ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 7.06, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:51:11.4114", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:51:11.4114", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 8.7184ms", "ElapsedMilliseconds": 8.7184, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:51:30.3910", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:51:30.3910", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:51:30.3910", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 1.1284ms", "ElapsedMilliseconds": 1.1284, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:51:30.3976", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:51:30.3976", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:51:30.3976", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:51:30.3976", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:51:30.3976", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:51:30.3976", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:51:30.3976", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:51:30.3976", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 4.324ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 4.324, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:51:30.3976", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:51:30.3976", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 5.1773ms", "ElapsedMilliseconds": 5.1773, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:51:38.3005", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - application/json 155", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 155, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:51:38.3005", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 16:51:38.3005", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-02 16:51:38.3005", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - 403 0 - 1.3903ms", "ElapsedMilliseconds": 1.3903, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:51:38.3830", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:51:38.3830", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:51:38.3830", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 0.3461ms", "ElapsedMilliseconds": 0.3461, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:51:38.4588", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:51:38.4588", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:51:38.4588", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:51:38.4588", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:51:38.4876", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:51:38.4876", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:51:38.4876", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:51:38.4876", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 31.7892ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 31.7892, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:51:38.4876", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:51:38.4876", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 32.5033ms", "ElapsedMilliseconds": 32.5033, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:51:41.4019", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:51:41.4019", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:51:41.4019", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:51:41.4019", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:51:41.4019", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:51:41.4137", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:51:41.4137", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:51:41.4137", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 10.3757ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 10.3757, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:51:41.4137", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:51:41.4137", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 12.5267ms", "ElapsedMilliseconds": 12.5267, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:51:43.3926", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:51:43.3926", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:51:43.3945", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:51:43.3945", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:51:43.3945", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:51:43.3945", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:51:43.3945", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:51:43.3945", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 5.0138ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 5.0138, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:51:43.3945", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:51:43.3945", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 7.1418ms", "ElapsedMilliseconds": 7.1418, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:51:49.4020", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:51:49.4020", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:51:49.4020", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 0.5981ms", "ElapsedMilliseconds": 0.5981, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:51:49.4159", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:51:49.4159", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:51:49.4159", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:51:49.4159", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:51:49.4159", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:51:49.4159", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:51:49.4159", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:51:49.4159", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 6.7454ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 6.7454, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:51:49.4159", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:51:49.4159", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 7.8961ms", "ElapsedMilliseconds": 7.8961, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:51:52.3861", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:51:52.3861", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:51:52.3861", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:51:52.3861", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:51:52.3861", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:51:52.3861", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:51:52.3861", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:51:52.3861", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 4.6749ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 4.6749, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:51:52.3861", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:51:52.3861", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 5.7257ms", "ElapsedMilliseconds": 5.7257, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:51:54.3951", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:51:54.3951", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:51:54.3951", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:51:54.3951", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:51:54.3951", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:51:54.3951", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:51:54.3951", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:51:54.3951", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 6.9924ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 6.9924, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:51:54.3951", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:51:54.3951", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 8.6046ms", "ElapsedMilliseconds": 8.6046, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:51:55.3873", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:51:55.3873", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:51:55.3873", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 0.3567ms", "ElapsedMilliseconds": 0.3567, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:51:55.3873", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:51:55.3873", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:51:55.3873", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:51:55.3873", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:51:55.4002", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:51:55.4002", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:51:55.4002", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:51:55.4002", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 10.8339ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 10.8339, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:51:55.4002", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:51:55.4002", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 11.6439ms", "ElapsedMilliseconds": 11.6439, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:51:57.3866", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:51:57.3866", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:51:57.3866", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:51:57.3866", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:51:57.3948", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:51:57.3948", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:51:57.3948", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:51:57.3948", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 11.3843ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 11.3843, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:51:57.3948", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:51:57.3948", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 14.8072ms", "ElapsedMilliseconds": 14.8072, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:52:01.4125", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:52:01.4125", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:52:01.4125", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 1.0860ms", "ElapsedMilliseconds": 1.086, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:52:01.5182", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:52:01.5182", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:52:01.5182", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:52:01.5182", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:52:01.5182", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:52:01.5230", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:52:01.5230", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:52:01.5230", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 4.4369ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 4.4369, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:52:01.5230", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:52:01.5230", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 5.2837ms", "ElapsedMilliseconds": 5.2837, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:52:04.3960", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:52:04.3960", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:52:04.3960", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:52:04.3960", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:52:04.3960", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:52:04.3960", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:52:04.3960", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:52:04.3960", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 4.9779ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 4.9779, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:52:04.3960", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:52:04.3960", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 6.0338ms", "ElapsedMilliseconds": 6.0338, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:52:10.3903", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:52:10.3903", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:52:10.3903", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 1.1363ms", "ElapsedMilliseconds": 1.1363, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:52:10.4084", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:52:10.4084", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:52:10.4084", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:52:10.4084", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:52:10.4118", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:52:10.4118", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:52:10.4118", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:52:10.4118", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 5.0288ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 5.0288, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:52:10.4118", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:52:10.4118", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 6.1327ms", "ElapsedMilliseconds": 6.1327, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:52:28.3914", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:52:28.3914", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:52:28.3914", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 1.5032ms", "ElapsedMilliseconds": 1.5032, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:52:28.4713", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:52:28.4713", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:52:28.4713", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:52:28.4713", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:52:28.4755", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:52:28.4755", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:52:28.4755", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:52:28.4755", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 6.8589ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 6.8589, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:52:28.4755", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:52:28.4755", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 7.6299ms", "ElapsedMilliseconds": 7.6299, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:52:31.4911", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:52:31.4921", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:52:31.4921", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:52:31.4921", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:52:31.4921", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:52:31.4921", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:52:31.4921", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:52:31.4921", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 7.0793ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 7.0793, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:52:31.4921", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:52:31.4921", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 9.1430ms", "ElapsedMilliseconds": 9.143, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:53:07.1395", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - application/json 155", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 155, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:53:07.1395", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 16:53:07.1395", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-02 16:53:07.1395", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - 403 0 - 4.6951ms", "ElapsedMilliseconds": 4.6951, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:53:45.6136", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:53:45.6136", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:53:45.6136", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 3.7460ms", "ElapsedMilliseconds": 3.746, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:53:48.4389", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:53:48.4423", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:53:48.4423", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:53:48.4423", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:53:48.4423", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:53:48.4423", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:53:48.4423", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:53:48.4423", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 7.2366ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 7.2366, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:53:48.4423", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:53:48.4423", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 11.9188ms", "ElapsedMilliseconds": 11.9188, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:54:12.7729", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:54:12.7729", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:54:12.7729", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 4.0805ms", "ElapsedMilliseconds": 4.0805, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:54:12.7923", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:54:12.7923", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:54:12.7923", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:54:12.7923", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:54:12.8001", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:54:12.8001", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:54:12.8001", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:54:12.8001", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 4.1706ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 4.1706, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:54:12.8001", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:54:12.8001", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 10.3857ms", "ElapsedMilliseconds": 10.3857, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:56:02.0030", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 16:56:02.1990", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 16:56:02.2029", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-02 16:56:02.2029", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-02 16:56:02.2029", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 16:56:03.0730", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:56:03.1903", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 16:56:03.2727", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 202.5388ms", "ElapsedMilliseconds": 202.5388, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:56:03.2852", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:56:03.3001", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:56:03.3001", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 5.0281ms", "ElapsedMilliseconds": 5.0281, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:56:03.3320", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 56.0122ms", "ElapsedMilliseconds": 56.0122, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:56:03.4949", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:56:03.6212", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 126.6811ms", "ElapsedMilliseconds": 126.6811, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:56:38.6065", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:56:38.6209", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:56:38.6805", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:56:38.7134", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:56:40.1445", "level": "INFO", "message": "Executed DbCommand (65ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "65", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:56:40.2526", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:56:40.3165", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:56:40.4438", "level": "INFO", "message": "Executed DbCommand (6ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "6", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:56:40.4577", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.Tokens'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:56:40.4577", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 1750.2543ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 1750.2543, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:56:40.4577", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:56:40.4838", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 1877.4569ms", "ElapsedMilliseconds": 1877.4569, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:56:48.4033", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:56:48.4033", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:56:48.4033", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 5.5676ms", "ElapsedMilliseconds": 5.5676, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:56:48.4147", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:56:48.4147", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:56:48.4711", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:56:48.4711", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:56:48.5422", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:56:48.5622", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:56:48.5622", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:56:48.5622", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 90.6792ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 90.6792, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:56:48.5622", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:56:48.5622", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 150.3890ms", "ElapsedMilliseconds": 150.389, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:57:08.3913", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:57:08.3925", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:57:08.3925", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 1.8670ms", "ElapsedMilliseconds": 1.867, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:57:08.3925", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:57:08.3925", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:57:08.3925", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:57:08.3925", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:57:08.4290", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:57:08.4290", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:57:08.4290", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:57:08.4290", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 34.2918ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 34.2918, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:57:08.4290", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:57:08.4290", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 41.5418ms", "ElapsedMilliseconds": 41.5418, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:57:17.8654", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - application/json 177", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:57:17.8654", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'xONNE9xpRgnww5VZjzpUHoVIJceWLlZrHg9vqddnS58'. , KeyId: \r\n'. Number of keys in TokenValidationParameters: '1'. \nNumber of keys in Configuration: '0'. \nExceptions caught:\n '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.\ntoken: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignature(JsonWebToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignatureAndIssuerSecurityKey(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-02 16:57:17.8950", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'xONNE9xpRgnww5VZjzpUHoVIJceWLlZrHg9vqddnS58'. , KeyId: \r\n'. Number of keys in TokenValidationParameters: '1'. \nNumber of keys in Configuration: '0'. \nExceptions caught:\n '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.\ntoken: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'xONNE9xpRgnww5VZjzpUHoVIJceWLlZrHg9vqddnS58'. , KeyId: \r\n'. Number of keys in TokenValidationParameters: '1'. \nNumber of keys in Configuration: '0'. \nExceptions caught:\n '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.\ntoken: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-02 16:57:17.8950", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 16:57:17.9042", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-02 16:57:17.9042", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - 401 0 - 39.1540ms", "ElapsedMilliseconds": 39.154, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:57:41.8998", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - application/json 169", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 169, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:57:41.8998", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:57:41.8998", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 16:57:41.8998", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-02 16:57:41.8998", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - 401 0 - 13.8933ms", "ElapsedMilliseconds": 13.8933, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:57:51.4358", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - application/json 177", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:57:51.4358", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'xONNE9xpRgnww5VZjzpUHoVIJceWLlZrHg9vqddnS58'. , KeyId: \r\n'. Number of keys in TokenValidationParameters: '1'. \nNumber of keys in Configuration: '0'. \nExceptions caught:\n '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.\ntoken: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignature(JsonWebToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignatureAndIssuerSecurityKey(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-02 16:57:51.4358", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'xONNE9xpRgnww5VZjzpUHoVIJceWLlZrHg9vqddnS58'. , KeyId: \r\n'. Number of keys in TokenValidationParameters: '1'. \nNumber of keys in Configuration: '0'. \nExceptions caught:\n '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.\ntoken: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'xONNE9xpRgnww5VZjzpUHoVIJceWLlZrHg9vqddnS58'. , KeyId: \r\n'. Number of keys in TokenValidationParameters: '1'. \nNumber of keys in Configuration: '0'. \nExceptions caught:\n '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.\ntoken: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-02 16:57:51.4358", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 16:57:51.4358", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-02 16:57:51.4358", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - 401 0 - 3.9458ms", "ElapsedMilliseconds": 3.9458, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:58:34.3944", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:58:34.3944", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:58:34.3944", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 10.1275ms", "ElapsedMilliseconds": 10.1275, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:58:34.4172", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:58:34.4172", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:58:34.4172", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:58:34.4172", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:58:34.4300", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:58:34.4300", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:58:34.4300", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:58:34.4300", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 8.8425ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 8.8425, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:58:34.4300", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:58:34.4300", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 16.5177ms", "ElapsedMilliseconds": 16.5177, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:58:48.3919", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:58:48.3919", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:58:48.3919", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 1.3055ms", "ElapsedMilliseconds": 1.3055, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:58:48.3994", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:58:48.3994", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:58:48.3994", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:58:48.3994", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:58:48.3994", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:58:48.3994", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:58:48.4093", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:58:48.4093", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 8.7288ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 8.7288, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:58:48.4093", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:58:48.4093", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 10.3193ms", "ElapsedMilliseconds": 10.3193, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:58:51.3921", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:58:51.3921", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:58:51.3921", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:58:51.3921", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:58:51.3956", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:58:51.3956", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:58:51.3956", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:58:51.3956", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 5.6386ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 5.6386, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:58:51.3956", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:58:51.3956", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 7.0693ms", "ElapsedMilliseconds": 7.0693, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:59:06.1772", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - application/json 177", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:59:06.1772", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'xONNE9xpRgnww5VZjzpUHoVIJceWLlZrHg9vqddnS58'. , KeyId: \r\n'. Number of keys in TokenValidationParameters: '1'. \nNumber of keys in Configuration: '0'. \nExceptions caught:\n '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.\ntoken: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignature(JsonWebToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignatureAndIssuerSecurityKey(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-02 16:59:06.1772", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'xONNE9xpRgnww5VZjzpUHoVIJceWLlZrHg9vqddnS58'. , KeyId: \r\n'. Number of keys in TokenValidationParameters: '1'. \nNumber of keys in Configuration: '0'. \nExceptions caught:\n '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.\ntoken: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'xONNE9xpRgnww5VZjzpUHoVIJceWLlZrHg9vqddnS58'. , KeyId: \r\n'. Number of keys in TokenValidationParameters: '1'. \nNumber of keys in Configuration: '0'. \nExceptions caught:\n '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.\ntoken: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-02 16:59:06.1772", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 16:59:06.1772", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-02 16:59:06.1772", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - 401 0 - 1.3524ms", "ElapsedMilliseconds": 1.3524, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:59:09.3920", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:59:09.3920", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:59:09.3920", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 1.5444ms", "ElapsedMilliseconds": 1.5444, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:59:09.4086", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:59:09.4086", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:59:09.4086", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:59:09.4086", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:59:09.4136", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:59:09.4136", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:59:09.4136", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:59:09.4136", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 9.3385ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 9.3385, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:59:09.4136", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:59:09.4136", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 11.0384ms", "ElapsedMilliseconds": 11.0384, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:59:13.3988", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:59:13.3988", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:59:13.3988", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:59:13.3988", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:59:13.3988", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:59:13.4115", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:59:13.4115", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:59:13.4115", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 12.2122ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 12.2122, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:59:13.4115", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:59:13.4115", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 14.3498ms", "ElapsedMilliseconds": 14.3498, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:59:16.2897", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/Buy - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/Buy", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:59:16.2909", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:59:16.2909", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/Buy - 204 - - 1.9791ms", "ElapsedMilliseconds": 1.9791, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/Buy", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:59:16.3755", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Licenses/Buy - application/json 43", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 43, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/Buy", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:59:16.3755", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:59:16.3755", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.CreateLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.CreateLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:59:16.3755", "level": "INFO", "message": "Route matched with {action = \"CreateLicenses\", controller = \"Licenses\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateLicenses(Models.DTOs.Licenses.Create.LicensesCreateDto) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"CreateLicenses\", controller = \"Licenses\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateLicenses(Models.DTOs.Licenses.Create.LicensesCreateDto)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:59:16.4045", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:59:16.4256", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.CreateLicenses (Api) in 40.3354ms", "ActionName": "Api.Controllers.LicensesController.CreateLicenses (Api)", "ElapsedMilliseconds": 40.3354, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:59:16.4256", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.CreateLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.CreateLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:59:16.4256", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Licenses/Buy - 400 - application/problem+json;+charset=utf-8 50.4683ms", "ElapsedMilliseconds": 50.4683, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/Buy", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:59:25.0151", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:59:25.0151", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:59:25.0151", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 1.1133ms", "ElapsedMilliseconds": 1.1133, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 16:59:25.1165", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 16:59:25.1165", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 16:59:25.1165", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 16:59:25.1165", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 16:59:25.1210", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 16:59:25.1210", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 16:59:25.1210", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 16:59:25.1210", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 8.4562ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 8.4562, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 16:59:25.1210", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 16:59:25.1210", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 9.3637ms", "ElapsedMilliseconds": 9.3637, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:00:02.4321", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 17:00:02.5658", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 17:00:02.5658", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-02 17:00:02.5658", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-02 17:00:02.5658", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 17:00:03.0141", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:00:03.1323", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 17:00:03.2152", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 207.1177ms", "ElapsedMilliseconds": 207.1177, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:00:03.2152", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:00:03.2152", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:00:03.2152", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.9036ms", "ElapsedMilliseconds": 2.9036, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:00:03.2519", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 33.0636ms", "ElapsedMilliseconds": 33.0636, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:00:03.3023", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:00:03.4281", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 125.8634ms", "ElapsedMilliseconds": 125.8634, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:00:24.4188", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - application/json 177", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:00:24.5273", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'xONNE9xpRgnww5VZjzpUHoVIJceWLlZrHg9vqddnS58'. , KeyId: \r\n'. Number of keys in TokenValidationParameters: '1'. \nNumber of keys in Configuration: '0'. \nExceptions caught:\n '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.\ntoken: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignature(JsonWebToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignatureAndIssuerSecurityKey(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-02 17:00:24.5563", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'xONNE9xpRgnww5VZjzpUHoVIJceWLlZrHg9vqddnS58'. , KeyId: \r\n'. Number of keys in TokenValidationParameters: '1'. \nNumber of keys in Configuration: '0'. \nExceptions caught:\n '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.\ntoken: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'xONNE9xpRgnww5VZjzpUHoVIJceWLlZrHg9vqddnS58'. , KeyId: \r\n'. Number of keys in TokenValidationParameters: '1'. \nNumber of keys in Configuration: '0'. \nExceptions caught:\n '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.\ntoken: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-02 17:00:24.5563", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:00:24.5929", "level": "INFO", "message": "Route matched with {action = \"Create\", controller = \"Ticket\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:00:28.6897", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.Create (Api) in 4091.7486ms", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 4091.7486, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:00:28.6943", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:00:40.4013", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:00:40.9580", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:00:40.9580", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 564.6770ms", "ElapsedMilliseconds": 564.677, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:00:40.9580", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:00:40.9733", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:00:40.9733", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:00:40.9956", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:00:41.0488", "level": "ERROR", "message": "testtt {\"ClassName\":\"System.ArgumentNullException\",\"Message\":\"Value cannot be null.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at System.Int32.Parse(String s)\\r\\n   at Api.Controllers.TicketController.Create(TicketCreateDto request) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\TicketController.cs:line 95\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"System.Private.CoreLib\",\"WatsonBuckets\":null,\"ParamName\":\"s\"}" }
{ "time": "2024-04-02 17:00:42.1833", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 17:00:42.6152", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - 400 - application/json 18196.3696ms", "ElapsedMilliseconds": 18196.3696, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:00:42.9900", "level": "INFO", "message": "Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "22", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:00:43.0448", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 17:00:43.0448", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 2052.762ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 2052.762, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:00:43.0448", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:00:43.0524", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 2081.2301ms", "ElapsedMilliseconds": 2081.2301, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:00:50.7458", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:00:50.7458", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n ---> System.ArgumentException: IDX14102: Unable to decode the header '[PII of type 'Microsoft.IdentityModel.Logging.SecurityArtifact' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' as Base64Url encoded string.\r\n ---> System.Text.Json.JsonReaderException: '0xC8' is an invalid start of a value. LineNumber: 0 | BytePositionInLine: 0.\r\n   at System.Text.Json.ThrowHelper.ThrowJsonReaderException(Utf8JsonReader& json, ExceptionResource resource, Byte nextByte, ReadOnlySpan`1 bytes)\r\n   at System.Text.Json.Utf8JsonReader.ConsumeValue(Byte marker)\r\n   at System.Text.Json.Utf8JsonReader.ReadFirstToken(Byte first)\r\n   at System.Text.Json.Utf8JsonReader.ReadSingleSegment()\r\n   at System.Text.Json.Utf8JsonReader.Read()\r\n   at Microsoft.IdentityModel.Tokens.Json.JsonSerializerPrimitives.IsReaderAtTokenType(Utf8JsonReader& reader, JsonTokenType tokenType, Boolean advanceReader)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.CreateHeaderClaimSet(Byte[] bytes, Int32 length)\r\n   at Microsoft.IdentityModel.Tokens.Base64UrlEncoding.Decode[T](String input, Int32 offset, Int32 length, Func`3 action)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.CreateClaimSet(String rawString, Int32 startIndex, Int32 length, Func`3 action)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)\r\n   --- End of inner exception stack trace ---", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-02 17:00:50.7573", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-02 17:00:50.7573", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-02 17:00:50.7573", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-02 17:00:50.7573", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/getLicenses - 401 0 - 23.2939ms", "ElapsedMilliseconds": 23.2939, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:00:52.4298", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:02:37.2591", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-02 17:02:38.4536", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-02 17:02:38.4632", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-02 17:02:38.4632", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-02 17:02:38.4719", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-02 17:02:39.5559", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:02:39.7756", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-02 17:02:39.9086", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 359.9299ms", "ElapsedMilliseconds": 359.9299, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:02:39.9208", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:02:39.9295", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:02:39.9295", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 9.5579ms", "ElapsedMilliseconds": 9.5579, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:02:39.9854", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 55.9046ms", "ElapsedMilliseconds": 55.9046, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:02:40.0555", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:02:40.2616", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 205.6755ms", "ElapsedMilliseconds": 205.6755, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:03:03.1474", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:03:03.1474", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:03:03.1474", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:03:03.1474", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:03:03.1474", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - 204 - - 8.4870ms", "ElapsedMilliseconds": 8.487, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:03:03.1474", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 10.1163ms", "ElapsedMilliseconds": 10.1163, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:03:03.1602", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - application/json 64", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 64, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:03:03.1602", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:03:03.1602", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:03:03.1602", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:03:03.2021", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:03:03.2331", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:03:03.2512", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:03:03.2558", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:03:04.2196", "level": "INFO", "message": "Executed DbCommand (37ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "37", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:03:04.2196", "level": "INFO", "message": "Executed DbCommand (37ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "37", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:03:04.2891", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:03:04.2891", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:03:04.3180", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 17:03:04.3180", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:03:04.3180", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 1067.5929ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 1067.5929, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:03:04.3180", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:03:04.3353", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 200 - application/json;+charset=utf-8 1174.5574ms", "ElapsedMilliseconds": 1174.5574, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:03:04.3901", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "3", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:03:04.3950", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.Tokens'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 17:03:04.3950", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 1162.3229ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 1162.3229, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:03:04.3950", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:03:04.3950", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 1235.7574ms", "ElapsedMilliseconds": 1235.7574, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:03:04.3950", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:03:04.3950", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:03:04.3950", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 0.4471ms", "ElapsedMilliseconds": 0.4471, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:03:04.4403", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:03:04.4403", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:03:04.4445", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:03:04.4445", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:03:04.4896", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:03:04.4896", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 17:03:04.4896", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 46.532ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 46.532, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:03:04.4896", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:03:04.4896", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 52.3869ms", "ElapsedMilliseconds": 52.3869, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:03:10.7174", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:03:10.7174", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:03:10.7174", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 1.3218ms", "ElapsedMilliseconds": 1.3218, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:03:10.7267", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:03:10.7267", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:03:10.7267", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:03:10.7267", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:03:14.3374", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:03:16.2181", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 17:03:16.2181", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 5495.6315ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 5495.6315, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:03:16.2181", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:03:16.2181", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 5501.5673ms", "ElapsedMilliseconds": 5501.5673, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:03:19.6376", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:03:19.6376", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:03:19.6376", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 1.2511ms", "ElapsedMilliseconds": 1.2511, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:03:19.6440", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:03:19.6440", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:03:19.6440", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:03:19.6440", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:03:23.8016", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:03:23.8085", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:03:23.8085", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:03:23.8334", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:03:23.8374", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:03:23.8374", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:03:23.8374", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:03:23.8374", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:03:23.8374", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:03:23.8374", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:03:23.8511", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 17:03:23.8511", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 4204.2554ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 4204.2554, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:03:23.8511", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:03:23.8511", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 4209.6831ms", "ElapsedMilliseconds": 4209.6831, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:03:33.6352", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:03:33.6352", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:03:33.6352", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 2.8882ms", "ElapsedMilliseconds": 2.8882, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:03:33.6352", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:03:33.6352", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:03:33.6352", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:03:33.6352", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:03:33.6502", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 17:03:33.6502", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:03:33.6502", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 17:03:33.6502", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 19.4093ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 19.4093, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:03:33.6502", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:03:33.6502", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 22.7890ms", "ElapsedMilliseconds": 22.789, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:03:40.5629", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:03:40.5629", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:03:40.5629", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:05:02.2315", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:05:02.2335", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:05:02.2335", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:05:02.2335", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 0.4059ms", "ElapsedMilliseconds": 0.4059, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:05:02.2335", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:05:02.2335", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - application/json 177", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:05:02.2421", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:05:02.2421", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'xONNE9xpRgnww5VZjzpUHoVIJceWLlZrHg9vqddnS58'. , KeyId: \r\n'. Number of keys in TokenValidationParameters: '1'. \nNumber of keys in Configuration: '0'. \nExceptions caught:\n '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.\ntoken: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignature(JsonWebToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignatureAndIssuerSecurityKey(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-02 17:05:02.2421", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:05:02.2421", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:05:02.2674", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:05:02.2674", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'xONNE9xpRgnww5VZjzpUHoVIJceWLlZrHg9vqddnS58'. , KeyId: \r\n'. Number of keys in TokenValidationParameters: '1'. \nNumber of keys in Configuration: '0'. \nExceptions caught:\n '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.\ntoken: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'xONNE9xpRgnww5VZjzpUHoVIJceWLlZrHg9vqddnS58'. , KeyId: \r\n'. Number of keys in TokenValidationParameters: '1'. \nNumber of keys in Configuration: '0'. \nExceptions caught:\n '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.\ntoken: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-02 17:05:02.2674", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:05:02.2674", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:05:02.2674", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:05:02.2943", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:05:02.2943", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 17:05:02.3012", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:05:02.3012", "level": "INFO", "message": "Route matched with {action = \"Create\", controller = \"Ticket\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:05:02.3012", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:05:02.3012", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:05:02.3012", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:05:02.3012", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 17:05:02.3012", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 41.4185ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 41.4185, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:05:02.3012", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:05:02.3012", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 50.7848ms", "ElapsedMilliseconds": 50.7848, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:05:02.3012", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:05:02.3012", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:05:02.3012", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 17:05:02.3012", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 81750.0312ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 81750.0312, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:05:02.3012", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:05:02.3012", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 81752.1668ms", "ElapsedMilliseconds": 81752.1668, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:05:02.9197", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.Create (Api) in 615.2676ms", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 615.2676, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:05:02.9197", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:05:03.0586", "level": "ERROR", "message": "testtt {\"ClassName\":\"System.ArgumentNullException\",\"Message\":\"Value cannot be null.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at System.Int32.Parse(String s)\\r\\n   at Api.Controllers.TicketController.Create(TicketCreateDto request) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\TicketController.cs:line 95\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"System.Private.CoreLib\",\"WatsonBuckets\":null,\"ParamName\":\"s\"}" }
{ "time": "2024-04-02 17:05:03.1436", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Ticket/CreateTicket - 400 - application/json 904.6719ms", "ElapsedMilliseconds": 904.6719, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:06:00.4286", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:06:00.4322", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:06:00.4322", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 39.8745ms", "ElapsedMilliseconds": 39.8745, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:06:00.4548", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:06:00.4548", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:06:00.4548", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:06:00.4548", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:06:00.4651", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 17:06:00.4651", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:06:00.4651", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 17:06:00.4651", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 12.1504ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 12.1504, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:06:00.4651", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:06:00.4651", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 13.6246ms", "ElapsedMilliseconds": 13.6246, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:06:40.6218", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:06:40.6218", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:06:40.6306", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 8.8750ms", "ElapsedMilliseconds": 8.875, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:06:40.6306", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:06:40.6306", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:06:40.6306", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:06:40.6306", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:06:40.6306", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 17:06:40.6306", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:06:40.6306", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 17:06:40.6306", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 4.513ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 4.513, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:06:40.6306", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:06:40.6306", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 5.2516ms", "ElapsedMilliseconds": 5.2516, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:06:43.7047", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:06:43.7047", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:06:43.7047", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:06:43.7047", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:06:43.7077", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 17:06:43.7077", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:06:43.7077", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 17:06:43.7077", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 4.7834ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 4.7834, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:06:43.7077", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:06:43.7077", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 6.2262ms", "ElapsedMilliseconds": 6.2262, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:08:28.4054", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:08:28.4054", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:08:28.4061", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 0.7055ms", "ElapsedMilliseconds": 0.7055, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:08:28.4061", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:08:28.4061", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:08:28.4061", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:08:28.4223", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:08:28.4223", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 17:08:28.4300", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:08:28.4300", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 17:08:28.4300", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 8.0848ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 8.0848, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:08:28.4300", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:08:28.4300", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 9.0572ms", "ElapsedMilliseconds": 9.0572, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:08:34.4006", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:08:34.4006", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:08:34.4006", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 1.5995ms", "ElapsedMilliseconds": 1.5995, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:08:34.4067", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:08:34.4067", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:08:34.4067", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:08:34.4067", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:08:34.4067", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 17:08:34.4114", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:08:34.4114", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 17:08:34.4114", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 4.5702ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 4.5702, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:08:34.4114", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:08:34.4114", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 5.2582ms", "ElapsedMilliseconds": 5.2582, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:08:44.2995", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:08:44.3005", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:08:44.3005", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 1.6662ms", "ElapsedMilliseconds": 1.6662, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:08:44.3005", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:08:44.3005", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:08:44.3005", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:08:44.3005", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:08:44.3005", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 17:08:44.3005", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:08:44.3005", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 17:08:44.3005", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 4.3854ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 4.3854, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:08:44.3005", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:08:44.3005", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 5.1913ms", "ElapsedMilliseconds": 5.1913, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:09:01.3928", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:09:01.3928", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:09:01.3928", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 1.0371ms", "ElapsedMilliseconds": 1.0371, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:09:01.4115", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:09:01.4115", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:09:01.4115", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:09:01.4115", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:09:01.4115", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 17:09:01.4115", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:09:01.4115", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 17:09:01.4115", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 4.5265ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 4.5265, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:09:01.4115", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:09:01.4115", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 5.2112ms", "ElapsedMilliseconds": 5.2112, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:09:07.2945", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:09:07.2945", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:09:07.2945", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 1.0492ms", "ElapsedMilliseconds": 1.0492, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:09:07.3006", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:09:07.3006", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:09:07.3006", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:09:07.3006", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:09:07.3046", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 17:09:07.3046", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:09:07.3046", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 17:09:07.3046", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 7.0049ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 7.0049, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:09:07.3046", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:09:07.3046", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 7.9746ms", "ElapsedMilliseconds": 7.9746, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:09:41.4085", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:09:41.4144", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:09:41.4144", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 9.1323ms", "ElapsedMilliseconds": 9.1323, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:09:41.4266", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:09:41.4266", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:09:41.4266", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:09:41.4266", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:09:41.4266", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 17:09:41.4534", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:09:41.4534", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 17:09:41.4534", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 26.3314ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 26.3314, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:09:41.4534", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:09:41.4534", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 27.2599ms", "ElapsedMilliseconds": 27.2599, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:10:37.3952", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:10:37.3968", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:10:37.3968", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 7.4852ms", "ElapsedMilliseconds": 7.4852, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:10:37.3968", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:10:37.3968", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:10:37.3968", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:10:37.3968", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:10:37.4157", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 17:10:37.4157", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:10:37.4157", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 17:10:37.4251", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 12.6974ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 12.6974, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:10:37.4251", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:10:37.4251", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 13.9190ms", "ElapsedMilliseconds": 13.919, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:10:39.9518", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:10:39.9518", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:10:39.9518", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:10:39.9518", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:10:39.9518", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 17:10:39.9623", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:10:39.9623", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 17:10:39.9623", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 9.5759ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 9.5759, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:10:39.9623", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:10:39.9623", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 11.6196ms", "ElapsedMilliseconds": 11.6196, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:11:17.1227", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:11:17.1317", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:11:17.1317", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 9.2852ms", "ElapsedMilliseconds": 9.2852, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-02 17:11:17.2153", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-02 17:11:17.2153", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-02 17:11:17.2153", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-02 17:11:17.2153", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-02 17:11:17.2236", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-02 17:11:17.2236", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-02 17:11:17.2236", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-02 17:11:17.2236", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 11.5498ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 11.5498, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-02 17:11:17.2236", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-02 17:11:17.2236", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 13.6335ms", "ElapsedMilliseconds": 13.6335, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
