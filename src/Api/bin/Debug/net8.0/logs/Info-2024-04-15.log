{ "time": "2024-04-15 15:07:08.6729", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-15 15:07:08.8839", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-15 15:07:08.8839", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-15 15:07:08.8839", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-15 15:07:08.8839", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-15 15:07:10.4897", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:07:10.6878", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-15 15:07:10.8123", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 321.3622ms", "ElapsedMilliseconds": 321.3622, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:07:10.8595", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:07:10.8595", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.0197ms", "ElapsedMilliseconds": 3.0197, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:07:10.8595", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:07:10.9483", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 84.3781ms", "ElapsedMilliseconds": 84.3781, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:07:11.0145", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:07:11.1996", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 183.6996ms", "ElapsedMilliseconds": 183.6996, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:07:30.5793", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:07:30.5905", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:07:30.6513", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:07:30.7070", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:07:32.1603", "level": "INFO", "message": "Executed DbCommand (54ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "54", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:07:32.2551", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:07:32.2883", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:07:32.3320", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:07:32.4319", "level": "INFO", "message": "Executed DbCommand (5ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "5", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:07:32.4444", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:07:32.4641", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 1748.0673ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 1748.0673, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:07:32.4641", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:07:32.4822", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 1903.1017ms", "ElapsedMilliseconds": 1903.1017, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:08:14.2504", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 34", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 34, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:08:14.2504", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:08:14.2685", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-15 15:08:14.2772", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-15 15:08:14.2772", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 401 0 - 27.2317ms", "ElapsedMilliseconds": 27.2317, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:10:06.4782", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:10:06.5337", "level": "INFO", "message": "Executing endpoint '405 HTTP Method Not Supported'", "EndpointName": {"DisplayName":"405 HTTP Method Not Supported", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:10:06.5337", "level": "INFO", "message": "Executed endpoint '405 HTTP Method Not Supported'", "EndpointName": {"DisplayName":"405 HTTP Method Not Supported", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:10:06.5337", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Ticket/edit - 405 0 - 56.9377ms", "ElapsedMilliseconds": 56.9377, "StatusCode": 405, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:10:22.9383", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:10:22.9458", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:10:22.9458", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:10:22.9458", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:10:23.0703", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:10:23.0703", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:10:23.0703", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:10:23.0703", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:10:23.0703", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "1", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:10:23.0853", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:10:23.0853", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 138.7703ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 138.7703, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:10:23.0853", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:10:23.0853", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 148.4161ms", "ElapsedMilliseconds": 148.4161, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:10:46.8185", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:10:46.8294", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:10:46.8294", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:10:46.9502", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]'.", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:10:46.9661", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 131.3385ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 131.3385, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:10:46.9661", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:10:46.9661", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 400 - application/json;+charset=utf-8 147.9370ms", "ElapsedMilliseconds": 147.937, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:11:27.6210", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:11:27.6210", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:11:27.6210", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:11:27.6210", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]'.", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:11:27.6210", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 3.8361ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 3.8361, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:11:27.6323", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:11:27.6323", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 400 - application/json;+charset=utf-8 11.6620ms", "ElapsedMilliseconds": 11.662, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:11:50.2539", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:11:50.2539", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:11:50.2539", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:11:50.2683", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]'.", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:11:50.2683", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 11.8405ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 11.8405, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:11:50.2683", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:11:50.2683", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 400 - application/json;+charset=utf-8 15.3577ms", "ElapsedMilliseconds": 15.3577, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:11:51.8172", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:11:51.8172", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:11:51.8172", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:11:51.8207", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]'.", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:11:51.8207", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 1.7822ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 1.7822, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:11:51.8207", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:11:51.8207", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 400 - application/json;+charset=utf-8 4.1162ms", "ElapsedMilliseconds": 4.1162, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:12:02.3196", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-15 15:12:02.5217", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-15 15:12:02.5293", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-15 15:12:02.5293", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-15 15:12:02.5293", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-15 15:12:03.1635", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:12:03.3187", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-15 15:12:03.4231", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 263.7147ms", "ElapsedMilliseconds": 263.7147, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:12:03.4540", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:12:03.4540", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:12:03.4540", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.7460ms", "ElapsedMilliseconds": 2.746, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:12:03.5126", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 57.6229ms", "ElapsedMilliseconds": 57.6229, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:12:03.6217", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:12:03.6388", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/favicon-32x32.png - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/favicon-32x32.png", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:12:03.6593", "level": "INFO", "message": "Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'", "VirtualPath": "/favicon-32x32.png", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" }
{ "time": "2024-04-15 15:12:03.6593", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/favicon-32x32.png - 200 628 image/png 21.8414ms", "ElapsedMilliseconds": 21.8414, "StatusCode": 200, "ContentType": "image/png", "ContentLength": 628, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/favicon-32x32.png", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:12:03.8103", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 188.4696ms", "ElapsedMilliseconds": 188.4696, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:12:07.8701", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:12:08.0297", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:12:08.0647", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:12:09.3855", "level": "INFO", "message": "Executed DbCommand (51ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "51", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:12:09.4063", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 1337.7418ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 1337.7418, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:12:09.4063", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:12:09.5308", "level": "ERROR", "message": "{\"Errors\":null,\"Message\":\"Resource not found\",\"Data\":{},\"InnerException\":null,\"HelpLink\":null,\"Source\":\"Core\",\"HResult\":-2146233088,\"StackTrace\":\"   at Core.Repositories.Repository`1.GetSingle(Expression`1 expression, Boolean throwException) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Core\\\\Repositories\\\\Repository.cs:line 61\\r\\n   at Business.Services.TicketService.Edit(TicketEditStatusDto request) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Application\\\\Services\\\\TicketService.cs:line 68\\r\\n   at Api.Controllers.TicketController.EditTicketStatus(TicketEditStatusDto request) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\TicketController.cs:line 52\\r\\n   at lambda_method3(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\"}" }
{ "time": "2024-04-15 15:12:09.5548", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 400 - application/json 1684.7390ms", "ElapsedMilliseconds": 1684.739, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:12:24.1376", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-15 15:12:26.2110", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-15 15:12:26.2110", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-15 15:12:26.2110", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-15 15:12:26.2110", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-15 15:12:27.4930", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:12:27.8365", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-15 15:12:28.0362", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 550.9138ms", "ElapsedMilliseconds": 550.9138, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:12:28.0390", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:12:28.0390", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:12:28.0390", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 4.0553ms", "ElapsedMilliseconds": 4.0553, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:12:28.1044", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 65.5406ms", "ElapsedMilliseconds": 65.5406, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:12:28.1846", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:12:28.5154", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 330.8083ms", "ElapsedMilliseconds": 330.8083, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:12:33.9757", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:12:34.2130", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:12:34.2592", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:12:42.0344", "level": "INFO", "message": "Executed DbCommand (53ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "53", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:12:42.7686", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 8501.4258ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 8501.4258, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:12:42.7726", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:12:46.5295", "level": "ERROR", "message": "{\"Errors\":null,\"Message\":\"Resource not found\",\"Data\":{},\"InnerException\":null,\"HelpLink\":null,\"Source\":\"Core\",\"HResult\":-2146233088,\"StackTrace\":\"   at Core.Repositories.Repository`1.GetSingle(Expression`1 expression, Boolean throwException) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Core\\\\Repositories\\\\Repository.cs:line 61\\r\\n   at Business.Services.TicketService.Edit(TicketEditStatusDto request) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Application\\\\Services\\\\TicketService.cs:line 68\\r\\n   at Api.Controllers.TicketController.EditTicketStatus(TicketEditStatusDto request) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\TicketController.cs:line 52\\r\\n   at lambda_method3(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\"}" }
{ "time": "2024-04-15 15:12:47.9082", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 400 - application/json 13932.5566ms", "ElapsedMilliseconds": 13932.5566, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:12:51.5517", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:12:51.5651", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:12:51.5651", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:12:55.2082", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "3", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:13:27.2098", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:13:27.2100", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 35644.2814ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 35644.2814, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:13:27.2100", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:13:28.8313", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:13:28.8313", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:13:44.6356", "level": "ERROR", "message": "{\"Errors\":null,\"Message\":\"Resource not found\",\"Data\":{},\"InnerException\":null,\"HelpLink\":null,\"Source\":\"Core\",\"HResult\":-2146233088,\"StackTrace\":\"   at Core.Repositories.Repository`1.GetSingle(Expression`1 expression, Boolean throwException) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Core\\\\Repositories\\\\Repository.cs:line 61\\r\\n   at Business.Services.TicketService.Edit(TicketEditStatusDto request)\\r\\n   at Api.Controllers.TicketController.EditTicketStatus(TicketEditStatusDto request) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\TicketController.cs:line 52\\r\\n   at lambda_method3(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\"}" }
{ "time": "2024-04-15 15:13:45.9704", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 400 - application/json 54418.9944ms", "ElapsedMilliseconds": 54418.9944, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:13:45.9763", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:13:46.7877", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 17953.7439ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 17953.7439, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:13:46.7881", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:13:47.1832", "level": "ERROR", "message": "{\"ClassName\":\"System.NullReferenceException\",\"Message\":\"Object reference not set to an instance of an object.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Business.Services.TicketService.Edit(TicketEditStatusDto request)\\r\\n   at Api.Controllers.TicketController.EditTicketStatus(TicketEditStatusDto request) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\TicketController.cs:line 52\\r\\n   at lambda_method3(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"Application\",\"WatsonBuckets\":null}" }
{ "time": "2024-04-15 15:13:47.1832", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 400 - application/json 19979.8295ms", "ElapsedMilliseconds": 19979.8295, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:13:50.8600", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:13:50.8677", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:13:50.8677", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:13:53.5179", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:13:58.0416", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 7171.1269ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 7171.1269, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:13:58.0416", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:14:08.5368", "level": "ERROR", "message": "{\"ClassName\":\"System.NullReferenceException\",\"Message\":\"Object reference not set to an instance of an object.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Business.Services.TicketService.Edit(TicketEditStatusDto request)\\r\\n   at Api.Controllers.TicketController.EditTicketStatus(TicketEditStatusDto request) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\TicketController.cs:line 52\\r\\n   at lambda_method40(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"Application\",\"WatsonBuckets\":null}" }
{ "time": "2024-04-15 15:14:09.8379", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 400 - application/json 18977.9686ms", "ElapsedMilliseconds": 18977.9686, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:14:13.7860", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:14:18.9606", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:14:18.9606", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:14:32.8051", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:14:37.2542", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 18292.9339ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 18292.9339, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:14:37.2630", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:14:39.5928", "level": "ERROR", "message": "{\"ClassName\":\"System.NullReferenceException\",\"Message\":\"Object reference not set to an instance of an object.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Business.Services.TicketService.Edit(TicketEditStatusDto request)\\r\\n   at Api.Controllers.TicketController.EditTicketStatus(TicketEditStatusDto request) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\TicketController.cs:line 52\\r\\n   at lambda_method40(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"Application\",\"WatsonBuckets\":null}" }
{ "time": "2024-04-15 15:14:40.8781", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 400 - application/json 27092.2495ms", "ElapsedMilliseconds": 27092.2495, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:16:18.3552", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:16:18.3694", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:16:18.3694", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:17:15.7019", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-15 15:17:16.0866", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-15 15:17:16.0866", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-15 15:17:16.0866", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-15 15:17:16.1025", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-15 15:17:17.2836", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:17:17.5498", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-15 15:17:17.7363", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 457.3365ms", "ElapsedMilliseconds": 457.3365, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:17:17.7426", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:17:17.7613", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:17:17.7613", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 17.2147ms", "ElapsedMilliseconds": 17.2147, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:17:17.8994", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 156.9257ms", "ElapsedMilliseconds": 156.9257, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:17:17.9968", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:17:18.5086", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 511.7205ms", "ElapsedMilliseconds": 511.7205, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:17:20.6034", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:17:21.0520", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:17:21.1552", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:17:35.5462", "level": "INFO", "message": "Executed DbCommand (180ms) [Parameters=[@__request_Id_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0 AND t.\"UserId\" = @__id_1\r\nLIMIT 1", "elapsed": "180", "parameters": "@__request_Id_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0 AND t.\"UserId\" = @__id_1\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:18:56.9391", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-15 15:18:57.1464", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-15 15:18:57.1524", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-15 15:18:57.1524", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-15 15:18:57.1524", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-15 15:18:58.0261", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:18:58.2133", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-15 15:18:58.4162", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 399.5291ms", "ElapsedMilliseconds": 399.5291, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:18:58.4162", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:18:58.4289", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.0844ms", "ElapsedMilliseconds": 3.0844, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:18:58.4289", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:18:58.5108", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 76.6127ms", "ElapsedMilliseconds": 76.6127, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:18:58.5803", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:18:58.7825", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 202.2617ms", "ElapsedMilliseconds": 202.2617, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:19:04.6467", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:19:05.0981", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:19:05.1770", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:19:23.6107", "level": "INFO", "message": "Executed DbCommand (149ms) [Parameters=[@__request_Id_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0 AND t.\"UserId\" = @__id_1\r\nLIMIT 1", "elapsed": "149", "parameters": "@__request_Id_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0 AND t.\"UserId\" = @__id_1\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:20:03.4236", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 58230.9838ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 58230.9838, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:20:03.4355", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:20:06.0221", "level": "ERROR", "message": "{\"ClassName\":\"System.NullReferenceException\",\"Message\":\"Object reference not set to an instance of an object.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Business.Services.TicketService.Edit(TicketEditStatusDto request, Int32 id) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Application\\\\Services\\\\TicketService.cs:line 69\\r\\n   at Api.Controllers.TicketController.EditTicketStatus(TicketEditStatusDto request) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\TicketController.cs:line 53\\r\\n   at lambda_method3(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"Application\",\"WatsonBuckets\":null}" }
{ "time": "2024-04-15 15:20:09.0084", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 400 - application/json 64361.8626ms", "ElapsedMilliseconds": 64361.8626, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:20:15.8122", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:20:15.8288", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:20:15.8288", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:22:30.4819", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__request_Id_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0 AND t.\"UserId\" = @__id_1\r\nLIMIT 1", "elapsed": "3", "parameters": "@__request_Id_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0 AND t.\"UserId\" = @__id_1\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:22:41.4835", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 145652.9188ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 145652.9188, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:22:41.4955", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:23:25.6790", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-15 15:23:25.9281", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-15 15:23:25.9340", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-15 15:23:25.9340", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-15 15:23:25.9340", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-15 15:23:27.0962", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:23:27.8364", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-15 15:23:27.9824", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 901.8610ms", "ElapsedMilliseconds": 901.861, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:23:27.9824", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:23:27.9824", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:23:27.9914", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.1544ms", "ElapsedMilliseconds": 3.1544, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:23:28.0520", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 62.4638ms", "ElapsedMilliseconds": 62.4638, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:23:28.1330", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:23:28.3869", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 253.9873ms", "ElapsedMilliseconds": 253.9873, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:23:30.7499", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:23:31.1189", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:23:31.2096", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:23:40.1992", "level": "INFO", "message": "Executed DbCommand (166ms) [Parameters=[@__request_Id_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0 AND t.\"UserId\" = @__id_1\r\nLIMIT 1", "elapsed": "166", "parameters": "@__request_Id_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0 AND t.\"UserId\" = @__id_1\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:25:20.7767", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-15 15:25:21.0347", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-15 15:25:21.0422", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-15 15:25:21.0422", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-15 15:25:21.0422", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-15 15:25:21.8179", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:25:22.0975", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-15 15:25:22.2727", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 464.1267ms", "ElapsedMilliseconds": 464.1267, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:25:22.3505", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:25:22.3543", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.8241ms", "ElapsedMilliseconds": 3.8241, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:25:22.4355", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:25:22.5445", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 109.2431ms", "ElapsedMilliseconds": 109.2431, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:25:22.8365", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:25:23.0119", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 175.4392ms", "ElapsedMilliseconds": 175.4392, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:25:24.6045", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:25:24.8402", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:25:24.8694", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:25:33.3662", "level": "INFO", "message": "Executed DbCommand (164ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "164", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:25:37.0041", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 12117.5049ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 12117.5049, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:25:37.0173", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:25:40.8476", "level": "ERROR", "message": "{\"ClassName\":\"System.NullReferenceException\",\"Message\":\"Object reference not set to an instance of an object.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Business.Services.TicketService.Edit(TicketEditStatusDto request) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Application\\\\Services\\\\TicketService.cs:line 69\\r\\n   at Api.Controllers.TicketController.EditTicketStatus(TicketEditStatusDto request) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\TicketController.cs:line 53\\r\\n   at lambda_method3(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"Application\",\"WatsonBuckets\":null}" }
{ "time": "2024-04-15 15:25:42.2549", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 400 - application/json 17650.3500ms", "ElapsedMilliseconds": 17650.35, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:26:17.0043", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:26:20.1557", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:26:20.1557", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:26:28.2603", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:27:33.4057", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 73248.0918ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 73248.0918, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:27:33.4817", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:27:46.1617", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:27:46.1639", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:27:46.2115", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:27:46.2556", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 91.2369ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 91.2369, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:27:46.2556", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:27:47.4643", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 400 - application/problem+json;+charset=utf-8 90468.9044ms", "ElapsedMilliseconds": 90468.9044, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:28:23.3649", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:28:25.8804", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:28:25.8914", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:28:30.3347", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:28:34.1425", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 8250.7483ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 8250.7483, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:28:34.2146", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:28:39.7186", "level": "ERROR", "message": "{\"ClassName\":\"System.NullReferenceException\",\"Message\":\"Object reference not set to an instance of an object.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Business.Services.TicketService.Edit(TicketEditStatusDto request)\\r\\n   at Api.Controllers.TicketController.EditTicketStatus(TicketEditStatusDto request) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\TicketController.cs:line 53\\r\\n   at lambda_method24(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"Application\",\"WatsonBuckets\":null}" }
{ "time": "2024-04-15 15:28:43.7094", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 400 - application/json 20344.7191ms", "ElapsedMilliseconds": 20344.7191, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:29:07.6334", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:29:14.3063", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:29:14.3063", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:29:21.7420", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:29:47.5737", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 33266.2741ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 33266.2741, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:29:47.6401", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:30:22.1623", "level": "ERROR", "message": "{\"ClassName\":\"System.NullReferenceException\",\"Message\":\"Object reference not set to an instance of an object.\",\"Data\":{},\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Business.Services.TicketService.Edit(TicketEditStatusDto request)\\r\\n   at Api.Controllers.TicketController.EditTicketStatus(TicketEditStatusDto request) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\TicketController.cs:line 53\\r\\n   at lambda_method24(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"Application\",\"WatsonBuckets\":null}" }
{ "time": "2024-04-15 15:30:24.3808", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 400 - application/json 76747.1802ms", "ElapsedMilliseconds": 76747.1802, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:30:31.8619", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:30:34.2325", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:30:34.2325", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:30:39.2125", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:32:06.3967", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 92162.4889ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 92162.4889, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:32:06.4017", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:32:08.6760", "level": "ERROR", "message": "{\"ClassName\":\"System.NullReferenceException\",\"Message\":\"Object reference not set to an instance of an object.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Business.Services.TicketService.Edit(TicketEditStatusDto request)\\r\\n   at Api.Controllers.TicketController.EditTicketStatus(TicketEditStatusDto request) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\TicketController.cs:line 53\\r\\n   at lambda_method24(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"Application\",\"WatsonBuckets\":null}" }
{ "time": "2024-04-15 15:32:10.2956", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 400 - application/json 98433.9114ms", "ElapsedMilliseconds": 98433.9114, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:32:34.6700", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:32:39.4825", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-15 15:32:39.4984", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-15 15:32:39.9256", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Ticket/status - 401 0 - 5255.6048ms", "ElapsedMilliseconds": 5255.6048, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:32:48.4535", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:32:50.8707", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:32:50.8707", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:32:56.2671", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:33:29.2282", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-15 15:33:29.4754", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-15 15:33:29.4820", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-15 15:33:29.4820", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-15 15:33:29.4820", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-15 15:33:31.0283", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:33:31.3686", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-15 15:33:31.5324", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 518.4477ms", "ElapsedMilliseconds": 518.4477, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:33:31.5555", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:33:31.5555", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:33:31.5555", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 4.8966ms", "ElapsedMilliseconds": 4.8966, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:33:31.8537", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 297.5879ms", "ElapsedMilliseconds": 297.5879, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:33:31.9343", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:33:32.3866", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 452.2717ms", "ElapsedMilliseconds": 452.2717, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:33:35.4653", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:33:35.8323", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:33:35.9118", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:33:48.8766", "level": "INFO", "message": "Executed DbCommand (219ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "219", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:33:51.9205", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 15976.7741ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 15976.7741, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:33:51.9328", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:33:54.8214", "level": "ERROR", "message": "{\"Errors\":null,\"Message\":\"Resource not found\",\"Data\":{},\"InnerException\":null,\"HelpLink\":null,\"Source\":\"Core\",\"HResult\":-2146233088,\"StackTrace\":\"   at Core.Repositories.Repository`1.GetSingle(Expression`1 expression, Boolean throwException) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Core\\\\Repositories\\\\Repository.cs:line 61\\r\\n   at Business.Services.TicketService.Edit(TicketEditStatusDto request) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Application\\\\Services\\\\TicketService.cs:line 68\\r\\n   at Api.Controllers.TicketController.EditTicketStatus(TicketEditStatusDto request) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\TicketController.cs:line 53\\r\\n   at lambda_method3(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\"}" }
{ "time": "2024-04-15 15:33:56.6173", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 400 - application/json 21151.9997ms", "ElapsedMilliseconds": 21151.9997, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:34:35.4369", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:34:39.0204", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:34:39.0204", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:34:46.2298", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "4", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:34:55.7391", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 16716.5626ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 16716.5626, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:34:55.7460", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:34:58.0382", "level": "ERROR", "message": "{\"Errors\":null,\"Message\":\"Resource not found\",\"Data\":{},\"InnerException\":null,\"HelpLink\":null,\"Source\":\"Core\",\"HResult\":-2146233088,\"StackTrace\":\"   at Core.Repositories.Repository`1.GetSingle(Expression`1 expression, Boolean throwException) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Core\\\\Repositories\\\\Repository.cs:line 61\\r\\n   at Business.Services.TicketService.Edit(TicketEditStatusDto request) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Application\\\\Services\\\\TicketService.cs:line 68\\r\\n   at Api.Controllers.TicketController.EditTicketStatus(TicketEditStatusDto request) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\TicketController.cs:line 53\\r\\n   at lambda_method3(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\"}" }
{ "time": "2024-04-15 15:34:59.1287", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 400 - application/json 23709.0478ms", "ElapsedMilliseconds": 23709.0478, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:35:09.0470", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:35:09.0633", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:35:09.0633", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:35:14.0104", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "4", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:35:19.9211", "level": "INFO", "message": "Executed DbCommand (16ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "elapsed": "16", "parameters": "@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:35:21.7955", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:35:23.2758", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 14211.3995ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 14211.3995, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:35:23.2758", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:35:24.3192", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 200 - application/json;+charset=utf-8 15272.3090ms", "ElapsedMilliseconds": 15272.309, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:36:39.0864", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:36:39.0864", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:36:39.0864", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:36:42.8676", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:36:44.2854", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "elapsed": "3", "parameters": "@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:36:45.5060", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:36:46.1608", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 7064.3609ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 7064.3609, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:36:46.1608", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:36:46.8923", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 200 - application/json;+charset=utf-8 7814.3469ms", "ElapsedMilliseconds": 7814.3469, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:37:15.5828", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:37:18.3479", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:37:18.3534", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:37:19.9010", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]'.", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:37:19.9434", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 1589.6716ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 1589.6716, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:37:19.9434", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:37:20.6843", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 400 - application/json;+charset=utf-8 5101.4415ms", "ElapsedMilliseconds": 5101.4415, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:37:34.1560", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:37:36.5522", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:37:36.5620", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:37:37.9467", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]'.", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:37:37.9617", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 1399.5335ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 1399.5335, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:37:37.9617", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:37:38.7424", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 400 - application/json;+charset=utf-8 4586.4993ms", "ElapsedMilliseconds": 4586.4993, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:38:32.2994", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:40:13.8794", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:40:13.8794", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Auth/Login - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:40:13.8924", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:40:13.8997", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:40:14.0645", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 185.1104ms", "ElapsedMilliseconds": 185.1104, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:40:14.6223", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:40:14.8432", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:40:14.8432", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:40:14.8533", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:40:14.9476", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 102648.2981ms", "ElapsedMilliseconds": 102648.2981, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:40:15.1260", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Auth/Login - 204 - - 1246.3830ms", "ElapsedMilliseconds": 1246.383, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:40:15.1319", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:40:15.4745", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.105:5274/api/Auth/Login - application/json 65", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 65, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:40:17.1049", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:40:17.3194", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:40:17.3194", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:40:18.4793", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "4", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:18.5390", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:18.9862", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.105:5274/api/Auth/Login - application/json 65", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 65, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:40:18.9862", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:40:18.9862", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:40:18.9862", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:40:23.9128", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "3", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:29.1981", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "4", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:29.1981", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:29.2584", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:29.2584", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:29.2584", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "3", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:29.2584", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:29.8558", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:29.8681", "level": "INFO", "message": "Executed DbCommand (6ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "6", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:29.8681", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:29.9289", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "2", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:29.9289", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:40:29.9289", "level": "INFO", "message": "Executed DbCommand (14ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "14", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:29.9289", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:40:29.9465", "level": "INFO", "message": "Executed DbCommand (13ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "13", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:29.9465", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:40:29.9465", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 14815.3738ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 14815.3738, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:40:29.9465", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:40:29.9465", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 15104.8312ms", "ElapsedMilliseconds": 15104.8312, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:40:29.9465", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 10960.7931ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 10960.7931, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:40:29.9465", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:40:29.9465", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 12628.1445ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 12628.1445, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:40:29.9465", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:40:29.9465", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.105:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 10962.0763ms", "ElapsedMilliseconds": 10962.0763, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:40:29.9465", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.105:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 14474.2430ms", "ElapsedMilliseconds": 14474.243, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:40:30.2061", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 15:40:30.2061", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:40:30.2061", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 204 - - 0.8969ms", "ElapsedMilliseconds": 0.8969, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 15:40:30.3009", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 15:40:30.3067", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:40:30.3067", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:40:30.3218", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:40:30.4452", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "4", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:30.4452", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 15:40:30.4649", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 15:40:30.4789", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:30.5003", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:30.5003", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:30.5228", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:30.5417", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:30.7887", "level": "WARN", "message": "The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.", "EventId": 10103, "EventName": "Microsoft.EntityFrameworkCore.Query.FirstWithoutOrderByAndFilterWarning" }
{ "time": "2024-04-15 15:40:30.8035", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:30.8854", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "3", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:31.0035", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:31.0134", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "3", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:40:31.0134", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:40:31.0430", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 720.914ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 720.914, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:40:31.0430", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:40:31.0430", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 742.7968ms", "ElapsedMilliseconds": 742.7968, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 15:41:59.2138", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 15:41:59.2138", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:41:59.2138", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 204 - - 2.2057ms", "ElapsedMilliseconds": 2.2057, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 15:41:59.3217", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 15:42:03.2092", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:42:03.2119", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:42:03.2119", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:42:03.2285", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:03.2285", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:03.2285", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:03.2285", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:03.2443", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:03.2443", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:03.2443", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:03.2576", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:03.2576", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:03.2576", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:03.2576", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:42:03.2576", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 48.6154ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 48.6154, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:42:03.2576", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:42:03.2576", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 3944.9025ms", "ElapsedMilliseconds": 3944.9025, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 15:42:37.4099", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 15:42:37.4099", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:42:37.4131", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 204 - - 4.8645ms", "ElapsedMilliseconds": 4.8645, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 15:42:37.4131", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 15:42:37.4131", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:42:37.4131", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:42:37.4131", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:42:37.4341", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:37.4341", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:37.4447", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:37.4447", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:37.4447", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:37.4599", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:37.4599", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:37.4599", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "3", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:37.4768", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:37.4768", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:37.4768", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:42:37.4768", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 57.4871ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 57.4871, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:42:37.4768", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:42:37.4768", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 59.8133ms", "ElapsedMilliseconds": 59.8133, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 15:42:46.6130", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:42:46.6130", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:42:46.6130", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Product/GetAllProducts - 204 - - 1.6261ms", "ElapsedMilliseconds": 1.6261, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:42:46.6296", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:42:46.6329", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:42:46.6329", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:42:46.6329", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:42:46.6329", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-15 15:42:46.6873", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:46.6873", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:42:46.6873", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 54.7215ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 54.7215, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:42:46.6873", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:42:46.6873", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 62.9183ms", "ElapsedMilliseconds": 62.9183, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:42:48.2447", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:42:48.2447", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:42:48.2447", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 1.0563ms", "ElapsedMilliseconds": 1.0563, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:42:48.2447", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:42:48.2619", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:42:48.2619", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:42:48.2619", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:42:48.4197", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:42:48.4197", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:42:48.4362", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 169.16ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 169.16, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:42:48.4362", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:42:48.4362", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 180.0711ms", "ElapsedMilliseconds": 180.0711, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:43:04.4694", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/edit - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:43:04.4694", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:43:04.4694", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/edit - 204 - - 1.5932ms", "ElapsedMilliseconds": 1.5932, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:43:04.4908", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://192.168.0.105:5274/api/Ticket/edit - application/json 25", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 25, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:43:04.4911", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:43:04.4911", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:43:04.4911", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:43:08.8206", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:43:09.5343", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "elapsed": "2", "parameters": "@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:43:10.9232", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:43:11.5936", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 7098.3287ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 7098.3287, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:43:11.5936", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:43:12.4945", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://192.168.0.105:5274/api/Ticket/edit - 200 - application/json;+charset=utf-8 8003.8716ms", "ElapsedMilliseconds": 8003.8716, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:44:13.6044", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:44:13.6044", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:44:13.6044", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 5.0420ms", "ElapsedMilliseconds": 5.042, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:44:13.6375", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:44:13.6375", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:44:13.6375", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:44:13.6375", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:44:13.6547", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "3", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:44:13.6547", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:44:13.6547", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 15.6868ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 15.6868, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:44:13.6547", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:44:13.6547", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 18.5077ms", "ElapsedMilliseconds": 18.5077, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:44:57.8073", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/edit - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:44:57.8073", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:44:57.8073", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/edit - 204 - - 8.0317ms", "ElapsedMilliseconds": 8.0317, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:44:57.8361", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://192.168.0.105:5274/api/Ticket/edit - application/json 25", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 25, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:44:57.8361", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:44:57.8361", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:44:57.8361", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:45:02.7004", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:45:02.7103", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "elapsed": "3", "parameters": "@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:45:02.7103", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:45:02.7103", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 4873.2609ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 4873.2609, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:45:02.7103", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:45:02.7103", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://192.168.0.105:5274/api/Ticket/edit - 200 - application/json;+charset=utf-8 4877.9277ms", "ElapsedMilliseconds": 4877.9277, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:45:12.2723", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - application/json 37", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:45:12.2723", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:45:12.2723", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:45:15.1123", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:45:15.7616", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "elapsed": "3", "parameters": "@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:45:15.9484", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:45:15.9484", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:45:15.9484", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 0.4594ms", "ElapsedMilliseconds": 0.4594, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:45:15.9732", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:45:15.9732", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:45:15.9732", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:45:15.9732", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:45:16.1119", "level": "INFO", "message": "Executed DbCommand (129ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "129", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:45:16.1119", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:45:16.1119", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 140.4182ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 140.4182, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:45:16.1119", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:45:16.1119", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 142.3316ms", "ElapsedMilliseconds": 142.3316, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:45:16.9510", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:45:17.5753", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 5298.6021ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 5298.6021, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:45:17.5753", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:45:18.3348", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Ticket/edit - 200 - application/json;+charset=utf-8 6062.6670ms", "ElapsedMilliseconds": 6062.667, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:54:51.1029", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:54:51.1029", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:54:51.1029", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 2.1622ms", "ElapsedMilliseconds": 2.1622, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:54:51.1218", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:54:51.1547", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:54:51.1985", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:54:51.1985", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:54:51.2451", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "3", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:54:51.2451", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:54:51.2451", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 47.3665ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 47.3665, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:54:51.2451", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:54:51.2451", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 127.2141ms", "ElapsedMilliseconds": 127.2141, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:54:59.4316", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/edit - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:54:59.4316", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:54:59.4316", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/edit - 204 - - 1.7955ms", "ElapsedMilliseconds": 1.7955, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:54:59.4570", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://192.168.0.105:5274/api/Ticket/edit - application/json 25", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 25, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:54:59.4570", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:54:59.4570", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:54:59.4570", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:55:58.8913", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-15 15:55:58.9819", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-15 15:55:58.9819", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-15 15:55:58.9819", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-15 15:55:58.9819", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-15 15:55:59.9085", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:56:00.0584", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-15 15:56:00.1534", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 245.7704ms", "ElapsedMilliseconds": 245.7704, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:56:00.1641", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:56:00.1641", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:56:00.1641", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 1.5972ms", "ElapsedMilliseconds": 1.5972, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:56:00.2015", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 37.3981ms", "ElapsedMilliseconds": 37.3981, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:56:00.2854", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:56:00.4549", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 168.9768ms", "ElapsedMilliseconds": 168.9768, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:56:03.0187", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:56:03.0284", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:56:03.0284", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 11.7945ms", "ElapsedMilliseconds": 11.7945, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:56:03.1883", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:56:03.2078", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:56:03.3808", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:56:03.4162", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:56:04.7928", "level": "INFO", "message": "Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "16", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:56:04.8366", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:56:04.8567", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 1434.2924ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 1434.2924, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:56:04.8567", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:56:04.8740", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 1685.6058ms", "ElapsedMilliseconds": 1685.6058, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:56:26.2058", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/edit - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:56:26.2058", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:56:26.2058", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/edit - 204 - - 3.2511ms", "ElapsedMilliseconds": 3.2511, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:56:26.2215", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://192.168.0.105:5274/api/Ticket/edit - application/json 26", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 26, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:56:26.2215", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:56:26.2290", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:56:26.2441", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:56:26.5732", "level": "INFO", "message": "Executed DbCommand (18ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "18", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:56:26.9507", "level": "INFO", "message": "Executed DbCommand (7ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "elapsed": "7", "parameters": "@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:56:26.9662", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:56:26.9662", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 725.9656ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 725.9656, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:56:26.9662", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:56:26.9662", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://192.168.0.105:5274/api/Ticket/edit - 200 - application/json;+charset=utf-8 749.6825ms", "ElapsedMilliseconds": 749.6825, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:57:15.3300", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:57:15.3300", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:57:15.3300", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 2.4162ms", "ElapsedMilliseconds": 2.4162, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 15:57:15.3975", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 15:57:15.3975", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 15:57:15.3975", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 15:57:15.3975", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 15:57:15.4578", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 15:57:15.4578", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 15:57:15.4597", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 52.9581ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 52.9581, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 15:57:15.4597", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 15:57:15.4597", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 62.7280ms", "ElapsedMilliseconds": 62.728, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:00:41.2228", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:00:41.2228", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:00:41.2228", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 1.3879ms", "ElapsedMilliseconds": 1.3879, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:00:41.2483", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:00:41.2483", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:00:41.2483", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:00:41.2483", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:00:41.2483", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:00:41.2483", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:00:41.2483", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 5.3043ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.3043, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:00:41.2483", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:00:41.2483", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 7.8064ms", "ElapsedMilliseconds": 7.8064, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:00:55.8563", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:00:55.8563", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:00:55.8563", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 1.9803ms", "ElapsedMilliseconds": 1.9803, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:00:55.9070", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:00:55.9070", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:00:55.9070", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:00:55.9070", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:00:55.9148", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:00:55.9148", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:00:55.9148", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 6.2231ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 6.2231, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:00:55.9148", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:00:55.9148", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 9.6562ms", "ElapsedMilliseconds": 9.6562, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:01:36.8923", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/edit - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:01:36.8923", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:01:36.8923", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/edit - 204 - - 1.3474ms", "ElapsedMilliseconds": 1.3474, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:01:36.9120", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://192.168.0.105:5274/api/Ticket/edit - application/json 25", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 25, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:01:36.9120", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:01:36.9135", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:01:36.9135", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:01:36.9621", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:01:36.9621", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "elapsed": "3", "parameters": "@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:01:36.9621", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:01:36.9621", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 56.1087ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 56.1087, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:01:36.9621", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:01:36.9621", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://192.168.0.105:5274/api/Ticket/edit - 200 - application/json;+charset=utf-8 58.5058ms", "ElapsedMilliseconds": 58.5058, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:02:00.4301", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:02:00.4301", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:02:00.4301", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 1.6130ms", "ElapsedMilliseconds": 1.613, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:02:00.4777", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:02:00.4777", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:02:00.4777", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:02:00.4777", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:02:00.4777", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:02:00.4777", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:02:00.4777", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 6.1497ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 6.1497, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:02:00.4777", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:02:00.4777", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 8.5223ms", "ElapsedMilliseconds": 8.5223, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:07:29.4319", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:07:29.4319", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:07:29.4319", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:07:29.4319", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:07:29.4319", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 1.5175ms", "ElapsedMilliseconds": 1.5175, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:07:29.4319", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 1.3419ms", "ElapsedMilliseconds": 1.3419, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:07:29.4450", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:07:29.4450", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:07:29.4450", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:07:29.4450", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:07:29.4605", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:07:29.4605", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:07:29.4605", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:07:29.4605", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:07:29.4605", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:07:29.4605", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 2.9342ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 2.9342, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:07:29.4605", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:07:29.4605", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 7.9472ms", "ElapsedMilliseconds": 7.9472, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:07:29.4923", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "3", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:07:29.4923", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:07:29.4923", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 46.5923ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 46.5923, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:07:29.4923", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:07:29.4923", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 48.6702ms", "ElapsedMilliseconds": 48.6702, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:21:43.3089", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:21:43.3089", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:21:43.3089", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:21:43.3089", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:21:43.3089", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 1.6662ms", "ElapsedMilliseconds": 1.6662, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:21:43.3089", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 1.9186ms", "ElapsedMilliseconds": 1.9186, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:21:43.3267", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:21:43.3267", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:21:43.3267", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:21:43.3267", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:21:43.3267", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:21:43.3267", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:21:43.3267", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:21:43.3267", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:21:43.3267", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:21:43.3267", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 2.1548ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 2.1548, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:21:43.3267", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:21:43.3267", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 4.6075ms", "ElapsedMilliseconds": 4.6075, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:21:43.3734", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "3", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:21:43.3734", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:21:43.3734", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 45.5017ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 45.5017, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:21:43.3734", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:21:43.3734", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 48.0613ms", "ElapsedMilliseconds": 48.0613, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:22:07.4554", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:22:07.4554", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:22:07.4554", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 1.5898ms", "ElapsedMilliseconds": 1.5898, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:22:07.4554", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:22:07.4554", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:22:07.4554", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 0.3957ms", "ElapsedMilliseconds": 0.3957, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:22:07.4743", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:22:07.4743", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:22:07.4743", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:22:07.4743", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:22:07.4786", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:22:07.4786", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:22:07.4786", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:22:07.4786", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:22:07.4786", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 3.8431ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 3.8431, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:22:07.4786", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:22:07.4786", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:22:07.4786", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 6.2648ms", "ElapsedMilliseconds": 6.2648, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:22:07.4786", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:22:07.4786", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:22:07.4786", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 1.1665ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 1.1665, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:22:07.4786", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:22:07.4786", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 3.0971ms", "ElapsedMilliseconds": 3.0971, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:24:34.3386", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:24:34.3386", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:24:34.3386", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:24:34.3386", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:24:34.3386", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 0.5564ms", "ElapsedMilliseconds": 0.5564, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:24:34.3386", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 3.8989ms", "ElapsedMilliseconds": 3.8989, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:24:34.3539", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:24:34.3539", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:24:34.3539", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:24:34.3539", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:24:34.3539", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:24:34.3539", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:24:34.3539", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:24:34.3539", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:24:34.3539", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:24:34.3539", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 1.2138ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 1.2138, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:24:34.3539", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:24:34.3539", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 2.5783ms", "ElapsedMilliseconds": 2.5783, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:24:34.3539", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:24:34.3539", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:24:34.3539", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 4.8646ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 4.8646, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:24:34.3539", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:24:34.3539", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 7.0943ms", "ElapsedMilliseconds": 7.0943, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:24:41.9255", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:24:41.9295", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:24:41.9295", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 4.4449ms", "ElapsedMilliseconds": 4.4449, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:24:41.9295", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:24:41.9295", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:24:41.9295", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 0.2900ms", "ElapsedMilliseconds": 0.29, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:24:42.0614", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:24:42.0614", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:24:42.0614", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:24:42.0614", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:24:42.0716", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:24:42.0716", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:24:42.0716", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 9.7792ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 9.7792, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:24:42.0716", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:24:42.0716", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 11.3226ms", "ElapsedMilliseconds": 11.3226, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:24:42.1314", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:24:42.1314", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:24:42.1314", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:24:42.1314", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:24:42.1314", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:24:42.1314", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 1.0605ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 1.0605, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:24:42.1314", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:24:42.1314", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 2.5174ms", "ElapsedMilliseconds": 2.5174, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:25:15.1469", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:25:15.1503", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:25:15.1503", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:25:15.1503", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 0.3067ms", "ElapsedMilliseconds": 0.3067, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:25:15.1503", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:25:15.1503", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 4.0306ms", "ElapsedMilliseconds": 4.0306, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:25:15.1652", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:25:15.1652", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:25:15.1652", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:25:15.1652", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:25:15.1652", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:25:15.1652", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 0.9138ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 0.9138, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:25:15.1652", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:25:15.1652", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 2.2704ms", "ElapsedMilliseconds": 2.2704, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:25:15.1652", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:25:15.1652", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:25:15.1652", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:25:15.1652", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:25:15.1652", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:25:15.1652", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:25:15.1652", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 2.4274ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 2.4274, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:25:15.1652", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:25:15.1652", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 3.2106ms", "ElapsedMilliseconds": 3.2106, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:25:59.1081", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:25:59.1081", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:25:59.1081", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:25:59.1081", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:25:59.1081", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 1.3984ms", "ElapsedMilliseconds": 1.3984, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:25:59.1081", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 1.9918ms", "ElapsedMilliseconds": 1.9918, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:25:59.1296", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:25:59.1296", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:25:59.1313", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:25:59.1313", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:25:59.1313", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:25:59.1313", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 1.8665ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 1.8665, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:25:59.1313", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:25:59.1313", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 4.2504ms", "ElapsedMilliseconds": 4.2504, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:25:59.1313", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:25:59.1313", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:25:59.1313", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:25:59.1313", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:25:59.1313", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:25:59.1313", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:25:59.1313", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 4.794ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 4.794, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:25:59.1313", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:25:59.1313", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 6.6371ms", "ElapsedMilliseconds": 6.6371, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:26:05.9850", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:26:05.9850", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:26:05.9850", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 1.0637ms", "ElapsedMilliseconds": 1.0637, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:26:05.9850", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:26:05.9850", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:26:05.9850", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 0.3588ms", "ElapsedMilliseconds": 0.3588, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:26:06.0086", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:26:06.0086", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:26:06.0086", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:26:06.0086", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:26:06.0086", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:26:06.0086", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:26:06.0086", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:26:06.0086", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:26:06.0086", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:26:06.0086", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 1.4289ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 1.4289, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:26:06.0086", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:26:06.0086", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 3.2753ms", "ElapsedMilliseconds": 3.2753, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:26:06.0086", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:26:06.0086", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:26:06.0086", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 3.9649ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 3.9649, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:26:06.0086", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:26:06.0086", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 5.9084ms", "ElapsedMilliseconds": 5.9084, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:27:17.8918", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:27:17.8918", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:27:17.8918", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 2.6376ms", "ElapsedMilliseconds": 2.6376, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:27:17.8918", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:27:17.8918", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:27:17.8918", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 0.3599ms", "ElapsedMilliseconds": 0.3599, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:27:17.9474", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:27:17.9474", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:27:17.9474", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:27:17.9474", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:27:17.9474", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:27:17.9474", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:27:17.9474", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:27:17.9474", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:27:17.9474", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:27:17.9474", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 2.6901ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 2.6901, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:27:17.9474", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:27:17.9474", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 4.7625ms", "ElapsedMilliseconds": 4.7625, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:27:18.0020", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "3", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:27:18.0020", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:27:18.0020", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 52.4553ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 52.4553, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:27:18.0020", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:27:18.0020", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 55.8425ms", "ElapsedMilliseconds": 55.8425, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:28:11.1857", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:28:11.1857", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:28:11.1857", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 2.3859ms", "ElapsedMilliseconds": 2.3859, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:28:11.1857", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:28:11.1857", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:28:11.1857", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 0.3487ms", "ElapsedMilliseconds": 0.3487, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:28:11.2064", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:28:11.2064", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:28:11.2064", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:28:11.2064", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:28:11.2112", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:28:11.2112", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:28:11.2112", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 3.6507ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 3.6507, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:28:11.2112", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:28:11.2112", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 5.7862ms", "ElapsedMilliseconds": 5.7862, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:28:11.2112", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:28:11.2112", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:28:11.2112", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:28:11.2112", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:28:11.2112", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:28:11.2112", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 1.0826ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 1.0826, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:28:11.2112", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:28:11.2112", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 2.5872ms", "ElapsedMilliseconds": 2.5872, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:29:28.9316", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:29:28.9316", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:29:28.9316", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:29:28.9316", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 1.7096ms", "ElapsedMilliseconds": 1.7096, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:29:28.9316", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:29:28.9316", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 2.0166ms", "ElapsedMilliseconds": 2.0166, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:29:28.9505", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:29:28.9505", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:29:28.9505", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:29:28.9505", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:29:28.9505", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:29:28.9505", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:29:28.9505", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:29:28.9505", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:29:28.9505", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:29:28.9505", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 1.4241ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 1.4241, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:29:28.9505", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:29:28.9505", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 4.0187ms", "ElapsedMilliseconds": 4.0187, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:29:28.9505", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:29:28.9505", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:29:28.9505", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 3.9342ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 3.9342, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:29:28.9505", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:29:28.9505", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 5.7661ms", "ElapsedMilliseconds": 5.7661, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:29:44.8987", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:29:44.8987", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:29:44.8987", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:29:44.8987", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:29:44.8987", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 1.1932ms", "ElapsedMilliseconds": 1.1932, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:29:44.8987", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 1.2117ms", "ElapsedMilliseconds": 1.2117, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:29:44.9265", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:29:44.9265", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:29:44.9265", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:29:44.9265", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:29:44.9286", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:29:44.9286", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:29:44.9286", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:29:44.9286", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:29:44.9286", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:29:44.9286", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:29:44.9286", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 3.528ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 3.528, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:29:44.9286", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:29:44.9286", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:29:44.9286", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 5.0530ms", "ElapsedMilliseconds": 5.053, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:29:44.9286", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 1.4809ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 1.4809, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:29:44.9286", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:29:44.9286", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 3.2846ms", "ElapsedMilliseconds": 3.2846, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:30:55.9365", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/edit - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:30:55.9365", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:30:55.9365", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/edit - 204 - - 1.8349ms", "ElapsedMilliseconds": 1.8349, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:30:55.9501", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://192.168.0.105:5274/api/Ticket/edit - application/json 26", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 26, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:30:55.9501", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:30:55.9501", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:30:55.9501", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:30:55.9501", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:30:55.9618", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "elapsed": "4", "parameters": "@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:30:55.9618", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:30:55.9618", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 11.3309ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 11.3309, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:30:55.9618", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:30:55.9618", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://192.168.0.105:5274/api/Ticket/edit - 200 - application/json;+charset=utf-8 13.6417ms", "ElapsedMilliseconds": 13.6417, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:31:27.1261", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:31:27.1261", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:31:27.1261", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 0.8915ms", "ElapsedMilliseconds": 0.8915, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:31:27.1261", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:31:27.1261", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:31:27.1261", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 1.0041ms", "ElapsedMilliseconds": 1.0041, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:31:27.1880", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:31:27.1880", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:31:27.1880", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:31:27.1880", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:31:27.1880", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:31:27.1880", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:31:27.1880", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:31:27.1880", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:31:27.1880", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:31:27.1940", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 0.8786ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 0.8786, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:31:27.1940", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:31:27.1940", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 2.3330ms", "ElapsedMilliseconds": 2.333, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:31:27.1940", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:31:27.1940", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:31:27.1940", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 4.5949ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 4.5949, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:31:27.1940", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:31:27.1940", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 7.2022ms", "ElapsedMilliseconds": 7.2022, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:32:04.9203", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/edit - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:32:04.9203", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:32:04.9203", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/edit - 204 - - 1.6737ms", "ElapsedMilliseconds": 1.6737, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:32:04.9621", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://192.168.0.105:5274/api/Ticket/edit - application/json 25", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 25, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:32:04.9621", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:32:04.9621", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:32:04.9621", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:32:04.9621", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:32:04.9888", "level": "INFO", "message": "Executed DbCommand (20ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "elapsed": "20", "parameters": "@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:32:04.9888", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:32:04.9888", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 25.6437ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 25.6437, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:32:04.9888", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:32:04.9888", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://192.168.0.105:5274/api/Ticket/edit - 200 - application/json;+charset=utf-8 27.7650ms", "ElapsedMilliseconds": 27.765, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:32:13.7829", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:32:13.7829", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:32:13.7829", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:32:13.7829", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:32:13.7829", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 0.6612ms", "ElapsedMilliseconds": 0.6612, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:32:13.7829", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 0.6159ms", "ElapsedMilliseconds": 0.6159, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:32:13.8207", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:32:13.8207", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:32:13.8207", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:32:13.8207", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:32:13.8207", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:32:13.8207", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:32:13.8207", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 2.0626ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 2.0626, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:32:13.8207", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:32:13.8207", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 3.0041ms", "ElapsedMilliseconds": 3.0041, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:32:13.8392", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:32:13.8392", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:32:13.8392", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:32:13.8392", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:32:13.8392", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:32:13.8392", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 0.5973ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 0.5973, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:32:13.8392", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:32:13.8392", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 1.3611ms", "ElapsedMilliseconds": 1.3611, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:33:52.9468", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/edit - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:33:52.9468", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:33:52.9468", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/edit - 204 - - 0.7245ms", "ElapsedMilliseconds": 0.7245, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:33:52.9902", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://192.168.0.105:5274/api/Ticket/edit - application/json 25", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 25, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:33:52.9902", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:33:52.9911", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:33:52.9911", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:33:53.0336", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:33:53.0390", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "elapsed": "3", "parameters": "@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:33:53.0390", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:33:53.0390", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 48.2215ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 48.2215, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:33:53.0390", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:33:53.0390", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://192.168.0.105:5274/api/Ticket/edit - 200 - application/json;+charset=utf-8 49.5910ms", "ElapsedMilliseconds": 49.591, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:34:05.4867", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:34:05.4867", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:34:05.4867", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 1.1098ms", "ElapsedMilliseconds": 1.1098, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:34:05.4941", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:34:05.4941", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:34:05.4941", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 0.3609ms", "ElapsedMilliseconds": 0.3609, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:34:05.5195", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:34:05.5195", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:34:05.5195", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:34:05.5195", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:34:05.5247", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:34:05.5247", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:34:05.5247", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:34:05.5247", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 4.7211ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 4.7211, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:34:05.5247", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:34:05.5247", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:34:05.5247", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 6.3500ms", "ElapsedMilliseconds": 6.35, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:34:05.5247", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:34:05.5247", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:34:05.5247", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:34:05.5247", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 1.6335ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 1.6335, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:34:05.5247", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:34:05.5247", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 3.1667ms", "ElapsedMilliseconds": 3.1667, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:36:36.1776", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:36:36.1776", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:36:36.1791", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 1.4999ms", "ElapsedMilliseconds": 1.4999, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:36:36.1972", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:36:36.1972", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:36:36.1972", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 0.3555ms", "ElapsedMilliseconds": 0.3555, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:36:36.2510", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:36:36.2510", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:36:36.2510", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:36:36.2510", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:36:36.2570", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:36:36.2570", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:36:36.2570", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 5.6505ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.6505, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:36:36.2570", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:36:36.2570", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 7.2158ms", "ElapsedMilliseconds": 7.2158, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:36:36.2570", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:36:36.2570", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:36:36.2570", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:36:36.2570", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:36:36.2570", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:36:36.2570", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 1.1849ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 1.1849, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:36:36.2570", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:36:36.2570", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 3.3159ms", "ElapsedMilliseconds": 3.3159, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:46:13.8472", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:46:13.8472", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:46:13.8472", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 0.8088ms", "ElapsedMilliseconds": 0.8088, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:46:13.8472", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:46:13.8472", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:46:13.8472", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 0.2430ms", "ElapsedMilliseconds": 0.243, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:46:13.9429", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:46:13.9429", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:46:13.9429", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:46:13.9429", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:46:13.9449", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:46:13.9449", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 1.0523ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 1.0523, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:46:13.9449", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:46:13.9449", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 2.3129ms", "ElapsedMilliseconds": 2.3129, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:46:13.9950", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:46:13.9950", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:46:13.9950", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:46:13.9950", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:46:14.0412", "level": "INFO", "message": "Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "5", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:46:14.0412", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:46:14.0412", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 45.5883ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 45.5883, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:46:14.0412", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:46:14.0412", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 47.0597ms", "ElapsedMilliseconds": 47.0597, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:47:01.6930", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:47:01.6930", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:47:01.6930", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/getAllTickets - 204 - - 0.8177ms", "ElapsedMilliseconds": 0.8177, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:47:01.6930", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:47:01.6930", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:47:01.6930", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 1.3721ms", "ElapsedMilliseconds": 1.3721, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:47:01.7125", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:47:01.7125", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:47:01.7125", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:47:01.7125", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:47:01.7125", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:47:01.7125", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:47:01.7125", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 3.4162ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 3.4162, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:47:01.7125", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:47:01.7125", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 4.5492ms", "ElapsedMilliseconds": 4.5492, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:47:01.7125", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:47:01.7125", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:47:01.7125", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:47:01.7125", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:47:01.7125", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:47:01.7125", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 1.5586ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 1.5586, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:47:01.7125", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:47:01.7125", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 3.2612ms", "ElapsedMilliseconds": 3.2612, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:49:50.9061", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:49:50.9061", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-15 16:49:50.9241", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-15 16:49:50.9241", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - 401 0 - 18.3100ms", "ElapsedMilliseconds": 18.31, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:50:00.8051", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - application/json 37", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:50:00.8051", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-15 16:50:00.8051", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-15 16:50:00.8051", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - 403 0 - 6.3297ms", "ElapsedMilliseconds": 6.3297, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:50:52.4760", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:50:52.4760", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:50:52.4760", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:50:52.4990", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:50:52.5617", "level": "INFO", "message": "Executed DbCommand (5ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "5", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:50:52.6470", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "3", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:50:52.7179", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:50:52.7921", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:50:52.8378", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "4", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:50:52.8378", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:50:52.8378", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 350.245ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 350.245, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:50:52.8378", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:50:52.8378", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 373.8142ms", "ElapsedMilliseconds": 373.8142, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:51:02.2769", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - application/json 37", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:51:02.2769", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-15 16:51:02.2769", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-15 16:51:02.2769", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - 403 0 - 2.4732ms", "ElapsedMilliseconds": 2.4732, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:51:57.8868", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - application/json 37", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:51:57.8868", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-15 16:51:57.8868", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-15 16:51:57.8868", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - 403 0 - 4.9617ms", "ElapsedMilliseconds": 4.9617, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:52:15.2723", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - application/json 37", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:52:15.2733", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-15 16:52:15.2733", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-15 16:52:15.2733", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - 403 0 - 1.2134ms", "ElapsedMilliseconds": 1.2134, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:52:33.0826", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-15 16:52:33.3607", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-15 16:52:33.3607", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-15 16:52:33.3675", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-15 16:52:33.3675", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-15 16:52:34.3714", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:52:34.6079", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-15 16:52:34.8732", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:52:34.8732", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 503.5798ms", "ElapsedMilliseconds": 503.5798, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:52:34.8732", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:52:34.8859", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 5.2399ms", "ElapsedMilliseconds": 5.2399, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:52:34.9398", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 66.2415ms", "ElapsedMilliseconds": 66.2415, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:52:35.0273", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:52:35.2242", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 197.0442ms", "ElapsedMilliseconds": 197.0442, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:52:39.1600", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - application/json 37", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:52:39.6292", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-15 16:52:39.6360", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-15 16:52:39.6360", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - 403 0 - 477.1304ms", "ElapsedMilliseconds": 477.1304, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:52:41.6351", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - application/json 37", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:52:41.6563", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-15 16:52:41.6563", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-15 16:52:41.6563", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - 403 0 - 23.0589ms", "ElapsedMilliseconds": 23.0589, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:53:09.5938", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - application/json 37", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:53:09.6259", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-15 16:53:09.6259", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-15 16:53:09.6259", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - 403 0 - 33.1223ms", "ElapsedMilliseconds": 33.1223, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:53:11.5159", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - application/json 37", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:53:11.5159", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-15 16:53:11.5159", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-15 16:53:11.5159", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - 403 0 - 3.3701ms", "ElapsedMilliseconds": 3.3701, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:53:25.0567", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-15 16:53:25.2947", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-15 16:53:25.2947", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-15 16:53:25.2947", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-15 16:53:25.3047", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-15 16:53:26.2707", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:53:26.5311", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-15 16:53:26.6576", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:53:26.6576", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 405.0436ms", "ElapsedMilliseconds": 405.0436, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:53:26.6576", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:53:26.6702", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 12.5671ms", "ElapsedMilliseconds": 12.5671, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:53:26.7276", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 67.3968ms", "ElapsedMilliseconds": 67.3968, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:53:26.7916", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:53:26.9894", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 197.8188ms", "ElapsedMilliseconds": 197.8188, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:53:32.3211", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - application/json 37", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:53:32.6436", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:53:32.7282", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:53:36.7414", "level": "INFO", "message": "Executed DbCommand (90ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "90", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:53:36.9324", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:53:36.9740", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 4223.5741ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 4223.5741, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:53:36.9740", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:53:37.0224", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 4701.3582ms", "ElapsedMilliseconds": 4701.3582, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:55:32.4425", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:55:32.4522", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:55:32.4522", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 23.1903ms", "ElapsedMilliseconds": 23.1903, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:55:32.4647", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:55:32.4647", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:55:32.4789", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenNotYetValidException: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:55:32'.\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-15 16:55:32.5627", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:55:32'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:55:32'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-15 16:55:32.5627", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-15 16:55:32.5828", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-15 16:55:32.5828", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 401 0 - 120.4675ms", "ElapsedMilliseconds": 120.4675, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:55:48.4444", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:55:48.4444", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:55:48.4444", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 2.1560ms", "ElapsedMilliseconds": 2.156, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:55:48.4444", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:55:48.4444", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:55:48.4444", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenNotYetValidException: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:55:48'.\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-15 16:55:48.4609", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:55:48'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:55:48'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-15 16:55:48.4609", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-15 16:55:48.4609", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-15 16:55:48.4609", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 401 0 - 11.0645ms", "ElapsedMilliseconds": 11.0645, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:55:52.3327", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:55:52.3327", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:55:52.3364", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenNotYetValidException: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:55:52'.\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-15 16:55:52.3364", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:55:52'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:55:52'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-15 16:55:52.3364", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-15 16:55:52.3364", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-15 16:55:52.3364", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 401 0 - 5.6806ms", "ElapsedMilliseconds": 5.6806, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:55:55.0126", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/ayselRoles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/ayselRoles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:55:55.0126", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:55:55.0126", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/ayselRoles/getRoles - 204 - - 2.5575ms", "ElapsedMilliseconds": 2.5575, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/ayselRoles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:55:55.0276", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/ayselRoles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/ayselRoles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:55:55.0276", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:55:55.0276", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenNotYetValidException: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:55:55'.\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-15 16:55:55.0276", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:55:55'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:55:55'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-15 16:55:55.0276", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/ayselRoles/getRoles - 404 0 - 4.2936ms", "ElapsedMilliseconds": 4.2936, "StatusCode": 404, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/ayselRoles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:55:55.0276", "level": "INFO", "message": "Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://192.168.0.105:5274/api/ayselRoles/getRoles, Response status code: 404", "Method": "GET", "Scheme": "http", "Host": {"Value":"192.168.0.105:5274", "HasValue":true, "Host":"192.168.0.105", "Port":5274}, "PathBase": {"Value":"", "HasValue":false}, "Path": {"Value":"/api/ayselRoles/getRoles", "HasValue":true}, "StatusCode": 404, "EventId": 16 }
{ "time": "2024-04-15 16:55:57.2467", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/ ayselRoles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/ ayselRoles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:55:57.2467", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:55:57.2467", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/ ayselRoles/getRoles - 204 - - 2.5767ms", "ElapsedMilliseconds": 2.5767, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/ ayselRoles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:55:57.2467", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/ ayselRoles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/ ayselRoles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:55:57.2467", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:55:57.2568", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenNotYetValidException: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:55:57'.\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-15 16:55:57.2568", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:55:57'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:55:57'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-15 16:55:57.2568", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/ ayselRoles/getRoles - 404 0 - 3.8489ms", "ElapsedMilliseconds": 3.8489, "StatusCode": 404, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/ ayselRoles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:55:57.2568", "level": "INFO", "message": "Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://192.168.0.105:5274/api/%20ayselRoles/getRoles, Response status code: 404", "Method": "GET", "Scheme": "http", "Host": {"Value":"192.168.0.105:5274", "HasValue":true, "Host":"192.168.0.105", "Port":5274}, "PathBase": {"Value":"", "HasValue":false}, "Path": {"Value":"/api/ ayselRoles/getRoles", "HasValue":true}, "StatusCode": 404, "EventId": 16 }
{ "time": "2024-04-15 16:55:59.7089", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/  ayselRoles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/  ayselRoles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:55:59.7099", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:55:59.7099", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/  ayselRoles/getRoles - 204 - - 1.8072ms", "ElapsedMilliseconds": 1.8072, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/  ayselRoles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:55:59.7099", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/  ayselRoles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/  ayselRoles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:55:59.7099", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:55:59.7099", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenNotYetValidException: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:55:59'.\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-15 16:55:59.7099", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:55:59'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:55:59'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-15 16:55:59.7099", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/  ayselRoles/getRoles - 404 0 - 3.1607ms", "ElapsedMilliseconds": 3.1607, "StatusCode": 404, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/  ayselRoles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:55:59.7099", "level": "INFO", "message": "Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://192.168.0.105:5274/api/%20%20ayselRoles/getRoles, Response status code: 404", "Method": "GET", "Scheme": "http", "Host": {"Value":"192.168.0.105:5274", "HasValue":true, "Host":"192.168.0.105", "Port":5274}, "PathBase": {"Value":"", "HasValue":false}, "Path": {"Value":"/api/  ayselRoles/getRoles", "HasValue":true}, "StatusCode": 404, "EventId": 16 }
{ "time": "2024-04-15 16:56:25.8999", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/  ayselRoles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/  ayselRoles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:56:25.8999", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:56:25.8999", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/  ayselRoles/getRoles - 204 - - 3.6774ms", "ElapsedMilliseconds": 3.6774, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/  ayselRoles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:56:25.9817", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/  ayselRoles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/  ayselRoles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:56:25.9817", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:56:25.9817", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenNotYetValidException: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:56:25'.\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-15 16:56:25.9817", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:56:25'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:56:25'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-15 16:56:25.9817", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/  ayselRoles/getRoles - 404 0 - 3.0405ms", "ElapsedMilliseconds": 3.0405, "StatusCode": 404, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/  ayselRoles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:56:25.9817", "level": "INFO", "message": "Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://192.168.0.105:5274/api/%20%20ayselRoles/getRoles, Response status code: 404", "Method": "GET", "Scheme": "http", "Host": {"Value":"192.168.0.105:5274", "HasValue":true, "Host":"192.168.0.105", "Port":5274}, "PathBase": {"Value":"", "HasValue":false}, "Path": {"Value":"/api/  ayselRoles/getRoles", "HasValue":true}, "StatusCode": 404, "EventId": 16 }
{ "time": "2024-04-15 16:56:41.1003", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/  ayselRoles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/  ayselRoles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:56:41.1003", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:56:41.1003", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/  ayselRoles/getRoles - 204 - - 1.3082ms", "ElapsedMilliseconds": 1.3082, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/  ayselRoles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:56:41.1170", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/  ayselRoles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/  ayselRoles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:56:41.1170", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:56:41.1170", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenNotYetValidException: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:56:41'.\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-15 16:56:41.1170", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:56:41'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:56:41'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-15 16:56:41.1170", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/  ayselRoles/getRoles - 404 0 - 2.2091ms", "ElapsedMilliseconds": 2.2091, "StatusCode": 404, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/  ayselRoles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:56:41.1170", "level": "INFO", "message": "Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://192.168.0.105:5274/api/%20%20ayselRoles/getRoles, Response status code: 404", "Method": "GET", "Scheme": "http", "Host": {"Value":"192.168.0.105:5274", "HasValue":true, "Host":"192.168.0.105", "Port":5274}, "PathBase": {"Value":"", "HasValue":false}, "Path": {"Value":"/api/  ayselRoles/getRoles", "HasValue":true}, "StatusCode": 404, "EventId": 16 }
{ "time": "2024-04-15 16:57:33.6535", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/  ayselRoles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/  ayselRoles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:57:33.6535", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:57:33.6535", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/  ayselRoles/getRoles - 204 - - 13.9212ms", "ElapsedMilliseconds": 13.9212, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/  ayselRoles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:57:33.6668", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/  ayselRoles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/  ayselRoles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:57:33.6668", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:57:33.6668", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenNotYetValidException: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:57:33'.\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-15 16:57:33.6668", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:57:33'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:57:33'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-15 16:57:33.6668", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/  ayselRoles/getRoles - 404 0 - 4.1113ms", "ElapsedMilliseconds": 4.1113, "StatusCode": 404, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/  ayselRoles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:57:33.6668", "level": "INFO", "message": "Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://192.168.0.105:5274/api/%20%20ayselRoles/getRoles, Response status code: 404", "Method": "GET", "Scheme": "http", "Host": {"Value":"192.168.0.105:5274", "HasValue":true, "Host":"192.168.0.105", "Port":5274}, "PathBase": {"Value":"", "HasValue":false}, "Path": {"Value":"/api/  ayselRoles/getRoles", "HasValue":true}, "StatusCode": 404, "EventId": 16 }
{ "time": "2024-04-15 16:58:12.9390", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/  /Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/  /Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:58:12.9467", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:58:12.9467", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/  /Roles/getRoles - 204 - - 9.0857ms", "ElapsedMilliseconds": 9.0857, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/  /Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:58:13.7630", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:58:13.7630", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:58:13.7731", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 10.4877ms", "ElapsedMilliseconds": 10.4877, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:58:13.7731", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:58:13.7731", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:58:13.7731", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenNotYetValidException: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:58:13'.\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-15 16:58:13.7731", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:58:13'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 12:58:13'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-15 16:58:13.7731", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-15 16:58:13.7731", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-15 16:58:13.7731", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 401 0 - 4.0992ms", "ElapsedMilliseconds": 4.0992, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:58:29.1153", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 16:58:29.1153", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:58:29.1165", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:58:29.1165", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:58:29.1165", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 1.1821ms", "ElapsedMilliseconds": 1.1821, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:58:29.1165", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 2.0339ms", "ElapsedMilliseconds": 2.0339, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 16:58:29.1461", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 16:58:29.1461", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:58:29.1499", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:58:29.1499", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:58:29.1499", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:58:29.1499", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:58:29.1499", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:58:29.1814", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:58:29.3182", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:58:29.3214", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 161.2224ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 161.2224, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:58:29.3214", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:58:29.3214", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 176.0308ms", "ElapsedMilliseconds": 176.0308, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:58:29.5427", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "4", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:29.5754", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 16:58:29.5754", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 16:58:29.7102", "level": "INFO", "message": "Executed DbCommand (24ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "24", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:29.9340", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:29.9340", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:29.9659", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:30.1455", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:58:30.1687", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 987.1307ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 987.1307, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:58:30.1687", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:58:30.1687", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 1023.2054ms", "ElapsedMilliseconds": 1023.2054, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 16:58:37.7132", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 16:58:37.7132", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 16:58:37.7132", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:58:37.7132", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:58:37.7132", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 204 - - 2.8716ms", "ElapsedMilliseconds": 2.8716, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 16:58:37.7132", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 204 - - 4.2431ms", "ElapsedMilliseconds": 4.2431, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 16:58:37.7362", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 16:58:37.7362", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:58:37.7414", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:58:37.7414", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:58:37.8226", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:37.8226", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 16:58:37.8226", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 16:58:37.8398", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:37.8398", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:37.8502", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:37.8502", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:37.8757", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:37.9143", "level": "WARN", "message": "The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.", "EventId": 10103, "EventName": "Microsoft.EntityFrameworkCore.Query.FirstWithoutOrderByAndFilterWarning" }
{ "time": "2024-04-15 16:58:37.9299", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:38.3169", "level": "INFO", "message": "Executed DbCommand (6ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "6", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:38.3381", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:38.3381", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:38.3381", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:58:38.3618", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 615.4764ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 615.4764, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:58:38.3618", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:58:38.3618", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 626.1701ms", "ElapsedMilliseconds": 626.1701, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 16:58:38.3745", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 16:58:38.3745", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:58:38.3745", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:58:38.3745", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:58:38.3852", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:38.3852", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:38.3989", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:38.3989", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:38.3989", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:38.4163", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:38.4163", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:38.4163", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:38.4328", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:38.4328", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:38.4328", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:58:38.4328", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 63.6579ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 63.6579, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:58:38.4328", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:58:38.4328", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 66.0799ms", "ElapsedMilliseconds": 66.0799, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 16:58:39.7503", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 16:58:39.7503", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 16:58:39.7503", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:58:39.7503", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:58:39.7503", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - 204 - - 1.9509ms", "ElapsedMilliseconds": 1.9509, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 16:58:39.7503", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - 204 - - 2.0067ms", "ElapsedMilliseconds": 2.0067, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 16:58:39.7692", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 16:58:39.7692", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:58:39.7692", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:58:39.7692", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:58:39.7912", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:39.7912", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 16:58:39.7912", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 16:58:39.8161", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "2", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:39.8208", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:39.8208", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:39.8208", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:39.8208", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:39.8378", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:39.8378", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:39.8378", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:58:39.8378", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 74.5625ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 74.5625, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:58:39.8378", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:58:39.8378", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 77.3806ms", "ElapsedMilliseconds": 77.3806, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 16:58:39.8566", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 16:58:39.8566", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:58:39.8566", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:58:39.8566", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:58:39.8566", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:39.8693", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:39.8693", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:39.8693", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:39.8693", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:39.8844", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:39.8844", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:39.8844", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:58:39.8844", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:58:39.8844", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 34.4654ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 34.4654, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:58:39.8844", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:58:39.8844", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 37.1513ms", "ElapsedMilliseconds": 37.1513, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 16:59:05.7022", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-15 16:59:05.9277", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-15 16:59:05.9337", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-15 16:59:05.9337", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-15 16:59:05.9337", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-15 16:59:06.8007", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:59:07.0955", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-15 16:59:07.2995", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 510.6140ms", "ElapsedMilliseconds": 510.614, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:59:07.3203", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:59:07.3203", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:59:07.3203", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 7.0225ms", "ElapsedMilliseconds": 7.0225, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:59:07.4041", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 81.7927ms", "ElapsedMilliseconds": 81.7927, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:59:07.4758", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:59:07.7134", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 237.6327ms", "ElapsedMilliseconds": 237.6327, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:59:08.2060", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Auth/Login - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:59:08.2180", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:59:08.2180", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Auth/Login - 204 - - 14.9067ms", "ElapsedMilliseconds": 14.9067, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:59:08.2303", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.105:5274/api/Auth/Login - application/json 78", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 78, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:59:08.2303", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:59:08.3475", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:59:08.3899", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:59:10.2242", "level": "INFO", "message": "Executed DbCommand (41ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "41", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:59:10.9376", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 2540.4751ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 2540.4751, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:59:10.9376", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:59:11.2227", "level": "ERROR", "message": "{\"Errors\":null,\"Message\":\"Istifadeci movcud deyil\",\"Data\":{},\"InnerException\":null,\"HelpLink\":null,\"Source\":\"Application\",\"HResult\":-2146233088,\"StackTrace\":\"   at Application.Services.JWTService.Login(UserLoginDto usersdata) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Application\\\\Services\\\\JWTService.cs:line 62\\r\\n   at Api.Controllers.AuthController.Login(UserLoginDto usersdata) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\AuthController.cs:line 33\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\"}" }
{ "time": "2024-04-15 16:59:11.2702", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.105:5274/api/Auth/Login - 404 - application/json 3039.8613ms", "ElapsedMilliseconds": 3039.8613, "StatusCode": 404, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:59:18.0835", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-15 16:59:18.1821", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-15 16:59:18.1821", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-15 16:59:18.1821", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-15 16:59:18.1821", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-15 16:59:18.6655", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:59:18.8043", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-15 16:59:18.8890", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 223.3718ms", "ElapsedMilliseconds": 223.3718, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:59:18.8890", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:59:18.8982", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:59:18.8982", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.6926ms", "ElapsedMilliseconds": 2.6926, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:59:18.9204", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 25.1904ms", "ElapsedMilliseconds": 25.1904, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:59:19.0116", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:59:19.0547", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 16:59:19.0547", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:59:19.0547", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 204 - - 13.6488ms", "ElapsedMilliseconds": 13.6488, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 16:59:19.0547", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 16:59:19.0701", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:59:19.0701", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 204 - - 0.8737ms", "ElapsedMilliseconds": 0.8737, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 16:59:19.0852", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 16:59:19.0852", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:59:19.1973", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:59:19.2153", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 203.5830ms", "ElapsedMilliseconds": 203.583, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:59:19.2319", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:59:20.4129", "level": "INFO", "message": "Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "14", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:59:20.4615", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 16:59:20.4615", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 16:59:20.4954", "level": "INFO", "message": "Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "7", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:59:20.5420", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:59:20.5420", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:59:20.5420", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:59:20.6141", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:59:20.6300", "level": "WARN", "message": "The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.", "EventId": 10103, "EventName": "Microsoft.EntityFrameworkCore.Query.FirstWithoutOrderByAndFilterWarning" }
{ "time": "2024-04-15 16:59:20.6346", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:59:20.7512", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:59:20.7583", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:59:20.7583", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:59:20.7583", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:59:20.7787", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 1542.6615ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 1542.6615, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:59:20.7787", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:59:20.7787", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 16:59:20.7787", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 16:59:20.7787", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 1702.7605ms", "ElapsedMilliseconds": 1702.7605, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 16:59:20.7888", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 16:59:20.7888", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 16:59:20.8481", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:59:20.8481", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "0", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:59:20.8481", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:59:20.8515", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:59:20.8515", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:59:20.8515", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:59:20.8515", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:59:20.8515", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:59:20.8515", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:59:20.8515", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 16:59:20.8515", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 16:59:20.8515", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 72.5005ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 72.5005, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 16:59:20.8515", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 16:59:20.8515", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 76.8694ms", "ElapsedMilliseconds": 76.8694, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 16:59:53.0075", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:59:53.0075", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 10.9686ms", "ElapsedMilliseconds": 10.9686, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:59:53.0619", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:59:53.0619", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:59:53.0619", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 0.8422ms", "ElapsedMilliseconds": 0.8422, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:59:53.0834", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 21.4413ms", "ElapsedMilliseconds": 21.4413, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 16:59:53.2583", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 16:59:53.2967", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 38.3962ms", "ElapsedMilliseconds": 38.3962, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:01.0122", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Auth/Login - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:01.0122", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:00:01.0122", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Auth/Login - 204 - - 1.7253ms", "ElapsedMilliseconds": 1.7253, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:01.0122", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.105:5274/api/Auth/Login - application/json 78", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 78, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:01.0234", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:00:01.0234", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:00:01.0424", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:00:01.2109", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "3", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:01.2109", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 172.7874ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 172.7874, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:00:01.2109", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:00:01.2858", "level": "ERROR", "message": "{\"Errors\":null,\"Message\":\"Istifadeci movcud deyil\",\"Data\":{},\"InnerException\":null,\"HelpLink\":null,\"Source\":\"Application\",\"HResult\":-2146233088,\"StackTrace\":\"   at Application.Services.JWTService.Login(UserLoginDto usersdata) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Application\\\\Services\\\\JWTService.cs:line 62\\r\\n   at Api.Controllers.AuthController.Login(UserLoginDto usersdata) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\AuthController.cs:line 33\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\"}" }
{ "time": "2024-04-15 17:00:01.2968", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.105:5274/api/Auth/Login - 404 - application/json 277.1021ms", "ElapsedMilliseconds": 277.1021, "StatusCode": 404, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:02.0462", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:02.0532", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 6.7946ms", "ElapsedMilliseconds": 6.7946, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:02.0862", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:02.0862", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 0.3317ms", "ElapsedMilliseconds": 0.3317, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:02.0862", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:02.0862", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 9.1457ms", "ElapsedMilliseconds": 9.1457, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:02.2622", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:02.2829", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 20.7324ms", "ElapsedMilliseconds": 20.7324, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:16.9086", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:16.9086", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 4.3820ms", "ElapsedMilliseconds": 4.382, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:16.9546", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:16.9546", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 0.4163ms", "ElapsedMilliseconds": 0.4163, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:16.9546", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:16.9893", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 31.6963ms", "ElapsedMilliseconds": 31.6963, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:17.1514", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:17.1720", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 20.5505ms", "ElapsedMilliseconds": 20.5505, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:19.0889", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:19.1103", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 21.3195ms", "ElapsedMilliseconds": 21.3195, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:19.2421", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:19.2421", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:19.2421", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 0.1609ms", "ElapsedMilliseconds": 0.1609, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:19.2421", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 3.8004ms", "ElapsedMilliseconds": 3.8004, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:19.4378", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:19.4557", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 17.9755ms", "ElapsedMilliseconds": 17.9755, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:26.6933", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-15 17:00:27.0200", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-15 17:00:27.0277", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-15 17:00:27.0277", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-15 17:00:27.0277", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-15 17:00:28.0924", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:28.3329", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-15 17:00:28.4955", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 413.0286ms", "ElapsedMilliseconds": 413.0286, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:28.4955", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:28.4955", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 4.0513ms", "ElapsedMilliseconds": 4.0513, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:28.5088", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:28.5931", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 84.3424ms", "ElapsedMilliseconds": 84.3424, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:28.6717", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:28.9213", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 249.5744ms", "ElapsedMilliseconds": 249.5744, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:37.3467", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:00:37.3537", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:37.3676", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:00:37.3676", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:00:37.3676", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 25.7376ms", "ElapsedMilliseconds": 25.7376, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:00:37.3676", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 19.4321ms", "ElapsedMilliseconds": 19.4321, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:37.4864", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:00:37.5080", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:00:37.5080", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:37.5080", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:00:37.8958", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:00:37.8958", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:00:37.9514", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:00:37.9514", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:00:41.0863", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:00:41.1113", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 3144.3862ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 3144.3862, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:00:41.1113", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:00:41.1298", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 3617.7269ms", "ElapsedMilliseconds": 3617.7269, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:42.2489", "level": "INFO", "message": "Executed DbCommand (67ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "67", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:42.4070", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:00:42.4140", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:00:42.5189", "level": "INFO", "message": "Executed DbCommand (16ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "16", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:42.7340", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:42.7340", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:42.7710", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:42.9714", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:00:43.0046", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 5052.7114ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 5052.7114, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:00:43.0046", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:00:43.0193", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 5532.9087ms", "ElapsedMilliseconds": 5532.9087, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:00:51.1532", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:00:51.1532", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:00:51.1532", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:00:51.1532", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 204 - - 1.7057ms", "ElapsedMilliseconds": 1.7057, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:00:51.1532", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:00:51.1532", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 204 - - 2.8370ms", "ElapsedMilliseconds": 2.837, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:00:51.1718", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:00:51.1718", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:00:51.1911", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Auth/Login - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:51.1911", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:00:51.1911", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Auth/Login - 204 - - 1.0314ms", "ElapsedMilliseconds": 1.0314, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:51.1911", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:00:51.1988", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.105:5274/api/Auth/Login - application/json 78", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 78, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:00:51.1988", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:00:51.1988", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:00:51.1988", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:00:51.2131", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:00:51.3018", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:51.3076", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:00:51.3076", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:00:51.3263", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:51.3263", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:51.3392", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:51.3748", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:51.3972", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:51.4346", "level": "WARN", "message": "The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.", "EventId": 10103, "EventName": "Microsoft.EntityFrameworkCore.Query.FirstWithoutOrderByAndFilterWarning" }
{ "time": "2024-04-15 17:00:51.4473", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:51.5245", "level": "INFO", "message": "Executed DbCommand (7ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "7", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:51.6010", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 387.6142ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 387.6142, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:00:51.6010", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:00:51.7637", "level": "ERROR", "message": "{\"Errors\":null,\"Message\":\"Istifadeci movcud deyil\",\"Data\":{},\"InnerException\":null,\"HelpLink\":null,\"Source\":\"Application\",\"HResult\":-2146233088,\"StackTrace\":\"   at Application.Services.JWTService.Login(UserLoginDto usersdata) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Application\\\\Services\\\\JWTService.cs:line 62\\r\\n   at Api.Controllers.AuthController.Login(UserLoginDto usersdata) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\AuthController.cs:line 33\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\"}" }
{ "time": "2024-04-15 17:00:51.7855", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.105:5274/api/Auth/Login - 404 - application/json 586.8410ms", "ElapsedMilliseconds": 586.841, "StatusCode": 404, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:00:51.9463", "level": "INFO", "message": "Executed DbCommand (6ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "6", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:51.9672", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:51.9672", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:51.9777", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:00:51.9963", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 794.4313ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 794.4313, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:00:51.9963", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:00:51.9963", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 825.1706ms", "ElapsedMilliseconds": 825.1706, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:00:52.0077", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:00:52.0077", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:00:52.0077", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:00:52.0077", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:00:52.0077", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:52.0241", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:52.0241", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:52.0241", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:52.0384", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:52.0384", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:52.0384", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:52.0556", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:52.0556", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:52.0556", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:00:52.0556", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:00:52.0556", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 56.7533ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 56.7533, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:00:52.0556", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:00:52.0556", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 60.8704ms", "ElapsedMilliseconds": 60.8704, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:01:26.5558", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Auth/Login - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:01:26.5558", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:01:26.5558", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Auth/Login - 204 - - 11.7797ms", "ElapsedMilliseconds": 11.7797, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:01:26.6733", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.105:5274/api/Auth/Login - application/json 64", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 64, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:01:26.6733", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:01:26.6733", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:01:26.6733", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:01:26.6961", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:01:26.7196", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:01:26.7419", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:01:26.8089", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:01:26.8329", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "2", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:01:26.8356", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:01:26.8356", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 168.6206ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 168.6206, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:01:26.8356", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:01:26.8356", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.105:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 171.3697ms", "ElapsedMilliseconds": 171.3697, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:01:26.8946", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/GetAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/GetAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:01:26.8946", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:01:26.8946", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/GetAllLicenses - 204 - - 0.6089ms", "ElapsedMilliseconds": 0.6089, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/GetAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:01:26.9033", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/GetAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/GetAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:01:26.9033", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:01:26.9033", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:01:26.9033", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:01:27.1433", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:01:27.1481", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:01:27.1481", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:01:27.1481", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:01:27.1644", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:01:27.1644", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:01:27.1644", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:01:27.1786", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:01:27.1786", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:01:27.1786", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:01:27.1941", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:01:27.1941", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:01:27.1941", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 284.2209ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 284.2209, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:01:27.1941", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:01:27.1941", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/GetAllLicenses - 200 - application/json;+charset=utf-8 292.7985ms", "ElapsedMilliseconds": 292.7985, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/GetAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:01:38.4292", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:01:38.4292", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:01:38.4292", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 2.0808ms", "ElapsedMilliseconds": 2.0808, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:01:38.4529", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:01:38.4529", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:01:38.4599", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenNotYetValidException: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 13:01:38'.\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-15 17:01:38.4599", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 13:01:38'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '15.04.2024 16:47:39', Current time (UTC): '15.04.2024 13:01:38'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-15 17:01:38.4599", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-15 17:01:38.4806", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-15 17:01:38.4806", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 401 0 - 28.1100ms", "ElapsedMilliseconds": 28.11, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:01:48.7791", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:01:48.7791", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:01:48.7791", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.0989ms", "ElapsedMilliseconds": 1.0989, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:01:48.7791", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:01:48.7791", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:01:48.7887", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:01:48.7887", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:01:48.8101", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:01:48.8101", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:01:48.8101", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 22.0989ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 22.0989, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:01:48.8101", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:01:48.8101", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 26.9958ms", "ElapsedMilliseconds": 26.9958, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:01:56.9512", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-15 17:01:57.0333", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-15 17:01:57.0333", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-15 17:01:57.0333", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-15 17:01:57.0333", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-15 17:01:57.9579", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:01:58.0846", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-15 17:01:58.1727", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 212.8476ms", "ElapsedMilliseconds": 212.8476, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:01:58.1727", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:01:58.1727", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:01:58.1797", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 1.4571ms", "ElapsedMilliseconds": 1.4571, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:01:58.2189", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 40.8277ms", "ElapsedMilliseconds": 40.8277, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:01:58.3149", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:01:58.4900", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 175.0917ms", "ElapsedMilliseconds": 175.0917, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:02:07.4300", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:02:07.4300", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:02:07.4300", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:02:07.4300", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:02:07.4300", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 12.9690ms", "ElapsedMilliseconds": 12.969, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:02:07.4300", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 12.3634ms", "ElapsedMilliseconds": 12.3634, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:02:07.4577", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:02:07.4577", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:02:07.4607", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:02:07.4607", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:02:07.6844", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:02:07.6844", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:02:07.7411", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:02:07.7489", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:02:09.7319", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:02:09.7592", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 2000.4927ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 2000.4927, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:02:09.7592", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:02:09.7742", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 2315.7661ms", "ElapsedMilliseconds": 2315.7661, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:02:10.6583", "level": "INFO", "message": "Executed DbCommand (67ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "67", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:10.8163", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:02:10.8203", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:02:10.9228", "level": "INFO", "message": "Executed DbCommand (18ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "18", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:11.1007", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:11.1007", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:11.1250", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:11.2770", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:02:11.3007", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 3551.2959ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 3551.2959, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:02:11.3007", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:02:11.3115", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 3853.7126ms", "ElapsedMilliseconds": 3853.7126, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:02:14.9842", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:02:14.9842", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:02:14.9842", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:02:14.9842", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:02:14.9842", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 204 - - 4.5794ms", "ElapsedMilliseconds": 4.5794, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:02:14.9842", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 204 - - 4.7169ms", "ElapsedMilliseconds": 4.7169, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:02:15.0035", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:02:15.0080", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:02:15.0080", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:02:15.0080", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:02:15.1848", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:15.1848", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:02:15.1848", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:02:15.1985", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:15.1985", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:15.1985", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:15.2123", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:15.2263", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:15.2538", "level": "WARN", "message": "The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.", "EventId": 10103, "EventName": "Microsoft.EntityFrameworkCore.Query.FirstWithoutOrderByAndFilterWarning" }
{ "time": "2024-04-15 17:02:15.2638", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:15.5715", "level": "INFO", "message": "Executed DbCommand (5ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "5", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:15.5881", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:15.5881", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:15.5881", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:02:15.6072", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 585.9993ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 585.9993, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:02:15.6072", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:02:15.6072", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 604.3793ms", "ElapsedMilliseconds": 604.3793, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:02:15.6338", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:02:15.6338", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:02:15.6338", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:02:15.6338", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:02:15.6338", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:15.6338", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "2", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:15.6504", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:15.6504", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:15.6504", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:15.6504", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:15.6504", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:15.6651", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "3", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:15.6651", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:15.6651", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:15.6651", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:02:15.6651", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 36.6372ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 36.6372, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:02:15.6651", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:02:15.6651", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 39.5920ms", "ElapsedMilliseconds": 39.592, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:02:24.4831", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:02:24.4831", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:02:24.4831", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.1928ms", "ElapsedMilliseconds": 1.1928, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:02:24.4932", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:02:24.4932", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:02:24.4932", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:02:24.4932", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:02:24.5412", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:02:24.5412", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:02:24.5412", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 47.8105ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 47.8105, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:02:24.5412", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:02:24.5412", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 52.3859ms", "ElapsedMilliseconds": 52.3859, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:03:11.0673", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:03:11.0788", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 11.4145ms", "ElapsedMilliseconds": 11.4145, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:03:11.1245", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:03:11.1245", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:03:11.1245", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 0.6783ms", "ElapsedMilliseconds": 0.6783, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:03:11.1584", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 33.6157ms", "ElapsedMilliseconds": 33.6157, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:03:11.3689", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:03:11.3995", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 30.6463ms", "ElapsedMilliseconds": 30.6463, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:03:11.7566", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:03:11.7566", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:03:11.7566", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 0.4110ms", "ElapsedMilliseconds": 0.411, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:03:11.7566", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:03:11.7566", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:03:11.7566", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:03:11.7566", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:03:11.7795", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:11.7795", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:03:11.7795", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 15.9635ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 15.9635, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:03:11.7795", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:03:11.7795", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 18.6638ms", "ElapsedMilliseconds": 18.6638, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:03:25.8088", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-15 17:03:26.0537", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-15 17:03:26.0537", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-15 17:03:26.0537", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-15 17:03:26.0537", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-15 17:03:27.2681", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:03:27.4778", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-15 17:03:27.6827", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:03:27.6827", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:03:27.6827", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 430.6861ms", "ElapsedMilliseconds": 430.6861, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:03:27.6827", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 7.3557ms", "ElapsedMilliseconds": 7.3557, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:03:27.7560", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 69.0171ms", "ElapsedMilliseconds": 69.0171, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:03:27.8343", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:03:27.9588", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:03:27.9639", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:03:27.9639", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 7.6087ms", "ElapsedMilliseconds": 7.6087, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:03:28.0440", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 209.5359ms", "ElapsedMilliseconds": 209.5359, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:03:28.0637", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:03:28.0637", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:03:28.2649", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:03:28.2958", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:03:29.5083", "level": "INFO", "message": "Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "18", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:29.5598", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:03:29.5598", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 1267.0087ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 1267.0087, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:03:29.5598", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:03:29.5778", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 1514.0943ms", "ElapsedMilliseconds": 1514.0943, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:03:41.6478", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:03:41.6478", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:03:41.6478", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:03:41.6478", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:03:41.6478", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - 204 - - 5.2477ms", "ElapsedMilliseconds": 5.2477, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:03:41.6478", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - 204 - - 4.5303ms", "ElapsedMilliseconds": 4.5303, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:03:41.6635", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:03:41.6635", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:03:41.6635", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:03:41.6985", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:03:42.0261", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:42.0582", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:03:42.0582", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:03:42.1930", "level": "INFO", "message": "Executed DbCommand (25ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "25", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:42.4215", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:42.4215", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:42.4536", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:42.6517", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:42.6956", "level": "WARN", "message": "The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.", "EventId": 10103, "EventName": "Microsoft.EntityFrameworkCore.Query.FirstWithoutOrderByAndFilterWarning" }
{ "time": "2024-04-15 17:03:42.7141", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:43.1429", "level": "INFO", "message": "Executed DbCommand (5ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "5", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:43.1631", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:03:43.1825", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 1483.6789ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 1483.6789, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:03:43.1825", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:03:43.1825", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 1520.1726ms", "ElapsedMilliseconds": 1520.1726, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:03:43.1825", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:03:43.1825", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:03:43.2002", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:03:43.2002", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:03:43.2438", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:43.2438", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:43.2438", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:43.2613", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:43.2613", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:43.2742", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:43.2742", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:43.2910", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:43.2910", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:03:43.2910", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 92.4079ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 92.4079, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:03:43.2910", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:03:43.2910", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 103.0509ms", "ElapsedMilliseconds": 103.0509, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:03:47.7386", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:03:47.7386", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:03:47.7443", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:03:47.7443", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:03:47.7443", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 204 - - 6.8560ms", "ElapsedMilliseconds": 6.856, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:03:47.7443", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 204 - - 1.3403ms", "ElapsedMilliseconds": 1.3403, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:03:47.7605", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:03:47.7605", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:03:47.7605", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:03:47.7605", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:03:47.7791", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:47.7791", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:03:47.7911", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:03:47.8045", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:47.8045", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:47.8045", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:47.8241", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:47.8241", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:47.8371", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:47.8371", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:47.8371", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:47.8580", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:47.8580", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:03:47.8580", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 97.4026ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 97.4026, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:03:47.8580", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:03:47.8580", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 100.0377ms", "ElapsedMilliseconds": 100.0377, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:03:47.8714", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:03:47.8714", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:03:47.8714", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:03:47.8714", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:03:47.8836", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:47.8836", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:47.8979", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:47.8979", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:47.8979", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:47.9170", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:47.9170", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:47.9313", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:47.9313", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:47.9453", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:03:47.9453", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:03:47.9453", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 72.8926ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 72.8926, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:03:47.9453", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:03:47.9453", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 76.0626ms", "ElapsedMilliseconds": 76.0626, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:04:53.5867", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:04:53.5867", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:04:53.5867", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 2.3034ms", "ElapsedMilliseconds": 2.3034, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:04:53.5867", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:04:53.5867", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:04:53.5867", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 4.1240ms", "ElapsedMilliseconds": 4.124, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:04:53.5867", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:04:53.6007", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:04:53.6007", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:04:53.6007", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:04:53.6007", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:04:53.6007", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:04:53.6163", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:04:53.6163", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:04:53.6163", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:04:53.6163", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:04:53.6163", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:04:53.6163", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 12.1738ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 12.1738, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:04:53.6322", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:04:53.6322", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 21.4072ms", "ElapsedMilliseconds": 21.4072, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:04:53.6322", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:04:53.6496", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:04:53.6496", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:04:53.6638", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:04:53.6638", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:04:53.6829", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:04:53.7015", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 94.9015ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 94.9015, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:04:53.7015", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:04:53.7015", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 101.9944ms", "ElapsedMilliseconds": 101.9944, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:05:53.9056", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:05:53.9056", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:05:53.9185", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:05:53.9185", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:05:53.9185", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 204 - - 12.8478ms", "ElapsedMilliseconds": 12.8478, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:05:53.9185", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 204 - - 16.3379ms", "ElapsedMilliseconds": 16.3379, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:05:53.9334", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:05:53.9334", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:05:53.9334", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:05:53.9334", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:05:53.9461", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:05:53.9461", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:05:53.9461", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:05:53.9646", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:05:53.9646", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:05:53.9646", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:05:53.9646", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 36.131ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 36.131, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:05:53.9646", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:05:53.9646", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 39.4849ms", "ElapsedMilliseconds": 39.4849, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:05:53.9796", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:05:53.9796", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:05:53.9796", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:05:53.9796", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:05:53.9796", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:05:53.9980", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:05:53.9980", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:05:54.0106", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:05:54.0106", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:05:54.0106", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:05:54.0106", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 36.5939ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 36.5939, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:05:54.0106", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:05:54.0106", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 39.3556ms", "ElapsedMilliseconds": 39.3556, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:06:08.6969", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:06:08.6969", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:06:08.6969", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:06:08.6969", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:06:08.6969", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 204 - - 1.5065ms", "ElapsedMilliseconds": 1.5065, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:06:08.6969", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 204 - - 1.6141ms", "ElapsedMilliseconds": 1.6141, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:06:08.7120", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:06:08.7120", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:06:08.7120", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:06:08.7120", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:06:08.7120", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:06:08.7329", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:06:08.7329", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:06:08.7531", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:06:08.7595", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:06:08.7595", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:06:08.7595", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:06:08.7728", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:06:08.7728", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 58.4301ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 58.4301, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:06:08.7728", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:06:08.7728", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 62.2316ms", "ElapsedMilliseconds": 62.2316, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:06:08.7728", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:06:08.7728", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:06:08.7728", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:06:08.7728", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:06:08.7927", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:06:08.7927", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:06:08.8086", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:06:08.8086", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:06:08.8233", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:06:08.8233", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:06:08.8233", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 40.5707ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 40.5707, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:06:08.8233", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:06:08.8233", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 43.2590ms", "ElapsedMilliseconds": 43.259, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:06:18.4101", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:06:18.4101", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:06:18.4101", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 2.5037ms", "ElapsedMilliseconds": 2.5037, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:06:18.4180", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:06:18.4180", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:06:18.4180", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:06:18.4180", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:06:18.4386", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:06:18.4386", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:06:18.4386", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 20.1161ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 20.1161, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:06:18.4386", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:06:18.4386", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 22.0615ms", "ElapsedMilliseconds": 22.0615, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:06:38.3835", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:06:38.3835", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:06:38.3835", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:06:38.3835", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 204 - - 2.2780ms", "ElapsedMilliseconds": 2.278, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:06:38.3835", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:06:38.3835", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 204 - - 2.6247ms", "ElapsedMilliseconds": 2.6247, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:06:38.4027", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:06:38.4027", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:06:38.4027", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:06:38.4027", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:06:38.4027", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:06:38.4190", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:06:38.4190", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:06:38.4315", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:06:38.4315", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:06:38.4315", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:06:38.4315", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 34.1276ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 34.1276, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:06:38.4315", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:06:38.4315", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 37.0889ms", "ElapsedMilliseconds": 37.0889, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:06:38.4625", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:06:38.4625", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:06:38.4625", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:06:38.4625", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:06:38.4625", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:06:38.4773", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:06:38.4773", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:06:38.4916", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:06:38.4916", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:06:38.4916", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:06:38.4916", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 35.838ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 35.838, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:06:38.4916", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:06:38.4916", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 38.3020ms", "ElapsedMilliseconds": 38.302, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:07:02.3203", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:07:02.3203", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:07:02.3203", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:07:02.3203", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:07:02.3203", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 2.8962ms", "ElapsedMilliseconds": 2.8962, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:07:02.3203", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 3.2006ms", "ElapsedMilliseconds": 3.2006, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:07:02.3659", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:07:02.3659", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:07:02.3659", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:07:02.3669", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:07:02.3669", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:07:02.3669", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:07:02.3669", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:07:02.3669", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:07:02.3669", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:07:02.3669", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 1.5836ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 1.5836, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:07:02.3669", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:07:02.3669", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 4.1918ms", "ElapsedMilliseconds": 4.1918, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:07:02.3669", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:07:02.3821", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:07:02.3821", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:07:02.3821", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:07:02.3989", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:07:02.3989", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:07:02.3989", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 31.9371ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 31.9371, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:07:02.3989", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:07:02.3989", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 34.1333ms", "ElapsedMilliseconds": 34.1333, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:07:06.9265", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:07:06.9265", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:07:06.9265", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:07:06.9265", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:07:06.9265", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 204 - - 1.5632ms", "ElapsedMilliseconds": 1.5632, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:07:06.9265", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 204 - - 0.4883ms", "ElapsedMilliseconds": 0.4883, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:07:06.9644", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:07:06.9644", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:07:06.9644", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:07:06.9644", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:07:06.9644", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:07:06.9795", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:07:06.9795", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:07:06.9924", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:07:06.9924", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:07:06.9924", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:07:06.9924", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 34.231ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 34.231, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:07:06.9924", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:07:06.9924", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 36.6812ms", "ElapsedMilliseconds": 36.6812, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:07:07.0214", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:07:07.0214", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:07:07.0226", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:07:07.0226", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:07:07.0226", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:07:07.0226", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:07:07.0415", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:07:07.0415", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:07:07.0415", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:07:07.0415", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:07:07.0415", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 30.3627ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 30.3627, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:07:07.0415", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:07:07.0536", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 32.1723ms", "ElapsedMilliseconds": 32.1723, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:07:27.9967", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:07:27.9967", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:07:27.9967", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 3.5412ms", "ElapsedMilliseconds": 3.5412, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:07:28.0100", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:07:28.0100", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:07:28.0100", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:07:28.0100", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:07:28.0268", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:07:28.0268", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:07:28.0268", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 15.2212ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 15.2212, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:07:28.0268", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:07:28.0268", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 18.0942ms", "ElapsedMilliseconds": 18.0942, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:08:38.1059", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:08:38.1167", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:08:38.1167", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 14.0227ms", "ElapsedMilliseconds": 14.0227, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:08:38.1167", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:08:38.1167", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:08:38.1167", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:08:38.1167", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:08:38.1706", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:08:38.1706", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:08:38.1706", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 44.421ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 44.421, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:08:38.1706", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:08:38.1706", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 46.7915ms", "ElapsedMilliseconds": 46.7915, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:10:10.8106", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:10:10.8195", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:10:10.8195", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 11.6360ms", "ElapsedMilliseconds": 11.636, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:10:10.8369", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:10:10.8369", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:10:10.8369", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:10:10.8369", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:10:10.8369", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:10:10.8369", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:10:10.8369", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 6.8489ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 6.8489, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:10:10.8369", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:10:10.8369", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.4133ms", "ElapsedMilliseconds": 9.4133, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:10:16.8472", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:10:16.8472", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:10:16.8472", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.6938ms", "ElapsedMilliseconds": 1.6938, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:10:16.9274", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:10:16.9274", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:10:16.9290", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:10:16.9290", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:10:16.9290", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:10:16.9290", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:10:16.9290", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 6.8488ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 6.8488, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:10:16.9290", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:10:16.9290", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.2426ms", "ElapsedMilliseconds": 9.2426, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:10:31.8905", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:10:31.8905", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:10:31.8905", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 2.9794ms", "ElapsedMilliseconds": 2.9794, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:10:31.9015", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:10:31.9015", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:10:31.9015", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:10:31.9126", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:10:31.9126", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:10:31.9126", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:10:31.9126", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.0073ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.0073, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:10:31.9126", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:10:31.9126", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 18.6366ms", "ElapsedMilliseconds": 18.6366, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:10:36.8036", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:10:36.8043", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:10:36.8043", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:10:36.8043", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:10:36.8043", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:10:36.8043", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:10:36.8043", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.6734ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.6734, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:10:36.8043", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:10:36.8043", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.7841ms", "ElapsedMilliseconds": 7.7841, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:10:40.8007", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:10:40.8007", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:10:40.8007", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:10:40.8007", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 2.0469ms", "ElapsedMilliseconds": 2.0469, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:10:40.8040", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:10:40.8040", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 3.7910ms", "ElapsedMilliseconds": 3.791, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:10:40.8040", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:10:40.8040", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:10:40.8040", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:10:40.8040", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:10:40.8237", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "3", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:10:40.8237", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:10:40.8237", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:10:40.8378", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:10:40.8378", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:10:40.8378", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:10:40.8378", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 27.937ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 27.937, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:10:40.8378", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:10:40.8378", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 30.3590ms", "ElapsedMilliseconds": 30.359, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:10:40.8526", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:10:40.8526", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:10:40.8526", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:10:40.8526", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:10:40.8526", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:10:40.8526", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:10:40.8695", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:10:40.8695", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:10:40.8817", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:10:40.8817", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:10:40.8817", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 28.3087ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 28.3087, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:10:40.8817", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:10:40.8817", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 30.3098ms", "ElapsedMilliseconds": 30.3098, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:10:43.1479", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:10:43.1479", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:10:43.1479", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.5633ms", "ElapsedMilliseconds": 1.5633, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:10:43.1849", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:10:43.1849", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:10:43.1849", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:10:43.1849", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:10:43.1942", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:10:43.1942", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:10:43.1942", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.9227ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.9227, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:10:43.1942", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:10:43.1942", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 10.6329ms", "ElapsedMilliseconds": 10.6329, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:10:43.9662", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:10:43.9662", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:10:43.9662", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:10:43.9662", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:10:43.9662", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:10:43.9662", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:10:43.9662", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 6.4608ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 6.4608, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:10:43.9662", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:10:43.9662", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 8.2264ms", "ElapsedMilliseconds": 8.2264, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:10:47.8563", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:10:47.8563", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:10:47.8563", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:10:47.8563", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:10:47.8563", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:10:47.8563", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:10:47.8563", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 6.5721ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 6.5721, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:10:47.8563", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:10:47.8563", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.3416ms", "ElapsedMilliseconds": 9.3416, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:10:51.8456", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:10:51.8456", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:10:51.8456", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.4727ms", "ElapsedMilliseconds": 1.4727, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:10:51.8540", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:10:51.8540", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:10:51.8540", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:10:51.8540", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:10:51.8540", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:10:51.8540", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:10:51.8540", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.4853ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.4853, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:10:51.8540", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:10:51.8540", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.3641ms", "ElapsedMilliseconds": 9.3641, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:10:59.3160", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:10:59.3160", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:10:59.3160", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 0.9891ms", "ElapsedMilliseconds": 0.9891, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:10:59.3228", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:10:59.3228", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:10:59.3228", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:10:59.3228", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:10:59.3228", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:10:59.3228", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:10:59.3228", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.4656ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.4656, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:10:59.3228", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:10:59.3228", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.5066ms", "ElapsedMilliseconds": 7.5066, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:11:07.6614", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:11:07.6614", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:11:07.6614", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 0.8355ms", "ElapsedMilliseconds": 0.8355, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:11:07.6733", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:11:07.6733", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:11:07.6733", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:11:07.6733", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:11:07.6820", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:11:07.6820", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:11:07.6820", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 6.9773ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 6.9773, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:11:07.6820", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:11:07.6820", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.9663ms", "ElapsedMilliseconds": 9.9663, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:11:32.8832", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:11:32.8832", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:11:32.8832", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 9.8370ms", "ElapsedMilliseconds": 9.837, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:11:32.9609", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:11:32.9609", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:11:32.9609", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:11:32.9609", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:11:32.9609", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:11:32.9609", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:11:32.9609", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.6421ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.6421, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:11:32.9609", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:11:32.9609", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.2886ms", "ElapsedMilliseconds": 7.2886, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:11:37.5914", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:11:37.5914", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:11:37.5914", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:11:37.5914", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:11:37.5914", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:11:37.5914", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:11:37.5914", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 6.3822ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 6.3822, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:11:37.5914", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:11:37.5914", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 8.3363ms", "ElapsedMilliseconds": 8.3363, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:11:53.9200", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:11:53.9200", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:11:53.9200", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 2.5777ms", "ElapsedMilliseconds": 2.5777, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:11:53.9282", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:11:53.9282", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:11:53.9282", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:11:53.9282", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:11:53.9282", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:11:53.9282", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:11:53.9282", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.2409ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.2409, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:11:53.9282", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:11:53.9282", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 6.6023ms", "ElapsedMilliseconds": 6.6023, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:12:11.2641", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:12:11.2824", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-15 17:12:11.2913", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-15 17:12:11.2913", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 401 0 - 27.5196ms", "ElapsedMilliseconds": 27.5196, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:12:11.4712", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:12:11.4712", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:12:11.4712", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 0.2261ms", "ElapsedMilliseconds": 0.2261, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:12:11.4796", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:12:11.4796", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:12:11.4796", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 0.4175ms", "ElapsedMilliseconds": 0.4175, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:12:11.4947", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:12:11.4947", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:12:11.4947", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:12:11.4947", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:12:11.4947", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:11.4947", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:12:11.4947", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:12:11.4947", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:12:11.4947", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:12:11.4947", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:11.4947", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:12:11.5067", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 0.9292ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 0.9292, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:12:11.5067", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:12:11.5067", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 5.1339ms", "ElapsedMilliseconds": 5.1339, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:12:11.5067", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:11.5067", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:11.5230", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:11.5230", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:12:11.5230", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 29.4693ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 29.4693, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:12:11.5230", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:12:11.5230", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 31.3242ms", "ElapsedMilliseconds": 31.3242, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:12:25.2000", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - application/json 37", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:12:25.2000", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:12:25.2000", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:12:30.1928", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:12:30.1942", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:12:30.1942", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 204 - - 1.5871ms", "ElapsedMilliseconds": 1.5871, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:12:30.1942", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:30.1942", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:30.2153", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:12:30.2153", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:12:30.3076", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:12:30.3076", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:12:30.3076", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:30.3320", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:30.3555", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:30.3763", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:30.4194", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:30.7956", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:12:30.7956", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 488.5003ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 488.5003, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:12:30.7956", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:12:30.7956", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 581.5811ms", "ElapsedMilliseconds": 581.5811, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:12:30.9652", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:30.9652", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:30.9754", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:30.9754", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:30.9754", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:30.9947", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "4", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:30.9947", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:30.9947", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:33.0196", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:12:40.9796", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 15777.1394ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 15777.1394, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:12:40.9796", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:12:41.3472", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:12:41.5836", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:12:41.5836", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 236.7127ms", "ElapsedMilliseconds": 236.7127, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:12:41.5974", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:12:41.5974", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:12:41.5974", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:12:41.5974", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:12:41.5974", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 0.2181ms", "ElapsedMilliseconds": 0.2181, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:12:41.6067", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:12:41.6067", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:12:41.6321", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:12:41.6321", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:12:41.6321", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:41.6321", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:12:41.6321", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:12:41.6591", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:12:41.6591", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 26.5953ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 26.5953, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:12:41.6591", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:12:41.6591", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 27.6522ms", "ElapsedMilliseconds": 27.6522, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:12:41.6638", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:42.1014", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:42.1585", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:42.1585", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 16958.6303ms", "ElapsedMilliseconds": 16958.6303, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:12:42.1633", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:42.1633", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:12:42.1633", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 557.2912ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 557.2912, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:12:42.1633", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:12:42.1633", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 567.0779ms", "ElapsedMilliseconds": 567.0779, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:12:46.3094", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:12:46.3094", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:12:46.3094", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 204 - - 1.2926ms", "ElapsedMilliseconds": 1.2926, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:12:46.3263", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:12:46.3263", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:12:46.3263", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:12:46.3263", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:12:46.3263", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:46.3392", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:46.3392", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:46.3392", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:46.3509", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:12:46.3509", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:12:46.3509", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 23.8487ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 23.8487, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:12:46.3509", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:12:46.3509", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 26.2133ms", "ElapsedMilliseconds": 26.2133, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:13:14.6011", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:13:14.6011", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:13:14.6011", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.5005ms", "ElapsedMilliseconds": 1.5005, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:13:14.6011", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:13:14.6011", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:13:14.6169", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:13:14.6169", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:13:14.6169", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:13:14.6169", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:13:14.6169", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 9.0923ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 9.0923, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:13:14.6169", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:13:14.6169", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 10.7215ms", "ElapsedMilliseconds": 10.7215, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:14:07.1231", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:14:07.1231", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:14:07.1320", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:14:07.1320", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:14:07.1320", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 9.1202ms", "ElapsedMilliseconds": 9.1202, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:14:07.1320", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 11.1371ms", "ElapsedMilliseconds": 11.1371, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:14:07.1690", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:14:07.1690", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:14:07.1690", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:14:07.1690", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:14:07.2036", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:14:07.2190", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:14:07.2301", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 26.3177ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 26.3177, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:14:07.2301", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:14:07.2301", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 62.8490ms", "ElapsedMilliseconds": 62.849, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:14:26.6079", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:14:26.6079", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:14:26.6079", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 3.0452ms", "ElapsedMilliseconds": 3.0452, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:14:26.6079", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:14:26.6079", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:14:26.6162", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 0.3636ms", "ElapsedMilliseconds": 0.3636, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:14:26.7619", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:14:26.7619", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:14:26.7619", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:14:26.9502", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:14:26.9502", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:14:26.9502", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:14:26.9502", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 0.3737ms", "ElapsedMilliseconds": 0.3737, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:14:26.9502", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:14:26.9502", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 1.6002ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 1.6002, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:14:26.9502", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:14:26.9502", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 192.7498ms", "ElapsedMilliseconds": 192.7498, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:14:26.9502", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:14:26.9502", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:14:26.9502", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:14:26.9920", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:14:26.9920", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:14:26.9920", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:14:26.9920", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:14:26.9920", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:14:26.9920", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:14:26.9920", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:14:26.9920", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:14:27.0584", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:27.0584", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:14:27.0584", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 67.3052ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 67.3052, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:14:27.0584", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:14:27.0584", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 69.3033ms", "ElapsedMilliseconds": 69.3033, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:14:27.0584", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "3", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:27.0724", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "3", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:27.0724", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "2", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:27.0724", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "4", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:27.0865", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:27.0865", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:27.0865", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:27.0865", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:27.0865", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:14:27.1014", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 105.9366ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 105.9366, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:14:27.1014", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:14:27.1014", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:27.1014", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 149.5221ms", "ElapsedMilliseconds": 149.5221, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:14:27.1014", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:27.1014", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:14:27.1014", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 118.6332ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 118.6332, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:14:27.1014", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:14:27.4838", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 499 - application/json;+charset=utf-8 20314.7664ms", "ElapsedMilliseconds": 20314.7664, "StatusCode": 499, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:14:33.7061", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:14:33.7061", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:14:33.7061", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 204 - - 0.9420ms", "ElapsedMilliseconds": 0.942, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:14:33.7304", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:14:37.2095", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:14:37.2117", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:14:37.2117", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:14:37.2117", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:37.2252", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:37.2252", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:37.2252", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "0", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:37.2252", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:37.2252", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:14:37.2252", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 23.2674ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 23.2674, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:14:37.2252", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:14:37.5490", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 3818.4754ms", "ElapsedMilliseconds": 3818.4754, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:14:38.9250", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:14:40.2871", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:14:40.6695", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 204 - - 1744.4949ms", "ElapsedMilliseconds": 1744.4949, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:14:40.6879", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:14:41.1564", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:14:41.1564", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:14:41.1564", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:14:41.1654", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:41.1654", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:41.1654", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:41.1861", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:41.1861", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:41.1861", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:14:41.1861", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 35.7625ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 35.7625, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:14:41.1861", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:14:41.5446", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 856.7974ms", "ElapsedMilliseconds": 856.7974, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:14:49.0582", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:14:49.0582", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:14:49.0582", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 0.8451ms", "ElapsedMilliseconds": 0.8451, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:14:49.0582", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:14:49.0582", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:14:49.0582", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:14:49.0582", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:14:49.0728", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:49.0728", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:14:49.0728", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 6.4721ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 6.4721, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:14:49.0728", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:14:49.0728", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 8.0483ms", "ElapsedMilliseconds": 8.0483, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:14:51.8236", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:14:57.8027", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:14:57.8045", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:14:57.8045", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:14:57.8045", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:14:57.8045", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:14:57.8045", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 9.8297ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 9.8297, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:14:57.8045", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:14:58.1579", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 6334.3832ms", "ElapsedMilliseconds": 6334.3832, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:15:08.9068", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-15 17:15:09.1222", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-15 17:15:09.1222", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-15 17:15:09.1222", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-15 17:15:09.1322", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-15 17:15:09.8789", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:15:10.0861", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-15 17:15:10.2026", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 334.7055ms", "ElapsedMilliseconds": 334.7055, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:15:10.2107", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:15:10.2107", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:15:10.2107", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.3757ms", "ElapsedMilliseconds": 3.3757, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:15:10.2465", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 35.8355ms", "ElapsedMilliseconds": 35.8355, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:15:10.3232", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:15:10.5372", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 214.1134ms", "ElapsedMilliseconds": 214.1134, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:15:15.5744", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:15:15.5882", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:15:15.5882", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 204 - - 18.1513ms", "ElapsedMilliseconds": 18.1513, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:15:15.6406", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:15:15.6541", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:15:15.9642", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:15:16.0810", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:15:19.9640", "level": "INFO", "message": "Executed DbCommand (67ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "67", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:15:20.0959", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:15:20.1006", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:15:20.2029", "level": "INFO", "message": "Executed DbCommand (15ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "15", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:15:20.3850", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:15:20.3850", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:15:20.4135", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:15:20.5929", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:15:20.6420", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 4545.3638ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 4545.3638, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:15:20.6420", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:15:20.6726", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 5032.0056ms", "ElapsedMilliseconds": 5032.0056, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:15:48.5463", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:15:48.5463", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:15:48.5463", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 3.4922ms", "ElapsedMilliseconds": 3.4922, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:15:48.5606", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:15:48.5606", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:15:48.5695", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:15:48.5695", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:15:48.7995", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:15:48.7995", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:15:48.8062", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 232.2412ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 232.2412, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:15:48.8062", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:15:48.8062", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 246.5070ms", "ElapsedMilliseconds": 246.507, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:19:49.6419", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:19:49.6419", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:19:49.6419", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:19:49.6419", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:19:49.6419", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 6.4305ms", "ElapsedMilliseconds": 6.4305, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:19:49.6419", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 4.4221ms", "ElapsedMilliseconds": 4.4221, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:19:49.6829", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:19:49.6829", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:19:49.6829", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:19:49.6829", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:19:49.6829", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:19:49.6829", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:19:49.6829", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:19:49.6968", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:19:49.7292", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:19:49.7292", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 33.575ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 33.575, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:19:49.7292", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:19:49.7292", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 47.4759ms", "ElapsedMilliseconds": 47.4759, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:19:49.7292", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:19:49.7470", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:19:49.7470", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:19:49.7653", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:19:49.7653", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:19:49.7790", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:19:49.7790", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:19:49.7790", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:19:49.7882", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 94.7172ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 94.7172, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:19:49.7882", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:19:49.7882", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 106.0583ms", "ElapsedMilliseconds": 106.0583, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:19:57.0926", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:19:57.0926", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:19:57.0926", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 2.1823ms", "ElapsedMilliseconds": 2.1823, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:19:57.1070", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:19:57.1070", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:19:57.1070", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:19:57.1070", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:19:57.1243", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:19:57.1243", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:19:57.1243", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 16.2985ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 16.2985, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:19:57.1243", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:19:57.1243", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 19.1615ms", "ElapsedMilliseconds": 19.1615, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:19:59.4184", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:19:59.4184", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:19:59.4184", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 1.5132ms", "ElapsedMilliseconds": 1.5132, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:19:59.4427", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:19:59.4427", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:19:59.4427", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:19:59.4448", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:19:59.4448", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:19:59.4653", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:19:59.4653", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:19:59.4774", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:19:59.4774", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:19:59.4774", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:19:59.4774", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 40.4444ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 40.4444, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:19:59.4774", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:19:59.4774", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 43.3864ms", "ElapsedMilliseconds": 43.3864, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:20:00.6646", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:20:00.6646", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:20:00.6646", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:20:00.6646", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:20:00.6807", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:00.6807", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:20:00.6807", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 14.2668ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 14.2668, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:20:00.6807", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:20:00.6807", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 17.9280ms", "ElapsedMilliseconds": 17.928, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:20:03.3132", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:20:03.3132", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:20:03.3132", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 204 - - 1.2064ms", "ElapsedMilliseconds": 1.2064, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:20:03.3262", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:20:03.3262", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:20:03.3262", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:20:03.3262", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:20:03.3370", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:03.3370", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:03.3520", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:03.3520", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:03.3520", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:03.3520", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:20:03.3663", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 38.3547ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 38.3547, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:20:03.3663", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:20:03.3663", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 40.6941ms", "ElapsedMilliseconds": 40.6941, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:20:10.0963", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:20:10.0963", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:20:10.0963", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 3.1044ms", "ElapsedMilliseconds": 3.1044, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:20:10.1928", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:20:10.1928", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:20:10.1928", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:20:10.1942", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:20:10.1942", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:10.1942", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:20:10.1942", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.1752ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.1752, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:20:10.1942", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:20:10.1942", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.3146ms", "ElapsedMilliseconds": 9.3146, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:20:32.8047", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:20:32.8047", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:20:32.8047", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.6182ms", "ElapsedMilliseconds": 1.6182, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:20:32.8903", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:20:32.8903", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:20:32.8903", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:20:32.8903", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:20:33.0491", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:33.0491", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:20:33.0491", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 157.4205ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 157.4205, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:20:33.0491", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:20:33.0491", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 160.2960ms", "ElapsedMilliseconds": 160.296, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:20:40.3764", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:20:40.3764", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:20:40.3764", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:20:40.3764", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:20:40.3764", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 1.1052ms", "ElapsedMilliseconds": 1.1052, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:20:40.3764", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 1.4967ms", "ElapsedMilliseconds": 1.4967, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:20:40.4726", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:20:40.4726", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:20:40.4726", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:20:40.4726", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:20:40.4726", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:20:40.4726", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:20:40.4726", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:20:40.4752", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:20:40.4752", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:20:40.4752", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 1.4922ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 1.4922, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:20:40.4752", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:20:40.4752", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 3.5426ms", "ElapsedMilliseconds": 3.5426, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:20:40.4752", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:40.4914", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "2", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:40.4914", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:40.5068", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:40.5068", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:40.5068", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:20:40.5068", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 39.8039ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 39.8039, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:20:40.5068", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:20:40.5068", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 41.4494ms", "ElapsedMilliseconds": 41.4494, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:20:48.7642", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:20:48.7642", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:20:48.7642", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 1.8231ms", "ElapsedMilliseconds": 1.8231, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:20:48.7776", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:20:48.7776", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:20:48.7776", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:20:48.7776", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:20:48.7776", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:48.7914", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:48.7914", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:48.7914", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:48.8088", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:48.8088", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:20:48.8088", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 31.5799ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 31.5799, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:20:48.8088", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:20:48.8088", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 33.7677ms", "ElapsedMilliseconds": 33.7677, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:20:49.9890", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:20:49.9890", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:20:49.9890", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 204 - - 1.2550ms", "ElapsedMilliseconds": 1.255, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:20:50.0130", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:20:50.0130", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:20:50.0130", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:20:50.0130", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:20:50.0229", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:50.0229", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:50.0229", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:50.0411", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:50.0411", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:50.0411", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:20:50.0411", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 33.2539ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 33.2539, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:20:50.0411", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:20:50.0411", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 35.6391ms", "ElapsedMilliseconds": 35.6391, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:20:54.3893", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:20:54.3893", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:20:54.3893", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.7860ms", "ElapsedMilliseconds": 1.786, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:20:54.4034", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:20:54.4034", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:20:54.4034", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:20:54.4034", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:20:54.4034", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:20:54.4034", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:20:54.4034", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.6845ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.6845, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:20:54.4034", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:20:54.4034", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 10.0200ms", "ElapsedMilliseconds": 10.02, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:21:06.3655", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:21:06.3682", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:21:06.3682", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 3.6926ms", "ElapsedMilliseconds": 3.6926, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:21:06.3682", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:21:06.3682", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:21:06.3682", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:21:06.3682", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:21:06.3846", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:21:06.3846", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:21:06.3846", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 6.2957ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 6.2957, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:21:06.3846", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:21:06.3846", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.3773ms", "ElapsedMilliseconds": 9.3773, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:21:12.1974", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:21:12.1974", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:21:12.1974", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.3379ms", "ElapsedMilliseconds": 1.3379, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:21:12.1974", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:21:12.1974", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:21:12.1974", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:21:12.1974", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:21:12.2141", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:21:12.2141", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:21:12.2141", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.0675ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.0675, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:21:12.2141", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:21:12.2141", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.0736ms", "ElapsedMilliseconds": 9.0736, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:21:24.8921", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:21:24.8921", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:21:24.8921", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.7745ms", "ElapsedMilliseconds": 1.7745, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:21:24.9016", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:21:24.9016", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:21:24.9016", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:21:24.9016", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:21:24.9016", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:21:24.9016", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:21:24.9016", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 6.0175ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 6.0175, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:21:24.9016", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:21:24.9016", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 8.0529ms", "ElapsedMilliseconds": 8.0529, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:21:26.7928", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:21:26.7928", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:21:26.7928", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:21:26.7928", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:21:26.7928", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:21:26.7928", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:21:26.7928", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.6623ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.6623, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:21:26.7928", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:21:26.7928", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.9662ms", "ElapsedMilliseconds": 7.9662, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:21:30.3084", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:21:30.3084", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:21:30.3084", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.7951ms", "ElapsedMilliseconds": 1.7951, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:21:30.3277", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:21:30.3277", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:21:30.3277", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:21:30.3277", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:21:30.3347", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:21:30.3347", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:21:30.3347", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.9673ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.9673, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:21:30.3347", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:21:30.3347", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.9852ms", "ElapsedMilliseconds": 7.9852, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:21:44.8399", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:21:44.8399", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:21:44.8399", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 2.9253ms", "ElapsedMilliseconds": 2.9253, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:21:44.8613", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:21:44.8613", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:21:44.8613", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:21:44.8613", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:21:44.8694", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:21:44.8694", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:21:44.8694", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 6.7333ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 6.7333, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:21:44.8694", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:21:44.8694", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.1248ms", "ElapsedMilliseconds": 9.1248, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:21:46.8355", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:21:46.8355", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:21:46.8355", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:21:46.8355", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:21:46.8503", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:21:46.8503", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:21:46.8503", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 13.4843ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 13.4843, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:21:46.8503", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:21:46.8503", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 16.2263ms", "ElapsedMilliseconds": 16.2263, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:21:55.2906", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:21:55.2906", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:21:55.2906", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 2.2166ms", "ElapsedMilliseconds": 2.2166, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:21:55.2906", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:21:55.2906", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:21:55.2906", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:21:55.2906", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:21:55.3081", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:21:55.3081", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:21:55.3081", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.1575ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.1575, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:21:55.3081", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:21:55.3081", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.3803ms", "ElapsedMilliseconds": 9.3803, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:22:18.8186", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:22:18.8318", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:22:18.8318", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 14.8965ms", "ElapsedMilliseconds": 14.8965, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:22:18.8437", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:22:18.8437", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:22:18.8437", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:22:18.8437", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:22:18.8520", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:22:18.8520", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:22:18.8520", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.0927ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.0927, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:22:18.8520", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:22:18.8520", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.2394ms", "ElapsedMilliseconds": 9.2394, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:22:21.0662", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:22:21.0662", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:22:21.0662", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:22:21.0662", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:22:21.0749", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:22:21.0749", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:22:21.0749", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 6.7416ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 6.7416, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:22:21.0749", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:22:21.0749", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.6907ms", "ElapsedMilliseconds": 9.6907, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:24:13.0300", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:24:13.0412", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:24:13.0412", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 13.5153ms", "ElapsedMilliseconds": 13.5153, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:24:13.0412", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:24:13.0412", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:24:13.0412", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:24:13.0412", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:24:13.0592", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:24:13.0592", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:24:13.0592", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 9.1696ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 9.1696, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:24:13.0592", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:24:13.0592", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 11.4960ms", "ElapsedMilliseconds": 11.496, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:24:27.4561", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:24:27.4561", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:24:27.4561", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 204 - - 1.0861ms", "ElapsedMilliseconds": 1.0861, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:24:27.4692", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:24:27.4692", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:24:27.4692", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:24:27.4692", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:24:27.4777", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:24:27.4777", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:24:27.4777", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:24:27.4937", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:24:27.4937", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:24:27.4937", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:24:27.4937", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 29.1101ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 29.1101, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:24:27.4937", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:24:27.4937", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 31.0909ms", "ElapsedMilliseconds": 31.0909, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:24:30.3194", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:24:30.3194", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:24:30.3194", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:24:30.3194", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:24:30.3194", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - 204 - - 2.2526ms", "ElapsedMilliseconds": 2.2526, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:24:30.3194", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 2.5930ms", "ElapsedMilliseconds": 2.593, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:24:30.3405", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:24:30.3405", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:24:30.3405", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:24:30.3405", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:24:30.3405", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:24:30.3405", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:24:30.3405", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:24:30.3405", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:24:30.3405", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:24:30.3554", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:24:30.3554", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:24:30.3554", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 12.6836ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 12.6836, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:24:30.3554", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:24:30.3554", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 14.2905ms", "ElapsedMilliseconds": 14.2905, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:24:30.4154", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "2", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:24:30.4154", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:24:30.4154", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:24:30.4154", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:24:30.4154", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:24:30.4154", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 84.7873ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 84.7873, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:24:30.4154", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:24:30.4154", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 86.4140ms", "ElapsedMilliseconds": 86.414, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:24:38.9389", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:24:38.9389", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:24:38.9389", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.3950ms", "ElapsedMilliseconds": 1.395, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:24:39.2190", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:24:39.2190", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:24:39.2190", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:24:39.2190", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:24:39.2269", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:24:39.2269", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:24:39.2269", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 6.6031ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 6.6031, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:24:39.2269", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:24:39.2269", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.2682ms", "ElapsedMilliseconds": 9.2682, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:25:38.8796", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:25:38.8875", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:25:38.8875", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 10.6266ms", "ElapsedMilliseconds": 10.6266, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:25:38.8875", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:25:38.8875", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:25:38.8875", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:25:38.8875", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:25:38.9304", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:25:38.9304", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:25:38.9304", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 34.0413ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 34.0413, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:25:38.9304", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:25:38.9304", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 37.0086ms", "ElapsedMilliseconds": 37.0086, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:25:45.8399", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:25:45.8399", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:25:45.8399", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.7928ms", "ElapsedMilliseconds": 1.7928, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:25:45.8534", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:25:45.8534", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:25:45.8534", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:25:45.8534", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:25:45.8534", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:25:45.8534", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:25:45.8534", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.6964ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.6964, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:25:45.8534", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:25:45.8534", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 11.8495ms", "ElapsedMilliseconds": 11.8495, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:26:48.2678", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:26:48.2678", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:26:48.2678", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.0433ms", "ElapsedMilliseconds": 1.0433, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:26:48.2802", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:26:48.2802", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:26:48.3468", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:26:48.3468", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:26:48.3523", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:26:48.3523", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:26:48.3523", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.5923ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.5923, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:26:48.3523", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:26:48.3523", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 73.1506ms", "ElapsedMilliseconds": 73.1506, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:26:52.9809", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:26:52.9809", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:26:52.9809", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:26:52.9809", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:26:52.9809", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:26:52.9809", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:26:52.9809", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.5613ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.5613, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:26:52.9809", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:26:52.9809", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.8068ms", "ElapsedMilliseconds": 7.8068, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:26:55.9350", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:26:55.9350", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:26:55.9350", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.1884ms", "ElapsedMilliseconds": 1.1884, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:26:55.9515", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:26:55.9515", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:26:55.9515", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:26:55.9515", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:26:55.9515", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:26:55.9515", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:26:55.9515", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.3183ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.3183, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:26:55.9515", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:26:55.9515", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 6.7320ms", "ElapsedMilliseconds": 6.732, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:27:01.8713", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:27:01.8713", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:27:01.8713", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.4223ms", "ElapsedMilliseconds": 1.4223, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:27:01.8713", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:27:01.8713", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:27:01.8713", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:27:01.8713", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:27:01.8845", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:27:01.8845", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:27:01.8845", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.8973ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.8973, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:27:01.8845", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:27:01.8845", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.3540ms", "ElapsedMilliseconds": 7.354, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:27:03.7985", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:27:03.7985", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:27:03.7985", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:27:03.7985", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:27:03.8055", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:27:03.8055", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:27:03.8055", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.939ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.939, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:27:03.8055", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:27:03.8055", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.7552ms", "ElapsedMilliseconds": 7.7552, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:32:55.4458", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:32:55.4458", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:32:55.4458", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:32:55.4458", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:32:55.4458", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 10.8585ms", "ElapsedMilliseconds": 10.8585, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:32:55.4458", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 7.2723ms", "ElapsedMilliseconds": 7.2723, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:32:55.4650", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:32:55.4650", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:32:55.4650", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:32:55.4650", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:32:55.4650", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:32:55.4650", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:32:55.4650", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:32:55.4650", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:32:55.4650", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:32:55.4650", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 2.1325ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 2.1325, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:32:55.4650", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:32:55.4650", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 3.9398ms", "ElapsedMilliseconds": 3.9398, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:32:55.5141", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:32:55.5141", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "2", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:32:55.5263", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:32:55.5263", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:32:55.5263", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:32:55.5378", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:32:55.5378", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 69.6795ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 69.6795, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:32:55.5378", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:32:55.5378", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 71.0731ms", "ElapsedMilliseconds": 71.0731, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:33:00.6562", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:33:00.6562", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:33:00.6562", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 204 - - 1.2323ms", "ElapsedMilliseconds": 1.2323, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:33:00.6690", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:33:00.6690", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:33:00.6690", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:33:00.6690", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:33:00.6690", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:00.6816", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:00.6816", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:00.6816", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:00.6964", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:00.6964", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:33:00.6964", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 27.465ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 27.465, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:33:00.6964", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:33:00.6964", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 28.9097ms", "ElapsedMilliseconds": 28.9097, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:33:01.7835", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:33:01.7835", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:33:01.7835", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 204 - - 1.0453ms", "ElapsedMilliseconds": 1.0453, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:33:01.7934", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:33:01.7934", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:33:01.7934", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:33:01.7934", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:33:01.7934", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:01.8055", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:01.8055", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:01.8055", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:01.8212", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:01.8212", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:33:01.8212", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 27.5983ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 27.5983, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:33:01.8212", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:33:01.8212", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 29.1749ms", "ElapsedMilliseconds": 29.1749, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:33:03.3153", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:33:03.3153", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:33:03.3153", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:33:03.3153", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:33:03.3232", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:03.3232", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:03.3232", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:03.3392", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:03.3392", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:03.3392", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:33:03.3392", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 27.8841ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 27.8841, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:33:03.3392", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:33:03.3392", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 30.1134ms", "ElapsedMilliseconds": 30.1134, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:33:04.0297", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:33:04.0297", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:33:04.0297", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 0.4998ms", "ElapsedMilliseconds": 0.4998, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:33:04.0297", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:33:04.0297", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:33:04.0297", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:33:04.0297", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:33:04.0415", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:04.0415", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:04.0532", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:04.0532", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:04.0532", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:04.0532", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:33:04.0532", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 28.179ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 28.179, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:33:04.0532", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:33:04.0532", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 29.5877ms", "ElapsedMilliseconds": 29.5877, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:33:05.8715", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:33:05.8715", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:33:05.8715", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 204 - - 1.1541ms", "ElapsedMilliseconds": 1.1541, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:33:05.8884", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:33:05.8884", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:33:05.8884", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:33:05.8884", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:33:05.8884", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:05.9001", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:05.9001", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:05.9001", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:05.9149", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:05.9149", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:33:05.9149", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 26.4362ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 26.4362, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:33:05.9149", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:33:05.9149", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 27.7656ms", "ElapsedMilliseconds": 27.7656, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:33:07.3045", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:33:07.3045", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:33:07.3045", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 204 - - 1.1073ms", "ElapsedMilliseconds": 1.1073, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:33:07.3045", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:33:07.3045", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:33:07.3045", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:33:07.3045", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:33:07.3228", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:07.3228", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:07.3228", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:07.3373", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:07.3373", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:07.3373", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:33:07.3373", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 26.1925ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 26.1925, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:33:07.3373", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:33:07.3373", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 27.8822ms", "ElapsedMilliseconds": 27.8822, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:33:08.6346", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:33:08.6346", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:33:08.6346", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - 204 - - 1.1015ms", "ElapsedMilliseconds": 1.1015, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:33:08.6346", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:33:08.6346", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:33:08.6346", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:33:08.6346", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:33:08.6512", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:08.6512", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:08.6512", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:08.6669", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:08.6669", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:08.6669", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:33:08.6669", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 28.3855ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 28.3855, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:33:08.6669", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:33:08.6669", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 30.0349ms", "ElapsedMilliseconds": 30.0349, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:33:10.2860", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=5&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:33:10.2860", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:33:10.2860", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=5&PageSize=5&sortBy=status - 204 - - 0.8259ms", "ElapsedMilliseconds": 0.8259, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:33:10.2935", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=5&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:33:10.2935", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:33:10.2935", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:33:10.2935", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:33:10.2935", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:10.3065", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:10.3065", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:10.3065", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:10.3219", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:33:10.3219", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:33:10.3219", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 28.0644ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 28.0644, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:33:10.3219", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:33:10.3219", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=5&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 29.6882ms", "ElapsedMilliseconds": 29.6882, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:33:13.0626", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/edit - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:33:13.0626", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:33:13.0626", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/edit - 204 - - 1.4989ms", "ElapsedMilliseconds": 1.4989, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:33:13.0734", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://192.168.0.105:5274/api/Ticket/edit - application/json 26", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 26, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:33:13.0734", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:33:13.0734", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:33:13.0734", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:34:07.4560", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-15 17:34:07.6437", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-15 17:34:07.6488", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-15 17:34:07.6488", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-15 17:34:07.6488", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-15 17:34:07.9322", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:07.9322", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:34:07.9724", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-15 17:34:07.9724", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:07.9724", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:07.9790", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 48.2119ms", "ElapsedMilliseconds": 48.2119, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:34:07.9790", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 48.2186ms", "ElapsedMilliseconds": 48.2186, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:08.0318", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:08.0318", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:34:08.0524", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:08.0524", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:08.2534", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:34:08.2534", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:34:08.2906", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:34:08.2906", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:34:08.5146", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:34:08.7514", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 236.7218ms", "ElapsedMilliseconds": 236.7218, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:34:08.7710", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:34:08.7755", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:34:08.7755", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 4.8737ms", "ElapsedMilliseconds": 4.8737, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:34:08.8488", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 73.2441ms", "ElapsedMilliseconds": 73.2441, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:34:08.9311", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:34:09.0759", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 144.8322ms", "ElapsedMilliseconds": 144.8322, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:34:09.4842", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:34:09.4842", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 1196.3549ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 1196.3549, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:34:09.4842", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:34:09.4957", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 1463.8308ms", "ElapsedMilliseconds": 1463.8308, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:34:09.8764", "level": "INFO", "message": "Executed DbCommand (32ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "32", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:09.9700", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:34:09.9700", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:34:10.0307", "level": "INFO", "message": "Executed DbCommand (9ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "9", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:10.1121", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:10.1121", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "0", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:10.1467", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:10.2740", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:34:10.2740", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 1987.3661ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 1987.3661, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:34:10.2740", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:34:10.2887", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 2256.8032ms", "ElapsedMilliseconds": 2256.8032, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:14.6406", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:14.6406", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:14.6406", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 204 - - 1.5284ms", "ElapsedMilliseconds": 1.5284, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:14.9036", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:14.9036", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:14.9207", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:34:14.9207", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:34:15.1024", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:15.1024", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:34:15.1024", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:34:15.1227", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:15.1227", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:15.1227", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:15.1227", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:15.1338", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:34:15.1338", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 212.6675ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 212.6675, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:34:15.1338", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:34:15.1338", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 231.7758ms", "ElapsedMilliseconds": 231.7758, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:15.1588", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:15.1588", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:15.1588", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 204 - - 1.0084ms", "ElapsedMilliseconds": 1.0084, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:15.1690", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:15.1690", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:15.1690", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:34:15.1690", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:34:15.1796", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:15.1796", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "2", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:15.1796", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:15.1796", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:15.1796", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:15.1796", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:34:15.1796", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 19.8317ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 19.8317, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:34:15.1796", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:34:15.1796", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 22.9748ms", "ElapsedMilliseconds": 22.9748, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:15.9581", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:15.9581", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:15.9599", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - 204 - - 1.7091ms", "ElapsedMilliseconds": 1.7091, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:15.9599", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:15.9599", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:15.9770", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:34:15.9770", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:34:15.9770", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:15.9770", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:15.9770", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:15.9915", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:15.9915", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:15.9915", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:34:15.9915", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 18.0765ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 18.0765, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:34:15.9915", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:34:15.9915", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 21.1600ms", "ElapsedMilliseconds": 21.16, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:17.0959", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=5&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:17.0959", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:17.0959", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=5&PageSize=5&sortBy=status - 204 - - 1.0839ms", "ElapsedMilliseconds": 1.0839, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:17.1427", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=5&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:17.1427", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:17.1427", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:34:17.1427", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:34:17.1501", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:17.1501", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:17.1501", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:17.1501", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:17.1501", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:17.1501", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:34:17.1501", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 12.7706ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 12.7706, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:34:17.1501", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:34:17.1501", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=5&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 15.5682ms", "ElapsedMilliseconds": 15.5682, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:26.6627", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/edit - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:34:26.6636", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:26.6636", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/edit - 204 - - 1.2137ms", "ElapsedMilliseconds": 1.2137, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:34:26.7333", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://192.168.0.105:5274/api/Ticket/edit - application/json 26", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 26, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:34:26.7333", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:26.7333", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:34:26.7333", "level": "INFO", "message": "Route matched with {action = \"EditTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"EditTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult EditTicketStatus(Models.DTOs.Tickets.Edit.TicketEditStatusDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:34:26.8464", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__request_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:27.1151", "level": "INFO", "message": "Executed DbCommand (5ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "elapsed": "5", "parameters": "@p7='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Ticket\" SET \"CreatedAt\" = @p0, \"Description\" = @p1, \"LicensesId\" = @p2, \"Subject\" = @p3, \"TicketStatus\" = @p4, \"TicketType\" = @p5, \"UserId\" = @p6\r\nWHERE \"Id\" = @p7;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:27.1327", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Edit.TicketEditStatusResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:34:27.1327", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.EditTicketStatus (Api) in 396.4958ms", "ActionName": "Api.Controllers.TicketController.EditTicketStatus (Api)", "ElapsedMilliseconds": 396.4958, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:34:27.1327", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.EditTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.EditTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:34:27.1327", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://192.168.0.105:5274/api/Ticket/edit - 200 - application/json;+charset=utf-8 403.3010ms", "ElapsedMilliseconds": 403.301, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/edit", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:34:33.9842", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:34:33.9842", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:33.9842", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:33.9842", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:33.9842", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 1.4786ms", "ElapsedMilliseconds": 1.4786, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:34:33.9842", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 1.3799ms", "ElapsedMilliseconds": 1.3799, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:34.0168", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:34:34.0168", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:34.0168", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:34.0168", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:34:34.0168", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:34.0168", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:34:34.0168", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:34:34.0168", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:34:34.0168", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:34:34.0168", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 2.2512ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 2.2512, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:34:34.0168", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:34:34.0168", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 4.6102ms", "ElapsedMilliseconds": 4.6102, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:34:34.0225", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:34.0225", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:34.0225", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:34.0225", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:34.0225", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:34.0225", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:34:34.0225", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 12.3139ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 12.3139, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:34:34.0225", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:34:34.0225", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 14.0747ms", "ElapsedMilliseconds": 14.0747, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:37.2559", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:37.2575", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:37.2575", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 204 - - 2.1379ms", "ElapsedMilliseconds": 2.1379, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:37.2575", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:37.2575", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:37.2575", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:34:37.2575", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:34:37.2575", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:37.2575", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:37.2732", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:37.2732", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:37.2732", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:37.2732", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:34:37.2732", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 10.3994ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 10.3994, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:34:37.2732", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:34:37.2732", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 12.3619ms", "ElapsedMilliseconds": 12.3619, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:38.0784", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:38.0784", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:38.0784", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 204 - - 0.7927ms", "ElapsedMilliseconds": 0.7927, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:38.0874", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:38.0874", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:38.0874", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:34:38.0874", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:34:38.0874", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:38.0874", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:38.0874", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:38.0874", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:38.0874", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:38.0874", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:34:38.1006", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 11.2247ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 11.2247, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:34:38.1006", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:34:38.1006", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 13.5655ms", "ElapsedMilliseconds": 13.5655, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:38.3874", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:38.3874", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:38.3874", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - 204 - - 1.2311ms", "ElapsedMilliseconds": 1.2311, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:38.3874", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:38.3874", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:38.3874", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:34:38.3874", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:34:38.3995", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:38.3995", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:38.3995", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:38.3995", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:38.3995", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:38.3995", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:34:38.3995", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 9.0478ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 9.0478, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:34:38.3995", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:34:38.3995", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 10.9714ms", "ElapsedMilliseconds": 10.9714, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:39.7210", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=5&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:39.7210", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:39.7210", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=5&PageSize=5&sortBy=status - 204 - - 1.0112ms", "ElapsedMilliseconds": 1.0112, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:39.7288", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=5&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:39.7288", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:39.7288", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:34:39.7288", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:34:39.7288", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:39.7288", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:39.7288", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:39.7288", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:39.7288", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:39.7288", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:34:39.7288", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 8.9249ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 8.9249, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:34:39.7288", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:34:39.7288", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=5&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 10.6403ms", "ElapsedMilliseconds": 10.6403, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:54.9621", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:54.9621", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:54.9621", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - 204 - - 1.6786ms", "ElapsedMilliseconds": 1.6786, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:54.9621", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:54.9621", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:54.9621", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:34:54.9621", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:34:54.9621", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:54.9621", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:54.9755", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:54.9755", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:54.9755", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:54.9755", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:34:54.9755", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 8.9544ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 8.9544, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:34:54.9755", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:34:54.9755", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 10.7870ms", "ElapsedMilliseconds": 10.787, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:56.9114", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:56.9114", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:56.9114", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 204 - - 1.3102ms", "ElapsedMilliseconds": 1.3102, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:56.9417", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:56.9417", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:56.9417", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:34:56.9417", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:34:56.9469", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:56.9469", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:56.9469", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:56.9469", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "2", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:56.9469", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:56.9469", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:34:56.9469", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 11.8199ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 11.8199, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:34:56.9469", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:34:56.9469", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 14.0681ms", "ElapsedMilliseconds": 14.0681, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:58.1602", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:58.1602", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:58.1602", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 204 - - 1.1819ms", "ElapsedMilliseconds": 1.1819, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:58.1676", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:58.1676", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:58.1676", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:34:58.1676", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:34:58.1676", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:58.1676", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:58.1676", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:58.1676", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:58.1676", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:58.1676", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:34:58.1783", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 9.26ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 9.26, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:34:58.1783", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:34:58.1783", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 11.0745ms", "ElapsedMilliseconds": 11.0745, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:59.1597", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:59.1597", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:59.1597", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 0.3930ms", "ElapsedMilliseconds": 0.393, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:34:59.1792", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:34:59.1792", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:34:59.1792", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:34:59.1792", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:34:59.1792", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:59.1792", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:59.1792", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:59.1792", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:59.2017", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:34:59.2017", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:34:59.2017", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 20.5897ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 20.5897, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:34:59.2017", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:34:59.2017", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 23.4994ms", "ElapsedMilliseconds": 23.4994, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:35:07.1386", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:35:07.1386", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:35:07.1386", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 204 - - 1.0089ms", "ElapsedMilliseconds": 1.0089, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:35:07.1523", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:35:07.1523", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:35:07.1523", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:35:07.1523", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:35:07.1523", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:07.1523", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:07.1523", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:07.1523", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:07.1523", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:07.1523", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:35:07.1523", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 7.9823ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 7.9823, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:35:07.1523", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:35:07.1523", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 9.7886ms", "ElapsedMilliseconds": 9.7886, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:35:08.1603", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:35:08.1603", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:35:08.1603", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 204 - - 0.7771ms", "ElapsedMilliseconds": 0.7771, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:35:08.1787", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:35:08.1787", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:35:08.1787", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:35:08.1787", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:35:08.1787", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:08.1787", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:08.1787", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:08.1787", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:08.1787", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:08.1787", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:35:08.1787", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 8.2433ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 8.2433, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:35:08.1787", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:35:08.1787", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 10.2126ms", "ElapsedMilliseconds": 10.2126, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:35:09.0816", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:35:09.0816", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:35:09.0816", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - 204 - - 0.5091ms", "ElapsedMilliseconds": 0.5091, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:35:09.0930", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:35:09.0930", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:35:09.0930", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:35:09.0930", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:35:09.0930", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:09.0930", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:09.0930", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:09.1014", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:09.1014", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:09.1014", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:35:09.1014", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 8.2903ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 8.2903, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:35:09.1014", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:35:09.1014", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 10.3383ms", "ElapsedMilliseconds": 10.3383, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:35:10.4138", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=5&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:35:10.4138", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:35:10.4138", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=5&PageSize=5&sortBy=status - 204 - - 1.0479ms", "ElapsedMilliseconds": 1.0479, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:35:10.4138", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=5&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:35:10.4138", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:35:10.4138", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:35:10.4138", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:35:10.4138", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:10.4289", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:10.4289", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:10.4289", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:10.4289", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:10.4289", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:35:10.4289", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 7.616ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 7.616, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:35:10.4289", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:35:10.4289", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=5&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 9.5640ms", "ElapsedMilliseconds": 9.564, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:35:26.6849", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:35:26.6849", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:35:26.6849", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - 204 - - 1.2790ms", "ElapsedMilliseconds": 1.279, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:35:26.6849", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:35:26.6849", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:35:26.6940", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:35:26.6940", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:35:26.6940", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:26.6940", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:26.6940", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:26.6940", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:26.6940", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:26.6940", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:35:26.6940", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 7.6558ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 7.6558, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:35:26.6940", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:35:26.6940", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 10.1500ms", "ElapsedMilliseconds": 10.15, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:35:26.7983", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:35:26.7983", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:35:26.7983", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 204 - - 0.4200ms", "ElapsedMilliseconds": 0.42, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:35:26.8082", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:35:26.8082", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:35:26.8082", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:35:26.8082", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:35:26.8082", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:26.8082", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "0", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:26.8082", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:26.8082", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "0", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:26.8082", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:26.8082", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:35:26.8082", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 6.2919ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 6.2919, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:35:26.8082", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:35:26.8082", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 8.2877ms", "ElapsedMilliseconds": 8.2877, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:35:27.4223", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:35:27.4223", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:35:27.4223", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 204 - - 0.5168ms", "ElapsedMilliseconds": 0.5168, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:35:27.4512", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:35:27.4512", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:35:27.4512", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:35:27.4512", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:35:27.4512", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:27.4512", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:27.4512", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:27.4512", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:27.4512", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:27.4512", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:35:27.4512", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 7.2614ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 7.2614, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:35:27.4512", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:35:27.4600", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 8.7762ms", "ElapsedMilliseconds": 8.7762, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:35:28.0013", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:35:28.0013", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:35:28.0013", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 1.0799ms", "ElapsedMilliseconds": 1.0799, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:35:28.0191", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:35:28.0191", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:35:28.0191", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:35:28.0191", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:35:28.0232", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:28.0232", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:28.0232", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:28.0232", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:28.0232", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:35:28.0232", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:35:28.0232", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 7.7008ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 7.7008, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:35:28.0232", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:35:28.0232", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 9.3949ms", "ElapsedMilliseconds": 9.3949, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:36:29.1069", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:36:29.1069", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:36:29.1069", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 204 - - 1.1130ms", "ElapsedMilliseconds": 1.113, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:36:29.1069", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:36:29.1069", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:36:29.1069", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:36:29.1069", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:36:29.1178", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:29.1178", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:29.1178", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:29.1178", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:29.1178", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:29.1178", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:36:29.1178", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 8.3601ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 8.3601, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:36:29.1178", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:36:29.1178", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 9.9670ms", "ElapsedMilliseconds": 9.967, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:36:29.8252", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:36:29.8252", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:36:29.8252", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 204 - - 0.4520ms", "ElapsedMilliseconds": 0.452, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:36:29.8519", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:36:29.8519", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:36:29.8519", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:36:29.8519", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:36:29.8519", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:29.8519", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:29.8519", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:29.8519", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:29.8519", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:29.8519", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:36:29.8519", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 7.5187ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 7.5187, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:36:29.8519", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:36:29.8519", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 10.0378ms", "ElapsedMilliseconds": 10.0378, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:36:30.4426", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:36:30.4443", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:36:30.4443", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - 204 - - 1.8697ms", "ElapsedMilliseconds": 1.8697, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:36:30.4668", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:36:30.4668", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:36:30.4668", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:36:30.4668", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:36:30.4668", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:30.4668", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:30.4668", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:30.4668", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:30.4668", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:30.4758", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:36:30.4758", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 7.6354ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 7.6354, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:36:30.4758", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:36:30.4758", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=4&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 9.6856ms", "ElapsedMilliseconds": 9.6856, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:36:31.4702", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=5&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:36:31.4702", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:36:31.4702", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=5&PageSize=5&sortBy=status - 204 - - 1.1361ms", "ElapsedMilliseconds": 1.1361, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:36:31.6085", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=5&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:36:31.6085", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:36:31.6085", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:36:31.6085", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:36:31.6085", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:31.6085", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:31.6085", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:31.6085", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "0", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:31.6085", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:31.6085", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:36:31.6085", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 5.755ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 5.755, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:36:31.6085", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:36:31.6085", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=5&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 7.2764ms", "ElapsedMilliseconds": 7.2764, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:36:53.4678", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:36:53.4678", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:36:53.4678", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Product/GetAllProducts - 204 - - 1.1542ms", "ElapsedMilliseconds": 1.1542, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:36:53.4878", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:36:53.4878", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:36:53.4921", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:36:53.4921", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:36:53.4921", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-15 17:36:53.5332", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:53.5332", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:36:53.5332", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 40.3246ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 40.3246, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:36:53.5332", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:36:53.5332", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 48.9601ms", "ElapsedMilliseconds": 48.9601, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:36:58.3812", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:36:58.3821", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:36:58.3821", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.0694ms", "ElapsedMilliseconds": 1.0694, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:36:58.3821", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:36:58.3821", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:36:58.3821", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:36:58.3821", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:36:58.4034", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:36:58.4034", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:36:58.4034", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 16.4206ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 16.4206, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:36:58.4034", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:36:58.4034", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 20.2553ms", "ElapsedMilliseconds": 20.2553, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:37:33.4786", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:37:33.4786", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:37:33.4786", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.3201ms", "ElapsedMilliseconds": 1.3201, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:37:33.4786", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:37:33.4786", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:37:33.4786", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:37:33.4786", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:37:33.5046", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:37:33.5046", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:37:33.5046", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 15.0419ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 15.0419, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:37:33.5046", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:37:33.5046", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 17.1890ms", "ElapsedMilliseconds": 17.189, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:41:14.0585", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:41:14.0585", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:41:14.0585", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 0.8929ms", "ElapsedMilliseconds": 0.8929, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:41:14.0585", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:41:14.0585", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:41:14.0585", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 0.4988ms", "ElapsedMilliseconds": 0.4988, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:41:14.0585", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:41:14.0585", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:41:14.0585", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:41:14.0585", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:41:14.0585", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:41:14.0585", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:41:14.0585", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:41:14.0585", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:41:14.0585", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:41:14.0696", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 1.4517ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 1.4517, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:41:14.0696", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:41:14.0696", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 2.8011ms", "ElapsedMilliseconds": 2.8011, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:41:14.1117", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:41:14.1117", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:41:14.1117", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:41:14.1117", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:41:14.1163", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:41:14.1163", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:41:14.1163", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 50.1491ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 50.1491, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:41:14.1163", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:41:14.1163", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 52.7303ms", "ElapsedMilliseconds": 52.7303, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:41:28.4153", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:41:28.4153", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:41:28.4153", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 204 - - 1.3451ms", "ElapsedMilliseconds": 1.3451, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:41:28.4153", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:41:28.4153", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:41:28.4153", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Ticket/status - 204 - - 0.1719ms", "ElapsedMilliseconds": 0.1719, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:41:28.4153", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:41:28.4153", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:41:28.4153", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:41:28.4153", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:41:28.4153", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:41:28.4153", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:41:28.4153", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:41:28.4153", "level": "INFO", "message": "Route matched with {action = \"GetTicketStatus\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketStatus\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketStatus()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:41:28.4153", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:41:28.4153", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketStatus (Api) in 1.026ms", "ActionName": "Api.Controllers.TicketController.GetTicketStatus (Api)", "ElapsedMilliseconds": 1.026, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:41:28.4153", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketStatus (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketStatus (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:41:28.4153", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/status - 200 - application/json;+charset=utf-8 2.1677ms", "ElapsedMilliseconds": 2.1677, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/status", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:41:28.4290", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:41:28.4290", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:41:28.4290", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:41:28.4290", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:41:28.4290", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:41:28.4290", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:41:28.4290", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 7.5092ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 7.5092, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:41:28.4290", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:41:28.4290", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 9.3272ms", "ElapsedMilliseconds": 9.3272, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:43:39.3229", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:43:39.3229", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:43:39.3229", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 0.6798ms", "ElapsedMilliseconds": 0.6798, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:43:39.3229", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:43:39.3229", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:43:39.3229", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:43:39.3346", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:43:39.3346", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:43:39.3346", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:43:39.3346", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 8.6174ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 8.6174, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:43:39.3346", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:43:39.3346", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 10.5943ms", "ElapsedMilliseconds": 10.5943, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:43:55.1786", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:43:55.1796", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:43:55.1796", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.2837ms", "ElapsedMilliseconds": 1.2837, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:43:55.1796", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:43:55.1796", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:43:55.1796", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:43:55.1796", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:43:55.1796", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:43:55.1796", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:43:55.1796", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 2.7794ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 2.7794, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:43:55.1796", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:43:55.1796", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 3.9782ms", "ElapsedMilliseconds": 3.9782, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:44:20.1743", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:44:20.1743", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:44:20.1743", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 0.9684ms", "ElapsedMilliseconds": 0.9684, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:44:20.4140", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:44:20.4140", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:44:20.4140", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:44:20.4140", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:44:20.4140", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:20.4140", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:44:20.4140", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 2.6324ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 2.6324, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:44:20.4140", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:44:20.4140", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 4.4450ms", "ElapsedMilliseconds": 4.445, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:44:27.9147", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:44:27.9147", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:44:27.9147", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.1163ms", "ElapsedMilliseconds": 1.1163, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:44:27.9460", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:44:27.9460", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:44:27.9460", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:44:27.9460", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:44:27.9460", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:27.9460", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:44:27.9460", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 2.3488ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 2.3488, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:44:27.9460", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:44:27.9460", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 3.5102ms", "ElapsedMilliseconds": 3.5102, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:44:40.8270", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-15 17:44:40.9172", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-15 17:44:40.9172", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-15 17:44:40.9172", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-15 17:44:40.9172", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-15 17:44:41.7645", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:44:41.9072", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-15 17:44:41.9935", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 231.8503ms", "ElapsedMilliseconds": 231.8503, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:44:42.0097", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:44:42.0097", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:44:42.0097", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.5012ms", "ElapsedMilliseconds": 2.5012, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:44:42.0459", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 35.3344ms", "ElapsedMilliseconds": 35.3344, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:44:42.1785", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:44:42.3306", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 152.0693ms", "ElapsedMilliseconds": 152.0693, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:44:45.3333", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:44:45.3398", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:44:45.3398", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 204 - - 8.3013ms", "ElapsedMilliseconds": 8.3013, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:44:45.3702", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:44:45.3702", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:44:45.4684", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:44:45.4897", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:44:46.4000", "level": "INFO", "message": "Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "14", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:46.4462", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:44:46.4462", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:44:46.4993", "level": "INFO", "message": "Executed DbCommand (7ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "7", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:46.5459", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:46.5459", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:46.5549", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:46.6117", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:46.6217", "level": "WARN", "message": "The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.", "EventId": 10103, "EventName": "Microsoft.EntityFrameworkCore.Query.FirstWithoutOrderByAndFilterWarning" }
{ "time": "2024-04-15 17:44:46.6217", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:46.7349", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "4", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:46.7442", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:46.7442", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:46.7442", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:44:46.7623", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 1268.8653ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 1268.8653, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:44:46.7623", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:44:46.7623", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 1400.8491ms", "ElapsedMilliseconds": 1400.8491, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:44:50.1579", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:44:50.1579", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:44:50.1671", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:44:50.1671", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:44:50.3051", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:50.3051", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:50.3051", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:50.3051", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:50.3051", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:50.3051", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:50.3051", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:50.3223", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:50.3223", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:50.3223", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:44:50.3223", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:44:50.3223", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 161.9167ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 161.9167, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:44:50.3223", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:44:50.3223", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 172.8092ms", "ElapsedMilliseconds": 172.8092, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:45:15.6244", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:45:15.6244", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:45:15.6244", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 204 - - 1.8952ms", "ElapsedMilliseconds": 1.8952, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:45:15.6535", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:45:15.6535", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:45:15.6667", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:45:15.6667", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:45:15.7213", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:15.7257", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:45:15.7257", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:45:15.7257", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:15.7257", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:15.7257", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:15.7431", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:15.7431", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:15.7431", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:15.7431", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:15.7431", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:15.7580", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:15.7580", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:45:15.7580", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 91.9032ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 91.9032, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:45:15.7580", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:45:15.7580", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 106.2817ms", "ElapsedMilliseconds": 106.2817, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:45:15.9115", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:45:15.9115", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:45:15.9115", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - 204 - - 0.6964ms", "ElapsedMilliseconds": 0.6964, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:45:15.9331", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:45:15.9331", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:45:15.9331", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:45:15.9331", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:45:15.9331", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:15.9331", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:15.9331", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:15.9445", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:15.9445", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:15.9445", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:15.9445", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:15.9445", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:15.9445", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:45:15.9445", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 20.9665ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 20.9665, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:45:15.9445", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:45:15.9445", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 24.0039ms", "ElapsedMilliseconds": 24.0039, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:45:23.2974", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:45:23.2974", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:45:23.2974", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.0549ms", "ElapsedMilliseconds": 1.0549, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:45:23.3054", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:45:23.3054", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:45:23.3054", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:45:23.3054", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:45:23.3564", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:23.3564", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:45:23.3564", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 49.3689ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 49.3689, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:45:23.3564", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:45:23.3564", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 55.7178ms", "ElapsedMilliseconds": 55.7178, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:45:34.0379", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:45:34.0379", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:45:34.0379", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.8716ms", "ElapsedMilliseconds": 1.8716, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:45:34.0379", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:45:34.0379", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:45:34.0379", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:45:34.0379", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:45:34.0596", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:34.0596", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:45:34.0596", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 11.6644ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 11.6644, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:45:34.0596", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:45:34.0596", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 13.6153ms", "ElapsedMilliseconds": 13.6153, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:45:41.9069", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-15 17:45:42.1208", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-15 17:45:42.1208", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-15 17:45:42.1208", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-15 17:45:42.1208", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-15 17:45:42.8214", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:45:42.9969", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-15 17:45:43.1203", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:45:43.1203", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 306.1058ms", "ElapsedMilliseconds": 306.1058, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:45:43.1203", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:45:43.1203", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.5514ms", "ElapsedMilliseconds": 3.5514, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:45:43.1596", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 36.7900ms", "ElapsedMilliseconds": 36.79, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:45:43.4084", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:45:43.6108", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 202.3428ms", "ElapsedMilliseconds": 202.3428, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:45:50.0245", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:45:50.0382", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:45:50.0382", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=4&PageSize=5&sortBy=status - 204 - - 17.9590ms", "ElapsedMilliseconds": 17.959, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:45:50.0582", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-15 17:45:50.0582", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:45:50.4157", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:45:50.4889", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:45:52.0811", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:45:52.0868", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:45:52.0868", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 6.8423ms", "ElapsedMilliseconds": 6.8423, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:45:52.1271", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:45:52.1271", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:45:52.1368", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:45:52.1558", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:45:54.0496", "level": "INFO", "message": "Executed DbCommand (75ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "75", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:54.0496", "level": "INFO", "message": "Executed DbCommand (75ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "75", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:54.2189", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:45:54.2323", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:45:54.2323", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-15 17:45:54.2598", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 2085.0636ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 2085.0636, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:45:54.2598", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:45:54.2877", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 2160.6467ms", "ElapsedMilliseconds": 2160.6467, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:45:54.3738", "level": "INFO", "message": "Executed DbCommand (22ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "22", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:54.5814", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:54.5888", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:45:54.5888", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:45:54.6125", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 4122.9418ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 4122.9418, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:45:54.6125", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:45:54.6125", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=4&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 4555.9347ms", "ElapsedMilliseconds": 4555.9347, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-15 17:46:02.0841", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:46:02.0873", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:46:02.0873", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 3.9683ms", "ElapsedMilliseconds": 3.9683, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:46:02.1196", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:46:02.1196", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:46:02.1196", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:46:02.1196", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:46:02.3235", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:46:02.3235", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:46:02.3235", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 195.0396ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 195.0396, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:46:02.3235", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:46:02.3235", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 206.1327ms", "ElapsedMilliseconds": 206.1327, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:46:08.2137", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:46:08.2137", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:46:08.2137", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 2.9562ms", "ElapsedMilliseconds": 2.9562, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:46:08.2137", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:46:08.2254", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:46:08.2254", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:46:08.2254", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:46:08.2422", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:46:08.2422", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:46:08.2422", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 16.5914ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 16.5914, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:46:08.2422", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:46:08.2422", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 19.0097ms", "ElapsedMilliseconds": 19.0097, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:46:09.8499", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:46:09.8510", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:46:09.8510", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:46:09.8510", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:46:09.8510", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:46:09.8664", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:46:09.8664", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 14.4459ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 14.4459, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:46:09.8664", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:46:09.8664", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 18.2260ms", "ElapsedMilliseconds": 18.226, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:46:26.1206", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:46:26.1206", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:46:26.1206", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.3988ms", "ElapsedMilliseconds": 1.3988, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:46:26.1350", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:46:26.1350", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:46:26.1350", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:46:26.1350", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:46:26.1350", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:46:26.1350", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:46:26.1350", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 8.5073ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 8.5073, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:46:26.1350", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:46:26.1350", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 11.3859ms", "ElapsedMilliseconds": 11.3859, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:46:37.0719", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:46:37.0719", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:46:37.0719", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.3731ms", "ElapsedMilliseconds": 1.3731, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:46:37.0719", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:46:37.0719", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:46:37.0719", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:46:37.0719", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:46:37.0907", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:46:37.0907", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:46:37.0907", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 9.0429ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 9.0429, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:46:37.0907", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:46:37.0907", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 12.2248ms", "ElapsedMilliseconds": 12.2248, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:46:39.0187", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:46:39.0187", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:46:39.0187", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:46:39.0187", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:46:39.0297", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:46:39.0297", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:46:39.0297", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 8.8725ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 8.8725, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:46:39.0297", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:46:39.0297", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 13.1420ms", "ElapsedMilliseconds": 13.142, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:46:48.8398", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:46:48.8398", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:46:48.8398", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 3.5895ms", "ElapsedMilliseconds": 3.5895, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:46:48.8533", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:46:48.8533", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:46:48.8533", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:46:48.8533", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:46:48.8533", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:46:48.8533", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:46:48.8533", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 9.4051ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 9.4051, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:46:48.8533", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:46:48.8533", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 12.1988ms", "ElapsedMilliseconds": 12.1988, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:46:59.9940", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:46:59.9940", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:46:59.9940", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.9109ms", "ElapsedMilliseconds": 1.9109, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:47:00.0088", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:47:00.0088", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:47:00.0088", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:47:00.0088", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:47:00.0088", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:47:00.0088", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:47:00.0088", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 9.9574ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 9.9574, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:47:00.0088", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:47:00.0088", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 12.1152ms", "ElapsedMilliseconds": 12.1152, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:47:09.3074", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:47:09.3074", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:47:09.3074", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 2.2566ms", "ElapsedMilliseconds": 2.2566, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:47:09.3928", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:47:09.3928", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:47:09.3928", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:47:09.3928", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:47:09.4035", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:47:09.4035", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:47:09.4035", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 9.87ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 9.87, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:47:09.4035", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:47:09.4035", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 12.5266ms", "ElapsedMilliseconds": 12.5266, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:47:10.8504", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:47:10.8514", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:47:10.8514", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:47:10.8514", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:47:10.8514", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:47:10.8514", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:47:10.8514", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.3482ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.3482, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:47:10.8514", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:47:10.8514", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 10.2399ms", "ElapsedMilliseconds": 10.2399, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:47:12.9220", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:47:12.9220", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:47:12.9220", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:47:12.9220", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:47:12.9319", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:47:12.9319", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:47:12.9319", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.5757ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.5757, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:47:12.9319", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:47:12.9319", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 11.4935ms", "ElapsedMilliseconds": 11.4935, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:47:14.8078", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:47:14.8078", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:47:14.8078", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.5432ms", "ElapsedMilliseconds": 1.5432, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:47:14.8078", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:47:14.8078", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:47:14.8078", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:47:14.8078", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:47:14.8218", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:47:14.8218", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:47:14.8218", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.0089ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.0089, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:47:14.8218", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:47:14.8218", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 8.7887ms", "ElapsedMilliseconds": 8.7887, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:47:20.8346", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:47:20.8375", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:47:20.8375", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 3.6568ms", "ElapsedMilliseconds": 3.6568, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:47:20.8375", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:47:20.8375", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:47:20.8510", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:47:20.8510", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:47:20.8510", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:47:20.8510", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:47:20.8510", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.0552ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.0552, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:47:20.8510", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:47:20.8510", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.0047ms", "ElapsedMilliseconds": 9.0047, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:47:34.9993", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:47:34.9993", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:47:34.9993", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.4341ms", "ElapsedMilliseconds": 1.4341, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:47:35.0247", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:47:35.0247", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:47:35.0247", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:47:35.0247", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:47:35.0247", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:47:35.0247", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:47:35.0247", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.4401ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.4401, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:47:35.0247", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:47:35.0247", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.7354ms", "ElapsedMilliseconds": 9.7354, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:47:37.0301", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:47:37.0301", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:47:37.0301", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:47:37.0301", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:47:37.0394", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:47:37.0394", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:47:37.0394", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.9318ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.9318, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:47:37.0394", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:47:37.0394", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 10.9389ms", "ElapsedMilliseconds": 10.9389, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:47:45.8435", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:47:45.8435", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:47:45.8435", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.8645ms", "ElapsedMilliseconds": 1.8645, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:47:45.8507", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:47:45.8507", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:47:45.8507", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:47:45.8507", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:47:45.8507", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:47:45.8507", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:47:45.8507", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.7906ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.7906, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:47:45.8507", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:47:45.8507", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.8941ms", "ElapsedMilliseconds": 9.8941, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:47:51.9796", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:47:51.9796", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:47:51.9796", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.8618ms", "ElapsedMilliseconds": 1.8618, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:47:52.1905", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:47:52.1905", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:47:52.1905", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:47:52.1905", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:47:52.1982", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:47:52.1982", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:47:52.1982", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.2079ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.2079, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:47:52.1982", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:47:52.1982", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.2491ms", "ElapsedMilliseconds": 9.2491, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:47:56.0722", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:47:56.0722", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:47:56.0722", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:47:56.0722", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:47:56.0722", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:47:56.0722", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:47:56.0722", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.2331ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.2331, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:47:56.0722", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:47:56.0722", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 10.1634ms", "ElapsedMilliseconds": 10.1634, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:48:02.1670", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:48:02.1670", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:48:02.1670", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.4087ms", "ElapsedMilliseconds": 1.4087, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:48:02.2524", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:48:02.2524", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:48:02.2524", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:48:02.2524", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:48:02.2599", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:48:02.2599", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:48:02.2599", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 6.9723ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 6.9723, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:48:02.2599", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:48:02.2599", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 8.6088ms", "ElapsedMilliseconds": 8.6088, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:48:19.1591", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:48:19.1591", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:48:19.1591", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.1755ms", "ElapsedMilliseconds": 1.1755, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:48:19.2145", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:48:19.2145", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:48:19.2145", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:48:19.2145", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:48:19.2145", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:48:19.2145", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:48:19.2145", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.8642ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.8642, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:48:19.2145", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:48:19.2145", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.9872ms", "ElapsedMilliseconds": 9.9872, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:48:22.0375", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:48:22.0392", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:48:22.0392", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:48:22.0392", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:48:22.0392", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:48:22.0392", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:48:22.0392", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.4369ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.4369, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:48:22.0392", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:48:22.0392", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 11.9813ms", "ElapsedMilliseconds": 11.9813, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:48:24.9317", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:48:24.9317", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:48:24.9317", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.7813ms", "ElapsedMilliseconds": 1.7813, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:48:24.9317", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:48:24.9317", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:48:24.9447", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:48:24.9447", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:48:24.9447", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:48:24.9447", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:48:24.9447", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 8.0829ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 8.0829, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:48:24.9447", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:48:24.9447", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 10.1546ms", "ElapsedMilliseconds": 10.1546, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:48:30.3546", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:48:30.3546", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:48:30.3546", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 2.3213ms", "ElapsedMilliseconds": 2.3213, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:48:30.3665", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:48:30.3665", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:48:30.3665", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:48:30.3665", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:48:30.3665", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:48:30.3665", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:48:30.3665", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.2521ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.2521, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:48:30.3665", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:48:30.3665", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.0964ms", "ElapsedMilliseconds": 9.0964, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:48:34.9114", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:48:34.9114", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:48:34.9144", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:48:34.9144", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:48:34.9144", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:48:34.9144", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:48:34.9144", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.5359ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.5359, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:48:34.9144", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:48:34.9144", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 11.3680ms", "ElapsedMilliseconds": 11.368, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:48:42.8089", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:48:42.8089", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:48:42.8089", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.1632ms", "ElapsedMilliseconds": 1.1632, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:48:42.8089", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:48:42.8089", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:48:42.8089", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:48:42.8089", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:48:42.8227", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:48:42.8227", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:48:42.8227", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 6.3367ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 6.3367, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:48:42.8227", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:48:42.8227", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 8.3826ms", "ElapsedMilliseconds": 8.3826, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:48:45.9113", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:48:45.9151", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:48:45.9151", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:48:45.9151", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:48:45.9151", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:48:45.9151", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:48:45.9151", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.5933ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.5933, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:48:45.9151", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:48:45.9151", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 12.9495ms", "ElapsedMilliseconds": 12.9495, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:48:47.8525", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:48:47.8525", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:48:47.8525", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:48:47.8525", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:48:47.8525", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:48:47.8525", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:48:47.8525", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 8.3483ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 8.3483, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:48:47.8525", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:48:47.8525", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 11.0247ms", "ElapsedMilliseconds": 11.0247, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:49:01.1515", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:49:01.1515", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:49:01.1515", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 2.3472ms", "ElapsedMilliseconds": 2.3472, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:49:01.2772", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:49:01.2772", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:49:01.2772", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:49:01.2772", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:49:01.2772", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:49:01.2772", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:49:01.2879", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 8.6462ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 8.6462, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:49:01.2879", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:49:01.2879", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 11.0542ms", "ElapsedMilliseconds": 11.0542, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:49:04.2265", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:49:04.2265", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:49:04.2265", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:49:04.2265", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:49:04.2265", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:49:04.2265", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:49:04.2265", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.1166ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.1166, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:49:04.2265", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:49:04.2265", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.6801ms", "ElapsedMilliseconds": 9.6801, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:49:20.9125", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:49:20.9138", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:49:20.9138", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.4403ms", "ElapsedMilliseconds": 1.4403, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:49:20.9293", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:49:20.9293", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:49:20.9293", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:49:20.9293", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:49:20.9465", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:49:20.9465", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:49:20.9465", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 16.2761ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 16.2761, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:49:20.9465", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:49:20.9465", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 18.8907ms", "ElapsedMilliseconds": 18.8907, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:49:35.1310", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:49:35.1322", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:49:35.1322", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.4796ms", "ElapsedMilliseconds": 1.4796, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:49:35.1322", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:49:35.1322", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:49:35.1322", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:49:35.1322", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:49:35.1498", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:49:35.1498", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:49:35.1498", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 8.2001ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 8.2001, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:49:35.1498", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:49:35.1498", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 12.2196ms", "ElapsedMilliseconds": 12.2196, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:49:52.9442", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:49:52.9442", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:49:52.9442", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 4.2522ms", "ElapsedMilliseconds": 4.2522, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:49:52.9442", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:49:52.9442", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:49:52.9442", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:49:52.9442", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:49:52.9656", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:49:52.9656", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:49:52.9656", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 6.9267ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 6.9267, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:49:52.9656", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:49:52.9656", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 8.5616ms", "ElapsedMilliseconds": 8.5616, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:49:55.1334", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:49:55.1334", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:49:55.1334", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:49:55.1334", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:49:55.1334", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:49:55.1334", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:49:55.1334", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.9007ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.9007, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:49:55.1334", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:49:55.1334", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 8.6918ms", "ElapsedMilliseconds": 8.6918, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:50:59.4517", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:50:59.4517", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:50:59.4517", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 13.4116ms", "ElapsedMilliseconds": 13.4116, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:50:59.4668", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:50:59.4668", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:50:59.4668", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:50:59.4668", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:50:59.5338", "level": "INFO", "message": "Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "5", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:50:59.5338", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:50:59.5338", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 64.4911ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 64.4911, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:50:59.5338", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:50:59.5338", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 67.9423ms", "ElapsedMilliseconds": 67.9423, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:51:12.0130", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - application/json 37", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": "application/json", "ContentLength": 37, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:51:12.0130", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:51:12.0130", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:51:12.0262", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:51:12.0262", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:51:12.0262", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 11.4455ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 11.4455, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:51:12.0262", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:51:12.0262", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 15.0581ms", "ElapsedMilliseconds": 15.0581, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:52:01.8790", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:52:01.8896", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:52:01.8896", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 13.2278ms", "ElapsedMilliseconds": 13.2278, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:52:01.9970", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:52:01.9970", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:52:01.9970", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:52:01.9970", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:52:01.9970", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:52:01.9970", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:52:01.9970", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.1196ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.1196, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:52:01.9970", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:52:01.9970", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.1579ms", "ElapsedMilliseconds": 9.1579, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:52:15.3552", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:52:15.3552", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:52:15.3552", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 8.5683ms", "ElapsedMilliseconds": 8.5683, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:52:15.3852", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:52:15.3852", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:52:15.3852", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:52:15.3852", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:52:15.3852", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:52:15.3852", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:52:15.3852", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 6.0213ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 6.0213, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:52:15.3852", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:52:15.3852", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.3729ms", "ElapsedMilliseconds": 7.3729, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:52:37.2374", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:52:37.2374", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:52:37.2374", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 0.5488ms", "ElapsedMilliseconds": 0.5488, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:52:37.3013", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:52:37.3013", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:52:37.3013", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:52:37.3013", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:52:37.3059", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:52:37.3059", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:52:37.3059", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 3.2305ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 3.2305, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:52:37.3059", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:52:37.3059", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 5.1009ms", "ElapsedMilliseconds": 5.1009, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:52:45.0204", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:52:45.0204", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:52:45.0204", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.2773ms", "ElapsedMilliseconds": 1.2773, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:52:45.0384", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:52:45.0384", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:52:45.0384", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:52:45.0384", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:52:45.0384", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:52:45.0384", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:52:45.0384", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 8.5537ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 8.5537, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:52:45.0384", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:52:45.0384", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 10.5496ms", "ElapsedMilliseconds": 10.5496, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:53:08.9223", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:53:08.9223", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:53:08.9282", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 6.0273ms", "ElapsedMilliseconds": 6.0273, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:53:08.9588", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:53:08.9588", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:53:08.9601", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:53:08.9601", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:53:08.9601", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:53:08.9601", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:53:08.9601", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 8.7449ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 8.7449, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:53:08.9601", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:53:08.9601", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 11.1557ms", "ElapsedMilliseconds": 11.1557, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:53:33.9175", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:53:33.9175", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:53:33.9175", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 6.8725ms", "ElapsedMilliseconds": 6.8725, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:53:33.9327", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:53:33.9327", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:53:33.9327", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:53:33.9327", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:53:33.9327", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:53:33.9327", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:53:33.9327", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.3706ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.3706, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:53:33.9327", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:53:33.9327", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.8827ms", "ElapsedMilliseconds": 9.8827, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:53:40.8359", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:53:40.8359", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:53:40.8359", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.0442ms", "ElapsedMilliseconds": 1.0442, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:53:40.8782", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:53:40.8782", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:53:40.8782", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:53:40.8782", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:53:40.8853", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:53:40.8853", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:53:40.8853", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.4683ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.4683, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:53:40.8853", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:53:40.8853", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 8.0498ms", "ElapsedMilliseconds": 8.0498, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:53:44.0584", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:53:44.0584", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:53:44.0584", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:53:44.0584", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:53:44.0584", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:53:44.0584", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:53:44.0584", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.1511ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.1511, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:53:44.0584", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:53:44.0584", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.1695ms", "ElapsedMilliseconds": 7.1695, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:54:58.9162", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:54:58.9162", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:54:58.9162", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 0.8484ms", "ElapsedMilliseconds": 0.8484, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:54:59.0400", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:54:59.0400", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:54:59.0400", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:54:59.0400", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:54:59.0572", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:54:59.0572", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:54:59.0572", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.032ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.032, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:54:59.0572", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:54:59.0572", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 19.1434ms", "ElapsedMilliseconds": 19.1434, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:55:09.4584", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:55:09.4584", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:55:09.4584", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.0886ms", "ElapsedMilliseconds": 1.0886, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:55:09.4708", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:55:09.4708", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:55:09.4708", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:55:09.4708", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:55:09.4772", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:55:09.4772", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:55:09.4772", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.4107ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.4107, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:55:09.4772", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:55:09.4772", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.1883ms", "ElapsedMilliseconds": 7.1883, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:56:14.8604", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:56:14.8604", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:56:14.8604", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 2.5922ms", "ElapsedMilliseconds": 2.5922, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:56:14.8805", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:56:14.8805", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:56:14.8805", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:56:14.8805", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:56:14.9245", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:56:14.9245", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:56:14.9245", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 43.1999ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 43.1999, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:56:14.9245", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:56:14.9245", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 44.8822ms", "ElapsedMilliseconds": 44.8822, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:56:18.1230", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:56:18.1230", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:56:18.1230", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:56:18.1230", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:56:18.1380", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:56:18.1380", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:56:18.1380", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 11.8396ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 11.8396, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:56:18.1380", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:56:18.1380", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 15.8636ms", "ElapsedMilliseconds": 15.8636, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:56:19.1535", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:56:19.1535", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:56:19.1535", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:56:19.1535", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:56:19.1535", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:56:19.1535", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:56:19.1535", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.3573ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.3573, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:56:19.1535", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:56:19.1535", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.2946ms", "ElapsedMilliseconds": 7.2946, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:56:19.8617", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:56:19.8617", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:56:19.8617", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:56:19.8617", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:56:19.8679", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:56:19.8679", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:56:19.8679", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.6274ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.6274, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:56:19.8679", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:56:19.8679", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 6.9412ms", "ElapsedMilliseconds": 6.9412, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:56:22.5222", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:56:22.5230", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:56:22.5230", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.0325ms", "ElapsedMilliseconds": 1.0325, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:56:22.5443", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:56:22.5443", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:56:22.5443", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:56:22.5443", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:56:22.5443", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:56:22.5443", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:56:22.5443", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.9505ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.9505, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:56:22.5443", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:56:22.5443", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.5977ms", "ElapsedMilliseconds": 7.5977, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:56:38.0083", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:56:38.0083", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:56:38.0083", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 0.7302ms", "ElapsedMilliseconds": 0.7302, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:56:38.0083", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:56:38.0083", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:56:38.0083", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:56:38.0083", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:56:38.0260", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:56:38.0260", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:56:38.0260", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.5781ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.5781, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:56:38.0260", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:56:38.0260", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.0181ms", "ElapsedMilliseconds": 7.0181, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:57:35.0235", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:57:35.0235", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:57:35.0235", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 2.1689ms", "ElapsedMilliseconds": 2.1689, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:57:35.0494", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:57:35.0494", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:57:35.0494", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:57:35.0494", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:57:35.0566", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:57:35.0566", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:57:35.0566", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.9959ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.9959, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:57:35.0566", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:57:35.0566", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.9703ms", "ElapsedMilliseconds": 7.9703, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:57:38.6653", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:57:38.6653", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:57:38.6653", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:57:38.6653", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:57:38.6653", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:57:38.6653", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:57:38.6653", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.3355ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.3355, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:57:38.6653", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:57:38.6653", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.1153ms", "ElapsedMilliseconds": 7.1153, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:57:55.8499", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:57:55.8505", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:57:55.8505", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 0.8470ms", "ElapsedMilliseconds": 0.847, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:57:55.8958", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:57:55.8973", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:57:55.8973", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:57:55.8973", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:57:55.9507", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:57:55.9507", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:57:55.9507", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 53.1706ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 53.1706, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:57:55.9507", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:57:55.9507", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 55.7461ms", "ElapsedMilliseconds": 55.7461, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:58:00.7672", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:58:00.7672", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:58:00.7672", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:58:00.7672", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:58:00.7827", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:58:00.7827", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:58:00.7827", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 14.2628ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 14.2628, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:58:00.7827", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:58:00.7827", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 16.6872ms", "ElapsedMilliseconds": 16.6872, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:58:31.7059", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:58:31.7059", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:58:31.7059", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 2.8330ms", "ElapsedMilliseconds": 2.833, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:58:31.7330", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:58:31.7330", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:58:31.7330", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:58:31.7330", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:58:31.7330", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:58:31.7330", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:58:31.7330", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.644ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.644, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:58:31.7330", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:58:31.7330", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.2016ms", "ElapsedMilliseconds": 7.2016, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:59:05.8462", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:59:05.8462", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:59:05.8504", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 2.6387ms", "ElapsedMilliseconds": 2.6387, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 17:59:05.8504", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 17:59:05.8504", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 17:59:05.8504", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 17:59:05.8504", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 17:59:05.8504", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 17:59:05.8504", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 17:59:05.8504", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 4.5286ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 4.5286, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 17:59:05.8504", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 17:59:05.8504", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 5.4516ms", "ElapsedMilliseconds": 5.4516, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:05:32.9114", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:05:32.9181", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:05:32.9181", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 8.6174ms", "ElapsedMilliseconds": 8.6174, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:05:32.9181", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:05:32.9181", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:05:32.9181", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:05:32.9181", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:05:32.9688", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:05:32.9688", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:05:32.9688", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 42.2835ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 42.2835, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:05:32.9688", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:05:32.9688", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 43.8664ms", "ElapsedMilliseconds": 43.8664, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:05:46.8954", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:05:46.8954", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:05:46.8954", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.0929ms", "ElapsedMilliseconds": 1.0929, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:05:46.9186", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:05:46.9186", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:05:46.9186", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:05:46.9186", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:05:46.9186", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:05:46.9186", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:05:46.9186", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 6.2705ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 6.2705, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:05:46.9186", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:05:46.9186", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.5918ms", "ElapsedMilliseconds": 7.5918, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:07:09.0734", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:07:09.0734", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:07:09.0850", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 12.5137ms", "ElapsedMilliseconds": 12.5137, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:07:09.0850", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:07:09.0850", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:07:09.0850", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:07:09.0850", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:07:09.0850", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:07:09.1002", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:07:09.1002", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.2783ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.2783, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:07:09.1002", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:07:09.1002", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 11.1798ms", "ElapsedMilliseconds": 11.1798, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:07:13.8086", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:07:13.8086", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:07:13.8211", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:07:13.8211", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:07:13.8211", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:07:13.8211", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:07:13.8211", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.2937ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.2937, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:07:13.8211", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:07:13.8211", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 21.2511ms", "ElapsedMilliseconds": 21.2511, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:07:22.8851", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:07:22.8851", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:07:22.8851", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 2.5822ms", "ElapsedMilliseconds": 2.5822, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:07:22.8851", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:07:22.8851", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:07:22.8851", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:07:22.8851", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:07:22.8999", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:07:22.8999", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:07:22.8999", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.1307ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.1307, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:07:22.8999", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:07:22.8999", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 6.3488ms", "ElapsedMilliseconds": 6.3488, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:10:46.0874", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:10:46.0874", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:10:46.0874", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 6.5808ms", "ElapsedMilliseconds": 6.5808, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:10:46.1056", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:10:46.1056", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:10:46.1056", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:10:46.1056", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:10:46.1468", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:10:46.1468", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:10:46.1472", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 40.6999ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 40.6999, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:10:46.1472", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:10:46.1472", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 41.8632ms", "ElapsedMilliseconds": 41.8632, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:11:00.9610", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:11:00.9610", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:11:00.9610", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 0.7913ms", "ElapsedMilliseconds": 0.7913, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:11:00.9610", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:11:00.9610", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:11:00.9610", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:11:00.9610", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:11:00.9610", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:11:00.9610", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:11:00.9610", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.503ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.503, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:11:00.9610", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:11:00.9753", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 6.5718ms", "ElapsedMilliseconds": 6.5718, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:11:07.9300", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:11:07.9300", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:11:07.9300", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 0.8234ms", "ElapsedMilliseconds": 0.8234, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:11:07.9588", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:11:07.9588", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:11:07.9588", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:11:07.9588", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:11:07.9643", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:11:07.9643", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:11:07.9643", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.1126ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.1126, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:11:07.9643", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:11:07.9643", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 6.2121ms", "ElapsedMilliseconds": 6.2121, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:11:10.1688", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:11:10.1688", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:11:10.1688", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:11:10.1688", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:11:10.1688", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:11:10.1688", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:11:10.1688", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.499ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.499, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:11:10.1688", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:11:10.1688", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.0394ms", "ElapsedMilliseconds": 7.0394, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:11:18.0485", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:11:18.0485", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:11:18.0485", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 0.7948ms", "ElapsedMilliseconds": 0.7948, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:11:18.0574", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:11:18.0574", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:11:18.0574", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:11:18.0574", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:11:18.0574", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:11:18.0574", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:11:18.0574", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.0644ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.0644, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:11:18.0574", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:11:18.0574", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 6.1496ms", "ElapsedMilliseconds": 6.1496, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:11:24.8055", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:11:24.8055", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:11:24.8055", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 2.1284ms", "ElapsedMilliseconds": 2.1284, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:11:24.8055", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:11:24.8055", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:11:24.8192", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:11:24.8192", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:11:24.8192", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:11:24.8192", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:11:24.8192", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.2591ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.2591, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:11:24.8192", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:11:24.8192", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 6.4128ms", "ElapsedMilliseconds": 6.4128, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:11:27.8698", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:11:27.8698", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:11:27.8698", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:11:27.8698", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:11:27.8698", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:11:27.8698", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:11:27.8698", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 4.975ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 4.975, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:11:27.8698", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:11:27.8698", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 6.7320ms", "ElapsedMilliseconds": 6.732, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:11:33.6004", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:11:33.6012", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:11:33.6012", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.0913ms", "ElapsedMilliseconds": 1.0913, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:11:33.6398", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:11:33.6398", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:11:33.6398", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:11:33.6398", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:11:33.6398", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:11:33.6398", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:11:33.6398", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.0211ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.0211, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:11:33.6398", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:11:33.6398", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 6.3041ms", "ElapsedMilliseconds": 6.3041, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:11:57.6516", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/User/AddUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/User/AddUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:11:57.6516", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:11:57.6516", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/User/AddUser - 204 - - 10.3592ms", "ElapsedMilliseconds": 10.3592, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/User/AddUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:11:57.6731", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.105:5274/api/User/AddUser - application/json 164", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 164, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/User/AddUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:11:57.6731", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:11:57.6731", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.AddUser (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.AddUser (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:11:57.6890", "level": "INFO", "message": "Route matched with {action = \"AddUser\", controller = \"User\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddUser(Models.DTOs.User.Create.UserCreateDto) on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"AddUser\", controller = \"User\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddUser(Models.DTOs.User.Create.UserCreateDto)", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:11:58.3579", "level": "INFO", "message": "Executed DbCommand (29ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "elapsed": "29", "parameters": "@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:11:58.4464", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Create.UserCreateResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Create.UserCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:11:58.4464", "level": "INFO", "message": "Executed action Api.Controllers.UserController.AddUser (Api) in 762.4315ms", "ActionName": "Api.Controllers.UserController.AddUser (Api)", "ElapsedMilliseconds": 762.4315, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:11:58.4464", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.AddUser (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.AddUser (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:11:58.4464", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.105:5274/api/User/AddUser - 200 - application/json;+charset=utf-8 783.1069ms", "ElapsedMilliseconds": 783.1069, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/User/AddUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:12:14.4320", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:12:14.4320", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:12:14.4320", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.6943ms", "ElapsedMilliseconds": 1.6943, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:12:14.4320", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:12:14.4320", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:12:14.4320", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:12:14.4320", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:12:14.4446", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:12:14.4446", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:12:14.4446", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.6933ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.6933, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:12:14.4446", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:12:14.4446", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.0853ms", "ElapsedMilliseconds": 7.0853, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:12:15.8190", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:12:15.8197", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:12:15.8197", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:12:15.8197", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:12:15.8197", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:12:15.8197", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:12:15.8197", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 4.4866ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 4.4866, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:12:15.8197", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:12:15.8197", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 6.0538ms", "ElapsedMilliseconds": 6.0538, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:12:29.1707", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:12:29.1707", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:12:29.1802", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 7.8209ms", "ElapsedMilliseconds": 7.8209, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:12:29.1802", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:12:29.1802", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:12:29.1802", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:12:29.1802", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:12:29.1802", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:12:29.1802", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:12:29.1802", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.1433ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.1433, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:12:29.1802", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:12:29.1802", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 6.3836ms", "ElapsedMilliseconds": 6.3836, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:12:32.1372", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:12:32.1372", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:12:32.1372", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:12:32.1372", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:12:32.1372", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:12:32.1372", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:12:32.1372", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 4.8736ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 4.8736, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:12:32.1372", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:12:32.1372", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 6.8567ms", "ElapsedMilliseconds": 6.8567, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:13:06.8324", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:13:06.8353", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:13:06.8353", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 8.4459ms", "ElapsedMilliseconds": 8.4459, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:13:06.9426", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:13:06.9426", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:13:06.9426", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:13:06.9426", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:13:06.9482", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:13:06.9482", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:13:06.9482", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.2175ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.2175, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:13:06.9482", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:13:06.9482", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 6.1970ms", "ElapsedMilliseconds": 6.197, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:13:15.8087", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:13:15.8087", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:13:15.8087", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.2664ms", "ElapsedMilliseconds": 1.2664, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:13:15.8087", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:13:15.8087", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:13:15.8196", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:13:15.8196", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:13:15.8196", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:13:15.8196", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:13:15.8196", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.6ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.6, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:13:15.8196", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:13:15.8196", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.2671ms", "ElapsedMilliseconds": 9.2671, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:13:20.8162", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:13:20.8162", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:13:20.8162", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:13:20.8162", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:13:20.8246", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:13:20.8246", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:13:20.8246", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 7.0628ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 7.0628, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:13:20.8246", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:13:20.8246", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 9.1217ms", "ElapsedMilliseconds": 9.1217, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:13:22.9949", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:13:22.9949", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:13:22.9949", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.6937ms", "ElapsedMilliseconds": 1.6937, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:13:23.0752", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:13:23.0752", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:13:23.0752", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:13:23.0752", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:13:23.0752", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:13:23.0752", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:13:23.0752", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 4.7418ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 4.7418, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:13:23.0752", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:13:23.0752", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 5.7235ms", "ElapsedMilliseconds": 5.7235, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:13:28.0247", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:13:28.0247", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:13:28.0247", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:13:28.0247", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:13:28.0247", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:13:28.0247", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:13:28.0247", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.6007ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.6007, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:13:28.0247", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:13:28.0247", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.9119ms", "ElapsedMilliseconds": 7.9119, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:13:34.0520", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:13:34.0520", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:13:34.0520", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.0862ms", "ElapsedMilliseconds": 1.0862, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:13:34.0644", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:13:34.0644", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:13:34.0644", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:13:34.0644", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:13:34.0705", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:13:34.0705", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:13:34.0705", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.6315ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.6315, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:13:34.0705", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:13:34.0705", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 6.7305ms", "ElapsedMilliseconds": 6.7305, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:13:51.9619", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:13:51.9619", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:13:51.9619", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 1.1442ms", "ElapsedMilliseconds": 1.1442, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:13:51.9773", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:13:51.9773", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:13:51.9773", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:13:51.9773", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:13:51.9773", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:13:51.9773", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:13:51.9773", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 4.619ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 4.619, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:13:51.9773", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:13:51.9773", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 5.7771ms", "ElapsedMilliseconds": 5.7771, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:13:54.1075", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:13:54.1075", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:13:54.1075", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:13:54.1075", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:13:54.1075", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:13:54.1075", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:13:54.1075", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.0692ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.0692, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:13:54.1075", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:13:54.1075", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 7.0954ms", "ElapsedMilliseconds": 7.0954, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:13:55.7362", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:13:55.7362", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:13:55.7362", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:13:55.7362", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:13:55.7419", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:13:55.7419", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:13:55.7419", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 4.9154ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 4.9154, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:13:55.7419", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:13:55.7419", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 6.3779ms", "ElapsedMilliseconds": 6.3779, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:14:14.6740", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/User/AddUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/User/AddUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:14:14.6740", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:14:14.6740", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/User/AddUser - 204 - - 1.3010ms", "ElapsedMilliseconds": 1.301, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/User/AddUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:14:14.6899", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.105:5274/api/User/AddUser - application/json 148", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 148, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/User/AddUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:14:14.6899", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:14:14.6899", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.AddUser (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.AddUser (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:14:14.6899", "level": "INFO", "message": "Route matched with {action = \"AddUser\", controller = \"User\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddUser(Models.DTOs.User.Create.UserCreateDto) on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"AddUser\", controller = \"User\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddUser(Models.DTOs.User.Create.UserCreateDto)", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:14:14.7729", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]'.", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:14:14.8000", "level": "INFO", "message": "Executed action Api.Controllers.UserController.AddUser (Api) in 109.2556ms", "ActionName": "Api.Controllers.UserController.AddUser (Api)", "ElapsedMilliseconds": 109.2556, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:14:14.8000", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.AddUser (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.AddUser (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:14:14.8000", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.105:5274/api/User/AddUser - 400 - application/json;+charset=utf-8 110.4235ms", "ElapsedMilliseconds": 110.4235, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/User/AddUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:14:22.9416", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/User/AddUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/User/AddUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:14:22.9416", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:14:22.9416", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/User/AddUser - 204 - - 0.9438ms", "ElapsedMilliseconds": 0.9438, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/User/AddUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:14:22.9572", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.105:5274/api/User/AddUser - application/json 158", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 158, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/User/AddUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:14:22.9572", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:14:22.9572", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.AddUser (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.AddUser (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:14:22.9572", "level": "INFO", "message": "Route matched with {action = \"AddUser\", controller = \"User\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddUser(Models.DTOs.User.Create.UserCreateDto) on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"AddUser\", controller = \"User\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddUser(Models.DTOs.User.Create.UserCreateDto)", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:14:23.0258", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "elapsed": "4", "parameters": "@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:14:23.0258", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Create.UserCreateResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Create.UserCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:14:23.0258", "level": "INFO", "message": "Executed action Api.Controllers.UserController.AddUser (Api) in 69.9978ms", "ActionName": "Api.Controllers.UserController.AddUser (Api)", "ElapsedMilliseconds": 69.9978, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:14:23.0258", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.AddUser (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.AddUser (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:14:23.0258", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.105:5274/api/User/AddUser - 200 - application/json;+charset=utf-8 71.1444ms", "ElapsedMilliseconds": 71.1444, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/User/AddUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:14:23.3784", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:14:23.3784", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:14:23.3784", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Roles/getRoles - 204 - - 0.5155ms", "ElapsedMilliseconds": 0.5155, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-15 18:14:23.3941", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-15 18:14:23.3941", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-15 18:14:23.3941", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-15 18:14:23.3941", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Roles\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.RolesController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Roles\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.RolesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-15 18:14:23.4001", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-15 18:14:23.4001", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Roles.GetRoleName.GetRoleNameResponeDbo, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-15 18:14:23.4001", "level": "INFO", "message": "Executed action Api.Controllers.RolesController.GetAllTickets (Api) in 5.4886ms", "ActionName": "Api.Controllers.RolesController.GetAllTickets (Api)", "ElapsedMilliseconds": 5.4886, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-15 18:14:23.4001", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.RolesController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.RolesController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-15 18:14:23.4001", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Roles/getRoles - 200 - application/json;+charset=utf-8 6.5958ms", "ElapsedMilliseconds": 6.5958, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Roles/getRoles", "QueryString": "", "EventId": 2 }
