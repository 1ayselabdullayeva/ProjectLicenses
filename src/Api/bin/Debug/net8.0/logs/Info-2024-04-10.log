{ "time": "2024-04-10 22:41:42.9258", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-10 22:41:43.6148", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-10 22:41:43.6148", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-10 22:41:43.6260", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-10 22:41:43.6260", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-10 22:41:45.7626", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-10 22:41:46.1468", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-10 22:41:46.3337", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 578.5503ms", "ElapsedMilliseconds": 578.5503, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-10 22:41:46.3337", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-10 22:41:46.3337", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.2299ms", "ElapsedMilliseconds": 3.2299, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-10 22:41:46.3473", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-10 22:41:46.4367", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 89.4594ms", "ElapsedMilliseconds": 89.4594, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-10 22:41:46.5529", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-10 22:41:46.8735", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 320.6528ms", "ElapsedMilliseconds": 320.6528, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-10 22:43:19.8520", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-10 22:43:19.8520", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-10 22:43:20.0437", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-10 22:43:20.1577", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-10 22:43:24.7644", "level": "INFO", "message": "Executed DbCommand (187ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "187", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:43:25.0375", "level": "INFO", "message": "Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "6", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:43:25.1495", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:43:32.8612", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:43:33.1200", "level": "INFO", "message": "Executed DbCommand (6ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "6", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:43:35.0273", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-10 22:43:37.3406", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 17168.0105ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 17168.0105, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-10 22:43:37.3406", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-10 22:43:37.3770", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 17524.9877ms", "ElapsedMilliseconds": 17524.9877, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-10 22:44:56.3569", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-10 22:44:56.3798", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-10 22:44:56.3798", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-10 22:44:56.3798", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-10 22:44:56.5720", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:44:56.5720", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:44:56.5890", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:45:02.3364", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:45:02.3364", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "1", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:45:02.3470", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-10 22:45:02.3470", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 5964.1259ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 5964.1259, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-10 22:45:02.3470", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-10 22:45:02.3470", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 5992.4067ms", "ElapsedMilliseconds": 5992.4067, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-10 22:46:05.2470", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/GetAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/GetAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-10 22:46:12.9603", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-10 22:46:12.9603", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-10 22:46:14.8270", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/GetAllLicenses - 401 0 - 9580.2595ms", "ElapsedMilliseconds": 9580.2595, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/GetAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-10 22:46:57.4577", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/GetAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/GetAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-10 22:47:00.7642", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-10 22:47:00.7722", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-10 22:47:02.0652", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/GetAllLicenses - 403 0 - 4615.5648ms", "ElapsedMilliseconds": 4615.5648, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/GetAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-10 22:48:08.8829", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/GetAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/GetAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-10 22:48:14.1974", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-10 22:48:14.2043", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-10 22:48:16.6228", "level": "INFO", "message": "Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "6", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:48:16.6402", "level": "WARN", "message": "The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.", "EventId": 10103, "EventName": "Microsoft.EntityFrameworkCore.Query.FirstWithoutOrderByAndFilterWarning" }
{ "time": "2024-04-10 22:48:16.6525", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:48:16.7072", "level": "INFO", "message": "Executed DbCommand (6ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "6", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:48:16.7072", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:48:16.7072", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:48:16.7231", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:48:16.7231", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:48:16.7231", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:48:16.7358", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:48:16.7358", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:48:16.7358", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:48:16.7358", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-10 22:48:16.7358", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 2547.9924ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 2547.9924, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-10 22:48:16.7529", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-10 22:48:16.7529", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/GetAllLicenses - 200 - application/json;+charset=utf-8 7872.6235ms", "ElapsedMilliseconds": 7872.6235, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/GetAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-10 22:49:45.9795", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-10 22:49:51.6145", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-10 22:49:51.6145", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-10 22:49:51.6157", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 401 0 - 5636.2831ms", "ElapsedMilliseconds": 5636.2831, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-10 22:50:06.1659", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-10 22:50:06.1659", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-10 22:50:06.1772", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-10 22:50:06.3181", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "4", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:50:06.3181", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-10 22:50:06.3325", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-10 22:50:06.3325", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:50:06.4918", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:50:06.4918", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:50:06.5085", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:50:06.5203", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:50:06.5334", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:50:06.5334", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "3", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:50:06.5500", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:50:06.5500", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:50:06.5500", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-10 22:50:06.5500", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 380.3806ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 380.3806, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-10 22:50:06.5500", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-10 22:50:06.5500", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 392.3703ms", "ElapsedMilliseconds": 392.3703, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-10 22:50:23.3631", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Licenses/UpdateStatus - application/json 36", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 36, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/UpdateStatus", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-10 22:50:23.3631", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-10 22:50:23.3631", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-10 22:50:23.3631", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-10 22:50:23.3631", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Licenses/UpdateStatus - 401 0 - 3.1912ms", "ElapsedMilliseconds": 3.1912, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/UpdateStatus", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-10 22:50:48.7779", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://localhost:5274/api/Licenses/UpdateStatus - application/json 39", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 39, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/UpdateStatus", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-10 22:50:48.7779", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-10 22:50:48.7779", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-10 22:50:48.7779", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://localhost:5274/api/Licenses/UpdateStatus - 403 0 - 2.0799ms", "ElapsedMilliseconds": 2.0799, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/UpdateStatus", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-10 22:52:01.4787", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://localhost:5274/api/Ticket/DeleteTicket?id=1 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=1", "EventId": 1 }
{ "time": "2024-04-10 22:52:01.4787", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-10 22:52:01.4843", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-10 22:52:01.4843", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-10 22:52:01.4843", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://localhost:5274/api/Ticket/DeleteTicket?id=1 - 401 0 - 6.2022ms", "ElapsedMilliseconds": 6.2022, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=1", "EventId": 2 }
{ "time": "2024-04-10 22:52:48.1856", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://localhost:5274/api/Ticket/DeleteTicket?id=1 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=1", "EventId": 1 }
{ "time": "2024-04-10 22:52:48.1999", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-10 22:52:48.1999", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-10 22:52:48.2313", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "4", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:52:48.2699", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "elapsed": "1", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-10 22:52:48.2699", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Delete.TicketDeleteResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Delete.TicketDeleteResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-10 22:52:48.2699", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 78.3025ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 78.3025, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-10 22:52:48.2699", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-10 22:52:48.2699", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://localhost:5274/api/Ticket/DeleteTicket?id=1 - 200 - application/json;+charset=utf-8 96.9756ms", "ElapsedMilliseconds": 96.9756, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=1", "EventId": 2 }
{ "time": "2024-04-10 22:53:04.8352", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://localhost:5274/api/Ticket/DeleteTicket?id=1 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=1", "EventId": 1 }
{ "time": "2024-04-10 22:53:04.8352", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-10 22:53:04.8352", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-10 22:53:04.8352", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://localhost:5274/api/Ticket/DeleteTicket?id=1 - 403 0 - 3.4367ms", "ElapsedMilliseconds": 3.4367, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=1", "EventId": 2 }
