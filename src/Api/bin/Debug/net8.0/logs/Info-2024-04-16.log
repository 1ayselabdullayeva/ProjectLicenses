{ "time": "2024-04-16 12:29:41.1536", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-16 12:29:41.7350", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-16 12:29:41.7350", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-16 12:29:41.7432", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-16 12:29:41.7432", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-16 12:29:43.6846", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 12:29:44.0116", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-16 12:29:44.1659", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 491.2560ms", "ElapsedMilliseconds": 491.256, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 12:29:44.1659", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 12:29:44.1784", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.1407ms", "ElapsedMilliseconds": 3.1407, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 12:29:44.1784", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 12:29:44.2820", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 102.6102ms", "ElapsedMilliseconds": 102.6102, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 12:29:44.3495", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 12:29:44.6240", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 275.3183ms", "ElapsedMilliseconds": 275.3183, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 12:35:49.2182", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 12:35:49.2182", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 12:35:49.2182", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/GetAllProducts - 204 - - 16.0295ms", "ElapsedMilliseconds": 16.0295, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 12:35:49.4769", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 12:35:49.4769", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 12:35:49.6357", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 12:35:49.6770", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 12:35:50.5761", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-16 12:35:51.0542", "level": "INFO", "message": "Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "29", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 12:35:51.1194", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 12:35:51.1295", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 1447.6737ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 1447.6737, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 12:35:51.1295", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 12:35:51.1404", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 1663.5555ms", "ElapsedMilliseconds": 1663.5555, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 12:36:03.9845", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/Create - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/Create", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 12:36:03.9855", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 12:36:03.9855", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/Create - 204 - - 1.5229ms", "ElapsedMilliseconds": 1.5229, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/Create", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 12:36:03.9855", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.102:5274/api/Product/Create - application/json 26", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 26, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/Create", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 12:36:03.9855", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 12:36:03.9855", "level": "INFO", "message": "Executing endpoint 'ProductController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 12:36:04.0188", "level": "INFO", "message": "Route matched with {action = \"Create\", controller = \"Product\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Product.Create.ProductCreateDto) on controller ProductController (Api).", "RouteData": "{action = \"Create\", controller = \"Product\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Product.Create.ProductCreateDto)", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 12:36:04.2850", "level": "INFO", "message": "Executed DbCommand (14ms) [Parameters=[@p0='?'], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"Product\" (\"ProductName\")\r\nVALUES (@p0)\r\nRETURNING \"Id\";", "elapsed": "14", "parameters": "@p0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Product\" (\"ProductName\")\r\nVALUES (@p0)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 12:36:04.3185", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Product.Create.ProductCreateResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Product.Create.ProductCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 12:36:04.3197", "level": "INFO", "message": "Executed action ProductController.Create (Api) in 300.7538ms", "ActionName": "ProductController.Create (Api)", "ElapsedMilliseconds": 300.7538, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 12:36:04.3197", "level": "INFO", "message": "Executed endpoint 'ProductController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 12:36:04.3197", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.102:5274/api/Product/Create - 200 - application/json;+charset=utf-8 326.9265ms", "ElapsedMilliseconds": 326.9265, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/Create", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 12:36:05.0169", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 12:36:05.0169", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 12:36:05.0169", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/GetAllProducts - 204 - - 1.2923ms", "ElapsedMilliseconds": 1.2923, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 12:36:05.1317", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 12:36:05.1317", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 12:36:05.1362", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 12:36:05.1362", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 12:36:05.1509", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-16 12:36:05.1509", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 12:36:05.1509", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 12:36:05.1509", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 21.8399ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 21.8399, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 12:36:05.1509", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 12:36:05.1509", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 26.9070ms", "ElapsedMilliseconds": 26.907, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 12:36:07.9946", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/DeleteProduct?id=6 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/DeleteProduct", "QueryString": "?id=6", "EventId": 1 }
{ "time": "2024-04-16 12:36:07.9946", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 12:36:07.9946", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/DeleteProduct?id=6 - 204 - - 1.4175ms", "ElapsedMilliseconds": 1.4175, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/DeleteProduct", "QueryString": "?id=6", "EventId": 2 }
{ "time": "2024-04-16 12:36:08.0265", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Product/DeleteProduct?id=6 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/DeleteProduct", "QueryString": "?id=6", "EventId": 1 }
{ "time": "2024-04-16 12:36:08.0269", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 12:36:08.0269", "level": "INFO", "message": "Executing endpoint 'ProductController.Delete (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Delete (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 12:36:08.0269", "level": "INFO", "message": "Route matched with {action = \"Delete\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Delete(Int32) on controller ProductController (Api).", "RouteData": "{action = \"Delete\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult Delete(Int32)", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 12:36:08.1020", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 12:36:08.1226", "level": "INFO", "message": "Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Product\"\r\nWHERE \"Id\" = @p0;", "elapsed": "5", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Product\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 12:36:08.1226", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Product.Delete.ProductRemoveResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Product.Delete.ProductRemoveResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 12:36:08.1226", "level": "INFO", "message": "Executed action ProductController.Delete (Api) in 91.3616ms", "ActionName": "ProductController.Delete (Api)", "ElapsedMilliseconds": 91.3616, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 12:36:08.1226", "level": "INFO", "message": "Executed endpoint 'ProductController.Delete (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Delete (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 12:36:08.1226", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Product/DeleteProduct?id=6 - 200 - application/json;+charset=utf-8 100.1854ms", "ElapsedMilliseconds": 100.1854, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/DeleteProduct", "QueryString": "?id=6", "EventId": 2 }
{ "time": "2024-04-16 12:36:08.8682", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 12:36:08.8682", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 12:36:08.8682", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 12:36:08.8682", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 12:36:08.8730", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-16 12:36:08.8730", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 12:36:08.8730", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 12:36:08.8730", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 8.3911ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 8.3911, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 12:36:08.8730", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 12:36:08.8730", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 10.2741ms", "ElapsedMilliseconds": 10.2741, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 12:36:35.3002", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 12:36:35.3002", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 12:36:35.3067", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/GetAllProducts - 204 - - 6.7050ms", "ElapsedMilliseconds": 6.705, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 12:36:35.4193", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 12:36:35.4193", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 12:36:35.4193", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 12:36:35.4193", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 12:36:35.4193", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-16 12:36:35.4689", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 12:36:35.4689", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 12:36:35.4689", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 49.6114ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 49.6114, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 12:36:35.4689", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 12:36:35.4689", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 50.6824ms", "ElapsedMilliseconds": 50.6824, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 12:36:42.7828", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 12:36:42.7828", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 12:36:42.7828", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/GetAllProducts - 204 - - 0.9526ms", "ElapsedMilliseconds": 0.9526, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 12:36:43.8170", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 12:36:43.8170", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 12:36:43.8170", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 12:36:43.8170", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 12:36:43.8229", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-16 12:36:43.8229", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 12:36:43.8229", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 12:36:43.8229", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 7.1447ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 7.1447, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 12:36:43.8229", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 12:36:43.8229", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 9.6375ms", "ElapsedMilliseconds": 9.6375, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 12:36:49.4302", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/DeleteProduct?id=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/DeleteProduct", "QueryString": "?id=1", "EventId": 1 }
{ "time": "2024-04-16 12:36:49.4313", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 12:36:49.4313", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/DeleteProduct?id=1 - 204 - - 1.5990ms", "ElapsedMilliseconds": 1.599, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/DeleteProduct", "QueryString": "?id=1", "EventId": 2 }
{ "time": "2024-04-16 12:36:49.4313", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Product/DeleteProduct?id=1 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/DeleteProduct", "QueryString": "?id=1", "EventId": 1 }
{ "time": "2024-04-16 12:36:49.4313", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 12:36:49.4313", "level": "INFO", "message": "Executing endpoint 'ProductController.Delete (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Delete (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 12:36:49.4313", "level": "INFO", "message": "Route matched with {action = \"Delete\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Delete(Int32) on controller ProductController (Api).", "RouteData": "{action = \"Delete\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult Delete(Int32)", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 12:36:49.4527", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 12:36:49.4778", "level": "ERROR", "message": "Failed executing DbCommand (19ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Product\"\r\nWHERE \"Id\" = @p0;", "elapsed": "19", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Product\"\r\nWHERE \"Id\" = @p0;", "EventId": 20102, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandError" }
{ "time": "2024-04-16 12:36:49.5395", "level": "ERROR", "message": "An exception occurred in the database while saving changes for context type 'DataAccessLayer.Persistence.ProjectDbContext'.\r\nMicrosoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Npgsql.PostgresException (0x80004005): 23503: update or delete on table \"Product\" violates foreign key constraint \"FK_Licenses_Product_Id\" on table \"Licenses\"\r\n\r\nDETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.\r\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\r\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\r\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\r\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\r\n   at Npgsql.NpgsqlDataReader.NextResult()\r\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\r\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\r\n   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at Npgsql.NpgsqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n  Exception data:\r\n    Severity: ERROR\r\n    SqlState: 23503\r\n    MessageText: update or delete on table \"Product\" violates foreign key constraint \"FK_Licenses_Product_Id\" on table \"Licenses\"\r\n    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.\r\n    SchemaName: public\r\n    TableName: Licenses\r\n    ConstraintName: FK_Licenses_Product_Id\r\n    File: ri_triggers.c\r\n    Line: 2633\r\n    Routine: ri_ReportViolation\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__112_0(DbContext _, ValueTuple`2 t)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)", "exception": "Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Npgsql.PostgresException (0x80004005): 23503: update or delete on table \"Product\" violates foreign key constraint \"FK_Licenses_Product_Id\" on table \"Licenses\"\r\n\r\nDETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.\r\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\r\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\r\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\r\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\r\n   at Npgsql.NpgsqlDataReader.NextResult()\r\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\r\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\r\n   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at Npgsql.NpgsqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n  Exception data:\r\n    Severity: ERROR\r\n    SqlState: 23503\r\n    MessageText: update or delete on table \"Product\" violates foreign key constraint \"FK_Licenses_Product_Id\" on table \"Licenses\"\r\n    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.\r\n    SchemaName: public\r\n    TableName: Licenses\r\n    ConstraintName: FK_Licenses_Product_Id\r\n    File: ri_triggers.c\r\n    Line: 2633\r\n    Routine: ri_ReportViolation\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__112_0(DbContext _, ValueTuple`2 t)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)", "contextType": "DataAccessLayer.Persistence.ProjectDbContext", "newline": "\r\n", "error": {"Type":"Microsoft.EntityFrameworkCore.DbUpdateException", "Entries":[], "TargetSite":"Void Execute(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)", "Message":"An error occurred while saving the entity changes. See the inner exception for details.", "Data":{}, "InnerException":"Npgsql.PostgresException (0x80004005): 23503: update or delete on table \"Product\" violates foreign key constraint \"FK_Licenses_Product_Id\" on table \"Licenses\"\r\n\r\nDETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.\r\n   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\r\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\r\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\r\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\r\n   at Npgsql.NpgsqlDataReader.NextResult()\r\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\r\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\r\n   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at Npgsql.NpgsqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n  Exception data:\r\n    Severity: ERROR\r\n    SqlState: 23503\r\n    MessageText: update or delete on table \"Product\" violates foreign key constraint \"FK_Licenses_Product_Id\" on table \"Licenses\"\r\n    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.\r\n    SchemaName: public\r\n    TableName: Licenses\r\n    ConstraintName: FK_Licenses_Product_Id\r\n    File: ri_triggers.c\r\n    Line: 2633\r\n    Routine: ri_ReportViolation", "Source":"Microsoft.EntityFrameworkCore.Relational", "HResult":-2146233088, "StackTrace":"   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__112_0(DbContext _, ValueTuple`2 t)\r\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)"}, "EventId": 10000, "EventName": "Microsoft.EntityFrameworkCore.Update.SaveChangesFailed" }
{ "time": "2024-04-16 14:37:54.7709", "level": "INFO", "message": "Executed action ProductController.Delete (Api) in 7265324.0732ms", "ActionName": "ProductController.Delete (Api)", "ElapsedMilliseconds": 7265324.0732, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:37:54.7709", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/DeleteProduct?id=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/DeleteProduct", "QueryString": "?id=1", "EventId": 1 }
{ "time": "2024-04-16 14:37:54.8118", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:37:54.8118", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:37:54.8118", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:37:54.8118", "level": "INFO", "message": "Executed endpoint 'ProductController.Delete (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.Delete (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:37:54.8118", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/DeleteProduct?id=1 - 204 - - 41.6727ms", "ElapsedMilliseconds": 41.6727, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/DeleteProduct", "QueryString": "?id=1", "EventId": 2 }
{ "time": "2024-04-16 14:37:54.8118", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/GetAllProducts - 204 - - 1.2272ms", "ElapsedMilliseconds": 1.2272, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:37:54.8118", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:37:54.8118", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:37:54.8118", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/GetAllProducts - 204 - - 0.4250ms", "ElapsedMilliseconds": 0.425, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:37:54.8118", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/Create - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/Create", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:37:54.8118", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/Create - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/Create", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:37:54.8118", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:37:54.8118", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:37:54.8118", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/Create - 204 - - 0.6195ms", "ElapsedMilliseconds": 0.6195, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/Create", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:37:54.8118", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/Create - 204 - - 0.2539ms", "ElapsedMilliseconds": 0.2539, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/Create", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:37:54.8118", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:37:54.8118", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:37:54.8118", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/Create - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/Create", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:37:54.8118", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:37:54.8118", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/GetAllProducts - 204 - - 2.1595ms", "ElapsedMilliseconds": 2.1595, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:37:54.8206", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Product/Create - 204 - - 5.3194ms", "ElapsedMilliseconds": 5.3194, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/Create", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:37:55.0351", "level": "ERROR", "message": "{\"ClassName\":\"Microsoft.EntityFrameworkCore.DbUpdateException\",\"Message\":\"An error occurred while saving the entity changes. See the inner exception for details.\",\"Data\":{},\"InnerException\":{\"ClassName\":\"Npgsql.PostgresException\",\"Message\":\"23503: update or delete on table \\\"Product\\\" violates foreign key constraint \\\"FK_Licenses_Product_Id\\\" on table \\\"Licenses\\\"\\r\\n\\r\\nDETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.\",\"Data\":{\"Severity\":\"ERROR\",\"InvariantSeverity\":\"ERROR\",\"SqlState\":\"23503\",\"MessageText\":\"update or delete on table \\\"Product\\\" violates foreign key constraint \\\"FK_Licenses_Product_Id\\\" on table \\\"Licenses\\\"\",\"Detail\":\"Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.\",\"SchemaName\":\"public\",\"TableName\":\"Licenses\",\"ConstraintName\":\"FK_Licenses_Product_Id\",\"File\":\"ri_triggers.c\",\"Line\":\"2633\",\"Routine\":\"ri_ReportViolation\"},\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\\r\\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\\r\\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\\r\\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\\r\\n   at Npgsql.NpgsqlDataReader.NextResult()\\r\\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\\r\\n   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)\\r\\n   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)\\r\\n   at Npgsql.NpgsqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\\r\\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)\\r\\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467259,\"Source\":\"Npgsql\",\"WatsonBuckets\":null,\"Severity\":\"ERROR\",\"InvariantSeverity\":\"ERROR\",\"SqlState\":\"23503\",\"MessageText\":\"update or delete on table \\\"Product\\\" violates foreign key constraint \\\"FK_Licenses_Product_Id\\\" on table \\\"Licenses\\\"\",\"Detail\":\"Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.\",\"Hint\":null,\"Position\":0,\"InternalPosition\":0,\"InternalQuery\":null,\"Where\":null,\"SchemaName\":\"public\",\"TableName\":\"Licenses\",\"ColumnName\":null,\"DataTypeName\":null,\"ConstraintName\":\"FK_Licenses_Product_Id\",\"File\":\"ri_triggers.c\",\"Line\":\"2633\",\"Routine\":\"ri_ReportViolation\"},\"HelpURL\":null,\"StackTraceString\":\"   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\\r\\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\\r\\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)\\r\\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\\r\\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\\r\\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__112_0(DbContext _, ValueTuple`2 t)\\r\\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\\r\\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\\r\\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)\\r\\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges()\\r\\n   at Core.Repositories.Repository`1.Save() in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Core\\\\Repositories\\\\Repository.cs:line 71\\r\\n   at Business.Services.ProductService.Delete(Int32 id)\\r\\n   at ProductController.Delete(Int32 id) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\ProductController.cs:line 93\\r\\n   at lambda_method70(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2146233088,\"Source\":\"Microsoft.EntityFrameworkCore.Relational\",\"WatsonBuckets\":null}" }
{ "time": "2024-04-16 14:37:55.0994", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Product/DeleteProduct?id=1 - 400 - application/json 7265653.7242ms", "ElapsedMilliseconds": 7265653.7242, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Product/DeleteProduct", "QueryString": "?id=1", "EventId": 2 }
{ "time": "2024-04-16 14:38:01.7824", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:38:01.7824", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:38:01.7824", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.9457ms", "ElapsedMilliseconds": 1.9457, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:38:03.0296", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:38:03.0296", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:38:03.0405", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenNotYetValidException: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '16.04.2024 14:03:35', Current time (UTC): '16.04.2024 10:38:03'.\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-16 14:38:03.0405", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '16.04.2024 14:03:35', Current time (UTC): '16.04.2024 10:38:03'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '16.04.2024 14:03:35', Current time (UTC): '16.04.2024 10:38:03'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-16 14:38:03.0405", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-16 14:38:03.0405", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-16 14:38:03.0405", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 401 0 - 23.0482ms", "ElapsedMilliseconds": 23.0482, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:38:50.1577", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Auth/Login - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:38:50.1658", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:38:50.1658", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Auth/Login - 204 - - 9.3314ms", "ElapsedMilliseconds": 9.3314, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:38:50.1658", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.102:5274/api/Auth/Login - application/json 64", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 64, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:38:50.1658", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:38:50.1658", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:38:50.1820", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:38:50.2285", "level": "INFO", "message": "Executed DbCommand (6ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "6", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:38:50.2605", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:38:50.2892", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:38:50.3176", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:38:50.3428", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "2", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:38:50.3428", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:38:50.3428", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 165.483ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 165.483, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:38:50.3428", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:38:50.3428", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.102:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 174.2549ms", "ElapsedMilliseconds": 174.2549, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:38:50.3586", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:38:50.3586", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:38:50.3586", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/User/GetUser - 204 - - 0.2895ms", "ElapsedMilliseconds": 0.2895, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:38:50.3586", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:38:50.3586", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:38:50.3586", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:38:50.3734", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:38:50.3734", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:38:50.3734", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:38:50.3849", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 11.4304ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 11.4304, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:38:50.3849", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:38:50.3849", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 15.9617ms", "ElapsedMilliseconds": 15.9617, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:38:50.4297", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:38:50.4297", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:38:50.4297", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/User/GetLicenses - 204 - - 0.3839ms", "ElapsedMilliseconds": 0.3839, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:38:50.4353", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:38:50.4353", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:38:50.4353", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:38:50.4353", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:38:50.4487", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:38:50.4680", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "3", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:38:50.4962", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:38:50.4962", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 61.0833ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 61.0833, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:38:50.4962", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:38:50.4962", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/User/GetLicenses - 200 - application/json;+charset=utf-8 63.6689ms", "ElapsedMilliseconds": 63.6689, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:38:55.5057", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:38:55.5057", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:38:55.5057", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.5540ms", "ElapsedMilliseconds": 1.554, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:38:55.7273", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:38:55.7273", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:38:55.7273", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:38:55.7273", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:38:55.7531", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "3", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:38:55.7712", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:38:55.7819", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 51.272ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 51.272, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:38:55.7819", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:38:55.7819", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 54.8859ms", "ElapsedMilliseconds": 54.8859, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:39:12.2895", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:39:12.2913", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:39:12.2913", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Licenses/getLicenses - 204 - - 2.2305ms", "ElapsedMilliseconds": 2.2305, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:39:12.2913", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:39:12.2913", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:39:12.2913", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/types - 204 - - 0.2634ms", "ElapsedMilliseconds": 0.2634, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:39:12.2913", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:39:12.2913", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:39:12.2913", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:39:12.3050", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:39:12.3050", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:39:12.3050", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:39:12.3050", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:39:12.3050", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:39:12.3050", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:39:12.3253", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:39:12.3253", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 7.9197ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 7.9197, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:39:12.3253", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:39:12.3253", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 12.0853ms", "ElapsedMilliseconds": 12.0853, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:39:12.3253", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:39:12.3473", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:39:12.3473", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:39:12.3547", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:39:12.3547", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:39:12.3547", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:39:12.3547", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:39:12.3547", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:39:12.3682", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:39:12.3682", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:39:12.3682", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:39:12.3682", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:39:12.3682", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 70.0382ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 70.0382, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:39:12.3682", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:39:12.3682", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 74.4425ms", "ElapsedMilliseconds": 74.4425, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:39:20.5809", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:39:20.5809", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:39:20.5809", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.1897ms", "ElapsedMilliseconds": 1.1897, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:39:20.7865", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:39:20.7865", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:39:20.7865", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:39:20.7865", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:39:20.7943", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:39:20.7943", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:39:20.7943", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 7.9154ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 7.9154, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:39:20.7943", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:39:20.7943", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 9.2986ms", "ElapsedMilliseconds": 9.2986, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:44:37.2233", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:44:37.2233", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:44:37.2277", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 4.5596ms", "ElapsedMilliseconds": 4.5596, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:44:37.2277", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:44:37.2277", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:44:37.2277", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:44:37.2277", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:44:37.2910", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "4", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:44:37.2910", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:44:37.2910", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 52.5071ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 52.5071, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:44:37.2910", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:44:37.2910", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 59.9577ms", "ElapsedMilliseconds": 59.9577, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:44:43.0306", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:44:43.0306", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:44:43.0306", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.0476ms", "ElapsedMilliseconds": 1.0476, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:44:43.0626", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:44:43.0626", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:44:43.0626", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:44:43.0626", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:44:43.0726", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:44:43.0726", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:44:43.0726", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 9.0786ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 9.0786, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:44:43.0726", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:44:43.0726", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 12.0444ms", "ElapsedMilliseconds": 12.0444, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:44:46.2073", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:44:46.2073", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:44:46.2073", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:44:46.2073", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:44:46.2073", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:44:46.2073", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:44:46.2190", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 8.8463ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 8.8463, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:44:46.2190", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:44:46.2190", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 12.3170ms", "ElapsedMilliseconds": 12.317, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:44:56.3346", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:44:56.3357", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:44:56.3357", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.3893ms", "ElapsedMilliseconds": 1.3893, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:44:56.3357", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:44:56.3357", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:44:56.3514", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:44:56.3514", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:44:56.3514", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:44:56.3514", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:44:56.3514", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 8.8392ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 8.8392, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:44:56.3514", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:44:56.3514", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 11.7077ms", "ElapsedMilliseconds": 11.7077, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:45:01.3037", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:45:01.3037", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:45:01.3037", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:45:01.3037", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:45:01.3133", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:45:01.3133", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:45:01.3133", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 8.6434ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 8.6434, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:45:01.3133", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:45:01.3133", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 12.0295ms", "ElapsedMilliseconds": 12.0295, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:51:58.6688", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:51:58.6688", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:51:58.6688", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.5195ms", "ElapsedMilliseconds": 1.5195, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:51:58.7202", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:51:58.7202", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:51:58.7202", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:51:58.7202", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:51:58.7668", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:51:58.7668", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:51:58.7668", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 46.4979ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 46.4979, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:51:58.7668", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:51:58.7668", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 48.5415ms", "ElapsedMilliseconds": 48.5415, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:52:01.7533", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:52:01.7533", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:52:01.7533", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:52:01.7533", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:52:01.7620", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:52:01.7620", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:52:01.7620", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 7.5674ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 7.5674, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:52:01.7620", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:52:01.7620", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 10.7789ms", "ElapsedMilliseconds": 10.7789, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:52:05.4366", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:52:05.4366", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:52:05.4366", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.5018ms", "ElapsedMilliseconds": 1.5018, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:52:05.7499", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:52:05.7499", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:52:05.7499", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:52:05.7499", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:52:05.7499", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:52:05.7582", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:52:05.7582", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 7.2962ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 7.2962, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:52:05.7582", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:52:05.7582", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 9.0253ms", "ElapsedMilliseconds": 9.0253, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:52:07.2615", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:52:07.2615", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:52:07.2615", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:52:07.2615", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:52:07.2703", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:52:07.2703", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:52:07.2703", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 7.8824ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 7.8824, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:52:07.2703", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:52:07.2703", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 10.7749ms", "ElapsedMilliseconds": 10.7749, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:52:09.9522", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:52:09.9522", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:52:09.9522", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:52:09.9522", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:52:09.9727", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:52:09.9727", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:52:09.9727", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 7.9832ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 7.9832, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:52:09.9727", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:52:09.9727", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 22.3073ms", "ElapsedMilliseconds": 22.3073, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:52:13.3275", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:52:13.3275", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:52:13.3275", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.4311ms", "ElapsedMilliseconds": 1.4311, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:52:13.3758", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:52:13.3758", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:52:13.3758", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:52:13.3758", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:52:13.3840", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:52:13.3840", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:52:13.3840", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 8.1951ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 8.1951, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:52:13.3840", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:52:13.3840", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 10.0868ms", "ElapsedMilliseconds": 10.0868, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:52:34.4858", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:52:34.5177", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:52:34.5177", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 34.3089ms", "ElapsedMilliseconds": 34.3089, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:52:34.5377", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:52:34.5377", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:52:34.5377", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:52:34.5377", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:52:34.5461", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:52:34.5461", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:52:34.5461", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 8.1556ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 8.1556, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:52:34.5461", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:52:34.5461", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 10.5511ms", "ElapsedMilliseconds": 10.5511, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:52:35.3016", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:52:35.3016", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:52:35.3016", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:52:35.3016", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:52:35.3016", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:52:35.3090", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:52:35.3090", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 6.6123ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 6.6123, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:52:35.3090", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:52:35.3090", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 8.3987ms", "ElapsedMilliseconds": 8.3987, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:52:53.2309", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:52:53.2309", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:52:53.2309", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.1285ms", "ElapsedMilliseconds": 1.1285, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:52:53.4626", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:52:53.4626", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:52:53.4626", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:52:53.4626", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:52:53.4626", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:52:53.4626", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:52:53.4626", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 7.5497ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 7.5497, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:52:53.4626", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:52:53.4626", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 9.7169ms", "ElapsedMilliseconds": 9.7169, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:53:08.2625", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:53:08.2625", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:53:08.2625", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.3678ms", "ElapsedMilliseconds": 1.3678, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:53:08.2625", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:53:08.2787", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:53:08.2787", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:53:08.2787", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:53:08.2787", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:53:08.2787", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:53:08.2787", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 7.9121ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 7.9121, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:53:08.2787", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:53:08.2787", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 10.4364ms", "ElapsedMilliseconds": 10.4364, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:53:16.3384", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:53:16.3384", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:53:16.3384", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.3456ms", "ElapsedMilliseconds": 1.3456, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:53:16.3384", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:53:16.3384", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:53:16.3384", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:53:16.3384", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:53:16.3384", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:53:16.3384", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:53:16.3384", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 8.7542ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 8.7542, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:53:16.3384", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:53:16.3638", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 13.4379ms", "ElapsedMilliseconds": 13.4379, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:53:18.2829", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:53:18.2829", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:53:18.2829", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:53:18.2829", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:53:18.2930", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:53:18.2930", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:53:18.2930", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 8.1152ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 8.1152, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:53:18.2930", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:53:18.2930", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 11.8705ms", "ElapsedMilliseconds": 11.8705, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:53:35.2706", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:53:35.2706", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:53:35.2725", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 2.0122ms", "ElapsedMilliseconds": 2.0122, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:53:35.2952", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:53:35.2952", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:53:35.2952", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:53:35.2952", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:53:35.2952", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:53:35.2952", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:53:35.2952", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 8.8875ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 8.8875, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:53:35.2952", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:53:35.2952", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 11.2615ms", "ElapsedMilliseconds": 11.2615, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:53:38.3429", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:53:38.3429", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:53:38.3429", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:53:38.3429", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:53:38.3429", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:53:38.3429", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:53:38.3429", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 7.7582ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 7.7582, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:53:38.3429", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:53:38.3527", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 9.8852ms", "ElapsedMilliseconds": 9.8852, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:53:50.8240", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:53:50.8240", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:53:50.8240", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.0582ms", "ElapsedMilliseconds": 1.0582, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:53:50.8377", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:53:50.8377", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:53:50.8377", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:53:50.8377", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:53:50.8460", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:53:50.8460", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:53:50.8460", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 8.8012ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 8.8012, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:53:50.8460", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:53:50.8460", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 10.2815ms", "ElapsedMilliseconds": 10.2815, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:53:58.3008", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:53:58.3008", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:53:58.3008", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.9786ms", "ElapsedMilliseconds": 0.9786, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:53:58.4067", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:53:58.4067", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:53:58.4067", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:53:58.4067", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:53:58.4067", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:53:58.4067", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:53:58.4067", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 7.5382ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 7.5382, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:53:58.4067", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:53:58.4067", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 9.1962ms", "ElapsedMilliseconds": 9.1962, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:54:06.4827", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:54:06.4827", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:54:06.4827", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.1819ms", "ElapsedMilliseconds": 1.1819, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:54:06.5599", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:54:06.5599", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:54:06.5599", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:54:06.5599", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:54:06.5599", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:54:06.5599", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:54:06.5599", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 7.5488ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 7.5488, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:54:06.5599", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:54:06.5599", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 8.8498ms", "ElapsedMilliseconds": 8.8498, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:54:12.2132", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:54:12.2132", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:54:12.2132", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.3408ms", "ElapsedMilliseconds": 1.3408, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:54:12.2132", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:54:12.2132", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:54:12.2132", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:54:12.2132", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:54:12.2299", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:54:12.2299", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:54:12.2299", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 7.776ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 7.776, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:54:12.2299", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:54:12.2299", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 9.0331ms", "ElapsedMilliseconds": 9.0331, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:54:19.4782", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:54:19.4782", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:54:19.4782", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.3071ms", "ElapsedMilliseconds": 1.3071, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:54:19.4915", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:54:19.4915", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:54:19.4915", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:54:19.4915", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:54:19.4915", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:54:19.4915", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:54:19.4915", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 7.2176ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 7.2176, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:54:19.4915", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:54:19.4915", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 8.8662ms", "ElapsedMilliseconds": 8.8662, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:54:21.4243", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:54:21.4243", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:54:21.4243", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:54:21.4243", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:54:21.4323", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:54:21.4323", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:54:21.4323", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 7.5635ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 7.5635, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:54:21.4323", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:54:21.4323", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 9.6026ms", "ElapsedMilliseconds": 9.6026, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:54:23.3990", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:54:23.3990", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:54:23.3990", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:54:23.3990", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:54:23.3990", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:54:23.3990", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:54:23.3990", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 7.7497ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 7.7497, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:54:23.3990", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:54:23.3990", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 9.5815ms", "ElapsedMilliseconds": 9.5815, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:54:52.4389", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:54:52.4389", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:54:52.4389", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 9.6887ms", "ElapsedMilliseconds": 9.6887, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:54:52.4592", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:54:52.4592", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:54:52.4592", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:54:52.4592", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:54:52.4592", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:54:52.4592", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:54:52.4592", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 6.9507ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 6.9507, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:54:52.4592", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:54:52.4592", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 8.2690ms", "ElapsedMilliseconds": 8.269, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:54:54.6966", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:54:54.6972", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:54:54.6972", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:54:54.6972", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:54:54.6972", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:54:54.6972", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:54:54.6972", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 7.0054ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 7.0054, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:54:54.6972", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:54:54.6972", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 8.7732ms", "ElapsedMilliseconds": 8.7732, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:54:56.5271", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:54:56.5271", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:54:56.5271", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:54:56.5271", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:54:56.5271", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:54:56.5271", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:54:56.5271", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 8.306ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 8.306, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:54:56.5271", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:54:56.5271", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 10.1935ms", "ElapsedMilliseconds": 10.1935, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:54:59.1054", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:54:59.1054", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:54:59.1054", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.2133ms", "ElapsedMilliseconds": 1.2133, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:54:59.2927", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:54:59.2927", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:54:59.2927", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:54:59.2927", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:54:59.3007", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:54:59.3007", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:54:59.3007", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 8.0496ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 8.0496, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:54:59.3007", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:54:59.3007", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 9.6333ms", "ElapsedMilliseconds": 9.6333, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:55:44.3125", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:55:44.3147", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:55:44.3147", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 7.1991ms", "ElapsedMilliseconds": 7.1991, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:55:44.3147", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:55:44.3147", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:55:44.3304", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:55:44.3304", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:55:44.3304", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:55:44.3304", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:55:44.3304", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 7.3041ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 7.3041, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:55:44.3304", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:55:44.3304", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 8.7165ms", "ElapsedMilliseconds": 8.7165, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:55:46.7688", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:55:46.7688", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:55:46.7688", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:55:46.7688", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:55:46.7868", "level": "INFO", "message": "Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "5", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:55:46.7868", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:55:46.7868", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 16.8484ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 16.8484, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:55:46.7868", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:55:46.7868", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 19.2607ms", "ElapsedMilliseconds": 19.2607, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:55:49.6581", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:55:49.6581", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:55:49.6581", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.2486ms", "ElapsedMilliseconds": 1.2486, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:55:49.6657", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:55:49.6657", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:55:49.6657", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:55:49.6657", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:55:49.6657", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:55:49.6657", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:55:49.6657", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 7.2899ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 7.2899, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:55:49.6657", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:55:49.6657", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 8.6853ms", "ElapsedMilliseconds": 8.6853, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:56:41.3224", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:56:41.3234", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:56:41.3234", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 2.6888ms", "ElapsedMilliseconds": 2.6888, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:56:41.3537", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:56:41.3537", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:56:41.3550", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:56:41.3550", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:56:41.3550", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:56:41.3550", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:56:41.3550", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 7.6682ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 7.6682, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:56:41.3550", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:56:41.3550", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 9.5015ms", "ElapsedMilliseconds": 9.5015, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 14:56:44.4863", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 14:56:44.4863", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 14:56:44.4863", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 14:56:44.4863", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 14:56:44.4936", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 14:56:44.4936", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 14:56:44.4936", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 6.7578ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 6.7578, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 14:56:44.4936", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 14:56:44.4936", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 8.6045ms", "ElapsedMilliseconds": 8.6045, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:09:30.8242", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:09:30.8261", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:09:30.8261", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 5.8750ms", "ElapsedMilliseconds": 5.875, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:09:30.8539", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:09:30.8539", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:09:30.8539", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:09:30.8539", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:09:30.8953", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "3", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:09:30.8953", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:09:30.8953", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 41.1613ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 41.1613, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:09:30.8953", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:09:30.8953", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 42.2345ms", "ElapsedMilliseconds": 42.2345, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:09:51.0244", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:09:51.0244", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:09:51.0244", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket - 204 - - 0.9063ms", "ElapsedMilliseconds": 0.9063, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:09:51.2278", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:09:51.2283", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:09:51.2283", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-16 15:09:51.2283", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-16 15:09:51.2283", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket - 401 0 - 1.2956ms", "ElapsedMilliseconds": 1.2956, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:10:02.4890", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:10:02.4890", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:10:02.4890", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.0983ms", "ElapsedMilliseconds": 1.0983, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:10:02.4890", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:10:02.4890", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:10:02.4890", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:10:02.4890", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:10:02.4890", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:10:02.5026", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:10:02.5026", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 5.2486ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 5.2486, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:10:02.5026", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:10:02.5026", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 6.7432ms", "ElapsedMilliseconds": 6.7432, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:10:05.5553", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:10:05.5553", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:10:05.5553", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:10:05.5553", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:10:05.5553", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:10:05.5553", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:10:05.5553", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 5.4396ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 5.4396, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:10:05.5553", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:10:05.5553", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 7.6521ms", "ElapsedMilliseconds": 7.6521, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:10:22.3396", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:10:22.3396", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:10:22.3396", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.5209ms", "ElapsedMilliseconds": 0.5209, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:10:22.3396", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:10:22.3396", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:10:22.3396", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:10:22.3396", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:10:22.3396", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:10:22.3604", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:10:22.3604", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.3754ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.3754, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:10:22.3604", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:10:22.3604", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.0775ms", "ElapsedMilliseconds": 4.0775, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:10:29.0942", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:10:29.0942", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:10:29.0942", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.1791ms", "ElapsedMilliseconds": 1.1791, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:10:29.0942", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:10:29.0942", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:10:29.0942", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:10:29.0942", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:10:29.0942", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:10:29.1137", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:10:29.1137", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 6.7151ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 6.7151, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:10:29.1137", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:10:29.1137", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 8.1397ms", "ElapsedMilliseconds": 8.1397, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:10:31.1442", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:10:31.1442", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:10:31.1442", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket - 204 - - 0.8162ms", "ElapsedMilliseconds": 0.8162, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:10:31.1549", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:10:31.1549", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:10:31.1549", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:10:31.1549", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:10:31.1751", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:17:27.7330", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-16 15:17:27.8379", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-16 15:17:27.8379", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-16 15:17:27.8379", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-16 15:17:27.8379", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-16 15:17:29.5135", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:17:29.5504", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:17:29.6321", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-16 15:17:29.6321", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:17:29.6321", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:17:29.6321", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 88.4304ms", "ElapsedMilliseconds": 88.4304, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:17:29.6321", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 126.7125ms", "ElapsedMilliseconds": 126.7125, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:17:29.6792", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:17:29.6968", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:17:29.8582", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:17:29.8860", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:17:29.8860", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:17:30.0686", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 174.4119ms", "ElapsedMilliseconds": 174.4119, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:17:30.0747", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:17:30.0747", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 6.2610ms", "ElapsedMilliseconds": 6.261, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:17:30.0747", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:17:30.1179", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 36.1599ms", "ElapsedMilliseconds": 36.1599, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:17:30.2498", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:17:30.5603", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 310.7301ms", "ElapsedMilliseconds": 310.7301, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:17:31.6534", "level": "INFO", "message": "Executed DbCommand (73ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "73", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:17:31.7337", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:17:31.7501", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 1854.9595ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 1854.9595, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:17:31.7501", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:17:31.7660", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 2086.8638ms", "ElapsedMilliseconds": 2086.8638, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:17:35.6930", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=21 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=21", "EventId": 1 }
{ "time": "2024-04-16 15:17:35.6930", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:17:35.6930", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=21 - 204 - - 1.6756ms", "ElapsedMilliseconds": 1.6756, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=21", "EventId": 2 }
{ "time": "2024-04-16 15:17:35.7357", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=21 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=21", "EventId": 1 }
{ "time": "2024-04-16 15:17:35.7357", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:17:35.7482", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:17:35.7739", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:17:35.9945", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:17:36.2041", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "elapsed": "4", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:17:36.2251", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Delete.TicketDeleteResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Delete.TicketDeleteResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:17:36.2452", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 470.8887ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 470.8887, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:17:36.2452", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:17:36.2452", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=21 - 200 - application/json;+charset=utf-8 510.5854ms", "ElapsedMilliseconds": 510.5854, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=21", "EventId": 2 }
{ "time": "2024-04-16 15:17:44.5217", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=16 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=16", "EventId": 1 }
{ "time": "2024-04-16 15:17:44.5230", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:17:44.5230", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=16 - 204 - - 2.3575ms", "ElapsedMilliseconds": 2.3575, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=16", "EventId": 2 }
{ "time": "2024-04-16 15:17:44.7261", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=16 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=16", "EventId": 1 }
{ "time": "2024-04-16 15:17:44.7261", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:17:44.7375", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:17:44.7375", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:17:44.7894", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:17:44.7932", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "elapsed": "1", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:17:44.7932", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Delete.TicketDeleteResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Delete.TicketDeleteResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:17:44.7932", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 56.0262ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 56.0262, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:17:44.7932", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:17:44.7932", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=16 - 200 - application/json;+charset=utf-8 68.8344ms", "ElapsedMilliseconds": 68.8344, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=16", "EventId": 2 }
{ "time": "2024-04-16 15:17:52.5059", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:17:52.5059", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:17:52.5083", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 2.1890ms", "ElapsedMilliseconds": 2.189, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:17:52.7087", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:17:52.7087", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:17:52.7087", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:17:52.7087", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:17:52.7087", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:17:52.7087", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:17:52.7087", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 6.6525ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 6.6525, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:17:52.7087", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:17:52.7185", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 9.8432ms", "ElapsedMilliseconds": 9.8432, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:20:29.2719", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:20:29.2719", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:20:29.2719", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 2.5706ms", "ElapsedMilliseconds": 2.5706, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:20:29.2909", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:20:29.2909", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:20:29.2909", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:20:29.2909", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:20:29.2984", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:20:29.2984", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:20:29.2984", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 8.2856ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 8.2856, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:20:29.2984", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:20:29.2984", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 11.6239ms", "ElapsedMilliseconds": 11.6239, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:20:33.2702", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:20:33.2702", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:20:33.2702", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:20:33.2702", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:20:33.2702", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:20:33.2702", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:20:33.2702", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 4.5423ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 4.5423, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:20:33.2702", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:20:33.2702", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 8.5507ms", "ElapsedMilliseconds": 8.5507, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:21:04.5900", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:21:04.5900", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:21:04.5900", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.6790ms", "ElapsedMilliseconds": 1.679, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:21:04.6268", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:21:04.6268", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:21:04.6268", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:21:04.6268", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:21:04.6268", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:21:04.6268", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:21:04.6268", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 5.4314ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 5.4314, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:21:04.6268", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:21:04.6268", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 7.9330ms", "ElapsedMilliseconds": 7.933, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:21:10.3174", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:21:10.3174", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:21:10.3174", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.6275ms", "ElapsedMilliseconds": 1.6275, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:21:10.3240", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:21:10.3240", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:21:10.3240", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:21:10.3240", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:21:10.3240", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:21:10.3240", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:21:10.3240", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.9531ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.9531, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:21:10.3240", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:21:10.3240", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 5.7571ms", "ElapsedMilliseconds": 5.7571, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:21:21.2454", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:21:21.2454", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:21:21.2454", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.6098ms", "ElapsedMilliseconds": 1.6098, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:21:21.2454", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:21:21.2454", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:21:21.2454", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:21:21.2454", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:21:21.2454", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:21:21.2454", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:21:21.2454", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.3177ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.3177, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:21:21.2454", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:21:21.2454", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.2509ms", "ElapsedMilliseconds": 3.2509, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:21:27.6098", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:21:27.6098", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:21:27.6098", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.9792ms", "ElapsedMilliseconds": 0.9792, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:21:27.6098", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:21:27.6098", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:21:27.6098", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:21:27.6098", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:21:27.6098", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:21:27.6098", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:21:27.6098", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.9003ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.9003, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:21:27.6098", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:21:27.6098", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 6.0419ms", "ElapsedMilliseconds": 6.0419, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:21:30.2775", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:21:30.2775", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:21:30.2775", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:21:30.2775", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:21:30.2775", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:21:30.2775", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:21:30.2775", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.7455ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.7455, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:21:30.2775", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:21:30.2775", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 5.9670ms", "ElapsedMilliseconds": 5.967, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:21:32.3787", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:21:32.3787", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:21:32.3787", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:21:32.3787", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:21:32.3787", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:21:32.3787", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:21:32.3787", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.7985ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.7985, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:21:32.3787", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:21:32.3787", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 6.9022ms", "ElapsedMilliseconds": 6.9022, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:21:36.2760", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:21:36.2760", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:21:36.2760", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.1384ms", "ElapsedMilliseconds": 1.1384, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:21:36.2760", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:21:36.2760", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:21:36.2760", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:21:36.2939", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:21:36.2939", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:21:36.2939", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:21:36.2939", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 4.4815ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 4.4815, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:21:36.2939", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:21:36.2939", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 6.3112ms", "ElapsedMilliseconds": 6.3112, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:21:55.3445", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:21:55.3445", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:21:55.3445", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.4908ms", "ElapsedMilliseconds": 1.4908, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:21:55.3445", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:21:55.3445", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:21:55.3445", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:21:55.3445", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:21:55.3445", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:21:55.3578", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:21:55.3578", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 4.4587ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 4.4587, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:21:55.3578", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:21:55.3578", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 6.7507ms", "ElapsedMilliseconds": 6.7507, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:22:07.5243", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:22:07.5243", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:22:07.5243", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.0889ms", "ElapsedMilliseconds": 1.0889, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:22:07.5466", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:22:07.5466", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:22:07.5466", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:22:07.5466", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:22:07.5466", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:22:07.5466", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:22:07.5466", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 4.6764ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 4.6764, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:22:07.5466", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:22:07.5466", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 7.0520ms", "ElapsedMilliseconds": 7.052, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:22:12.4341", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:22:12.4341", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:22:12.4341", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:22:12.4341", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:22:12.4341", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:22:12.4341", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:22:12.4341", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 4.6775ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 4.6775, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:22:12.4341", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:22:12.4341", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 7.6496ms", "ElapsedMilliseconds": 7.6496, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:22:13.4603", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:22:13.4603", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:22:13.4603", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 2.5796ms", "ElapsedMilliseconds": 2.5796, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:22:13.4603", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:22:13.4603", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:22:13.4603", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:22:13.4603", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:22:13.4773", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:22:13.4773", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:22:13.4773", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 4.9834ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 4.9834, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:22:13.4773", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:22:13.4773", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 7.5324ms", "ElapsedMilliseconds": 7.5324, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:22:19.2884", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:22:19.2884", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:22:19.2884", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.5951ms", "ElapsedMilliseconds": 1.5951, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:22:19.3170", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:22:19.3170", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:22:19.3170", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:22:19.3170", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:22:19.3170", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:22:19.3170", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:22:19.3170", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 4.5206ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 4.5206, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:22:19.3170", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:22:19.3170", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 6.4539ms", "ElapsedMilliseconds": 6.4539, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:22:21.5395", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:22:21.5395", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:22:21.5395", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:22:21.5395", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:22:21.5395", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:22:21.5395", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:22:21.5395", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.863ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.863, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:22:21.5395", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:22:21.5395", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 8.5477ms", "ElapsedMilliseconds": 8.5477, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:22:23.2791", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:22:23.2791", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:22:23.2791", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:22:23.2791", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:22:23.2791", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:22:23.2791", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:22:23.2791", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 4.2433ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 4.2433, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:22:23.2791", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:22:23.2791", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 6.7442ms", "ElapsedMilliseconds": 6.7442, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:22:27.3726", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:22:27.3726", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:22:27.3726", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.5122ms", "ElapsedMilliseconds": 1.5122, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:22:27.3959", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:22:27.3959", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:22:27.3959", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:22:27.3959", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:22:27.3959", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:22:27.3959", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:22:27.3959", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 4.3055ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 4.3055, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:22:27.3959", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:22:27.3959", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 6.5457ms", "ElapsedMilliseconds": 6.5457, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:22:37.2515", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:22:37.2515", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:22:37.2515", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.9255ms", "ElapsedMilliseconds": 0.9255, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:22:37.2515", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:22:37.2645", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:22:37.2645", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:22:37.2645", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:22:37.3079", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:22:37.3079", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:22:37.3079", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 43.3709ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 43.3709, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:22:37.3079", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:22:37.3079", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 45.4171ms", "ElapsedMilliseconds": 45.4171, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:22:42.4156", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:22:42.4163", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:22:42.4163", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:22:42.4163", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:22:42.4163", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:22:42.4163", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:22:42.4163", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 4.2965ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 4.2965, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:22:42.4163", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:22:42.4163", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 6.4192ms", "ElapsedMilliseconds": 6.4192, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:22:48.4564", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:22:48.4577", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:22:48.4577", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.5456ms", "ElapsedMilliseconds": 1.5456, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:22:48.4639", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:22:48.4639", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:22:48.4639", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:22:48.4639", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:22:48.4639", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:22:48.4639", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:22:48.4639", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.6383ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.6383, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:22:48.4639", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:22:48.4639", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 5.0708ms", "ElapsedMilliseconds": 5.0708, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:22:53.0448", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:22:53.0457", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:22:53.0457", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:22:53.0457", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:22:53.0457", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:22:53.0457", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:22:53.0457", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.6584ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.6584, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:22:53.0457", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:22:53.0457", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 6.0013ms", "ElapsedMilliseconds": 6.0013, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:25:08.2164", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:25:08.2164", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:25:08.2164", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.6413ms", "ElapsedMilliseconds": 1.6413, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:25:08.2413", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:25:08.2413", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:25:08.2413", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:25:08.2413", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:25:08.2413", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:25:08.2413", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:25:08.2664", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 23.4584ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 23.4584, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:25:08.2664", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:25:08.2664", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 25.4531ms", "ElapsedMilliseconds": 25.4531, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:25:09.4831", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-16 15:25:09.4831", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:25:09.4831", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 204 - - 1.2296ms", "ElapsedMilliseconds": 1.2296, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-16 15:25:09.5719", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-16 15:25:09.5719", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:25:09.5719", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenNotYetValidException: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '16.04.2024 14:46:35', Current time (UTC): '16.04.2024 11:25:09'.\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-16 15:25:09.6192", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '16.04.2024 14:46:35', Current time (UTC): '16.04.2024 11:25:09'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '16.04.2024 14:46:35', Current time (UTC): '16.04.2024 11:25:09'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-16 15:25:09.6192", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-16 15:25:09.6294", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-16 15:25:09.6294", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 401 0 - 57.7885ms", "ElapsedMilliseconds": 57.7885, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-16 15:25:12.6831", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:25:12.6831", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:25:12.6831", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:25:12.6831", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:25:12.6831", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:25:12.6831", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:25:12.6831", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.9505ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.9505, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:25:12.6831", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:25:12.6831", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 6.3487ms", "ElapsedMilliseconds": 6.3487, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:25:22.7736", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:25:22.7736", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:25:22.7736", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/User/GetLicenses - 204 - - 1.3810ms", "ElapsedMilliseconds": 1.381, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:25:22.7736", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:25:22.7736", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:25:22.7736", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:25:22.7736", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:25:22.8100", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "4", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:25:22.8833", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:25:22.9466", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:25:22.9466", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 160.7443ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 160.7443, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:25:22.9466", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:25:22.9466", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/User/GetLicenses - 200 - application/json;+charset=utf-8 168.5919ms", "ElapsedMilliseconds": 168.5919, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:25:31.0729", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Auth/logout - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Auth/logout", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:25:31.0729", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:25:31.0729", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Auth/logout - 204 - - 0.8205ms", "ElapsedMilliseconds": 0.8205, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Auth/logout", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:25:31.0729", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.102:5274/api/Auth/logout - application/x-www-form-urlencoded 583", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/x-www-form-urlencoded", "ContentLength": 583, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Auth/logout", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:25:31.0729", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:25:31.0891", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenNotYetValidException: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '16.04.2024 14:46:35', Current time (UTC): '16.04.2024 11:25:31'.\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-16 15:25:31.0891", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '16.04.2024 14:46:35', Current time (UTC): '16.04.2024 11:25:31'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '16.04.2024 14:46:35', Current time (UTC): '16.04.2024 11:25:31'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-16 15:25:31.0891", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-16 15:25:31.0891", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-16 15:25:31.0891", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.102:5274/api/Auth/logout - 401 0 - 5.9498ms", "ElapsedMilliseconds": 5.9498, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Auth/logout", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:26:12.3226", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Auth/Login - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:26:12.3226", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:26:12.3226", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Auth/Login - 204 - - 1.1653ms", "ElapsedMilliseconds": 1.1653, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:26:12.3485", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.102:5274/api/Auth/Login - application/json 65", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 65, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:26:12.3485", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:26:12.3485", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:26:12.3606", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:26:12.4390", "level": "INFO", "message": "Executed DbCommand (5ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "5", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:12.4537", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:12.4930", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:12.5479", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:12.6101", "level": "INFO", "message": "Executed DbCommand (5ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "5", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:12.6101", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:26:12.6101", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 260.4925ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 260.4925, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:26:12.6101", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:26:12.6101", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.102:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 273.0644ms", "ElapsedMilliseconds": 273.0644, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:26:12.7049", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-16 15:26:12.7049", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:26:12.7049", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 204 - - 0.3798ms", "ElapsedMilliseconds": 0.3798, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-16 15:26:12.7209", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-16 15:26:12.7209", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:26:12.7209", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:26:12.7295", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:26:12.8237", "level": "INFO", "message": "Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "5", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:12.8326", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-16 15:26:12.8326", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-16 15:26:12.8326", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:12.9996", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:12.9996", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:13.0150", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:13.0150", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:13.0435", "level": "WARN", "message": "The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.", "EventId": 10103, "EventName": "Microsoft.EntityFrameworkCore.Query.FirstWithoutOrderByAndFilterWarning" }
{ "time": "2024-04-16 15:26:13.0508", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:13.0852", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "3", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:13.0852", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:13.0852", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:13.0942", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:13.0942", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:13.0942", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:13.0942", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:13.1008", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:13.1008", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:13.1008", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:26:13.1008", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 380.5891ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 380.5891, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:26:13.1008", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:26:13.1008", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 389.7022ms", "ElapsedMilliseconds": 389.7022, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-16 15:26:17.6259", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:26:17.6259", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:26:17.6259", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.0221ms", "ElapsedMilliseconds": 1.0221, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:26:17.6259", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:26:17.6259", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:26:17.6259", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:26:17.6259", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:26:17.6259", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:17.6434", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:26:17.6434", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 4.3948ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 4.3948, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:26:17.6434", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:26:17.6434", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 6.7204ms", "ElapsedMilliseconds": 6.7204, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:26:18.8631", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-16 15:26:18.8631", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:26:18.8631", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 204 - - 0.6883ms", "ElapsedMilliseconds": 0.6883, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-16 15:26:18.8631", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-16 15:26:18.8789", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:26:18.8789", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:26:18.8789", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:26:18.8789", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:18.8789", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-16 15:26:18.8789", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-16 15:26:18.8943", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:18.8943", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:18.8943", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:18.8943", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:18.8943", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:18.8943", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:26:18.8943", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 20.4999ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 20.4999, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:26:18.8943", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:26:18.8943", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 22.4191ms", "ElapsedMilliseconds": 22.4191, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-16 15:26:20.7096", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-16 15:26:20.7096", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:26:20.7096", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - 204 - - 1.0531ms", "ElapsedMilliseconds": 1.0531, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-16 15:26:20.7096", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-16 15:26:20.7096", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:26:20.7096", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:26:20.7096", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:26:20.7279", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:20.7279", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:20.7279", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:20.7279", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:20.7279", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:20.7279", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:20.7279", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:26:20.7279", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 11.8401ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 11.8401, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:26:20.7279", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:26:20.7279", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 13.3962ms", "ElapsedMilliseconds": 13.3962, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-16 15:26:24.4882", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Licenses/PaginationLicenses?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-16 15:26:24.4882", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:26:24.4882", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Licenses/PaginationLicenses?PageNumber=4&PageSize=5&sortBy=status - 204 - - 0.9063ms", "ElapsedMilliseconds": 0.9063, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-16 15:26:24.4882", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Licenses/PaginationLicenses?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-16 15:26:24.4882", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:26:24.4882", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:26:24.4882", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:26:24.4882", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:24.5069", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:24.5069", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:24.5069", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:24.5069", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:26:24.5069", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 7.5841ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 7.5841, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:26:24.5069", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:26:24.5069", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Licenses/PaginationLicenses?PageNumber=4&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 9.5527ms", "ElapsedMilliseconds": 9.5527, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-16 15:26:41.1486", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api//Licenses/UpdateStatus - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api//Licenses/UpdateStatus", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:26:41.1486", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:26:41.1486", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api//Licenses/UpdateStatus - 204 - - 1.0244ms", "ElapsedMilliseconds": 1.0244, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api//Licenses/UpdateStatus", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:26:41.1617", "level": "INFO", "message": "Request starting HTTP/1.1 PUT http://192.168.0.102:5274/api//Licenses/UpdateStatus - application/json 28", "Protocol": "HTTP/1.1", "Method": "PUT", "ContentType": "application/json", "ContentLength": 28, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api//Licenses/UpdateStatus", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:26:41.1617", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:26:41.1617", "level": "INFO", "message": "Request finished HTTP/1.1 PUT http://192.168.0.102:5274/api//Licenses/UpdateStatus - 404 0 - 1.0317ms", "ElapsedMilliseconds": 1.0317, "StatusCode": 404, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "PUT", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api//Licenses/UpdateStatus", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:26:41.1617", "level": "INFO", "message": "Request reached the end of the middleware pipeline without being handled by application code. Request path: PUT http://192.168.0.102:5274/api//Licenses/UpdateStatus, Response status code: 404", "Method": "PUT", "Scheme": "http", "Host": {"Value":"192.168.0.102:5274", "HasValue":true, "Host":"192.168.0.102", "Port":5274}, "PathBase": {"Value":"", "HasValue":false}, "Path": {"Value":"/api//Licenses/UpdateStatus", "HasValue":true}, "StatusCode": 404, "EventId": 16 }
{ "time": "2024-04-16 15:26:50.6823", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:26:50.6823", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:26:50.6823", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.1285ms", "ElapsedMilliseconds": 1.1285, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:26:50.7870", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:26:50.7870", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:26:50.7870", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:26:50.7870", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:26:50.7900", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:50.7900", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:26:50.7900", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.1793ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.1793, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:26:50.7900", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:26:50.7900", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.4308ms", "ElapsedMilliseconds": 4.4308, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:26:53.9544", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:26:53.9544", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:26:53.9560", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:26:53.9560", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:26:53.9560", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:26:53.9560", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:26:53.9595", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.3324ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.3324, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:26:53.9595", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:26:53.9595", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 5.6262ms", "ElapsedMilliseconds": 5.6262, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:27:19.4398", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:27:19.4398", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:27:19.4398", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.0413ms", "ElapsedMilliseconds": 1.0413, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:27:19.4651", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:27:19.4651", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:27:19.4651", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:27:19.4651", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:27:19.4651", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:27:19.4651", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:27:19.4651", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.977ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.977, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:27:19.4651", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:27:19.4651", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.2520ms", "ElapsedMilliseconds": 4.252, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:27:21.5841", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:27:21.5850", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:27:21.5850", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:27:21.5850", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:27:21.5850", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:27:21.5850", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:27:21.5850", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.8416ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.8416, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:27:21.5850", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:27:21.5850", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 6.2896ms", "ElapsedMilliseconds": 6.2896, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:27:24.8737", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:27:24.8737", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:27:24.8737", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:27:24.8737", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:27:24.8737", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:27:24.8737", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:27:24.8737", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.0771ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.0771, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:27:24.8737", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:27:24.8737", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.8503ms", "ElapsedMilliseconds": 4.8503, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:27:27.2145", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:27:27.2152", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:27:27.2152", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.9075ms", "ElapsedMilliseconds": 0.9075, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:27:27.2152", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:27:27.2152", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:27:27.2152", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:27:27.2152", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:27:27.2152", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:27:27.2152", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:27:27.2152", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.1067ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.1067, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:27:27.2152", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:27:27.2152", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.3454ms", "ElapsedMilliseconds": 4.3454, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:27:40.7189", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:27:40.7189", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:27:40.7189", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.9020ms", "ElapsedMilliseconds": 0.902, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:27:40.8377", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:27:40.8377", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:27:40.8377", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:27:40.8377", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:27:40.8785", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:27:40.8785", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:27:40.8785", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 40.7069ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 40.7069, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:27:40.8785", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:27:40.8785", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 41.8525ms", "ElapsedMilliseconds": 41.8525, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:27:42.7430", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:27:42.7441", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:27:42.7441", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:27:42.7441", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:27:42.7441", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:27:42.7441", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:27:42.7441", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.1947ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.1947, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:27:42.7441", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:27:42.7441", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 5.4502ms", "ElapsedMilliseconds": 5.4502, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:28:09.2700", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:28:09.2700", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:28:09.2700", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.0904ms", "ElapsedMilliseconds": 1.0904, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:28:09.2791", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:28:09.2791", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:28:09.2791", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:28:09.2791", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:28:09.2791", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:28:09.2791", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:28:09.2791", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.4406ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.4406, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:28:09.2791", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:28:09.2791", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 5.0640ms", "ElapsedMilliseconds": 5.064, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:28:17.5592", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:28:17.5592", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:28:17.5592", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.8661ms", "ElapsedMilliseconds": 0.8661, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:28:17.5592", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:28:17.5592", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:28:17.5592", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:28:17.5592", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:28:17.5592", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:28:17.5592", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:28:17.5756", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.2298ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.2298, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:28:17.5756", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:28:17.5756", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.8596ms", "ElapsedMilliseconds": 4.8596, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:28:23.2983", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:28:23.2983", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:28:23.2983", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.2875ms", "ElapsedMilliseconds": 1.2875, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:28:23.2983", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:28:23.2983", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:28:23.2983", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:28:23.2983", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:28:23.2983", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:28:23.3152", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:28:23.3152", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.4705ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.4705, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:28:23.3152", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:28:23.3152", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.9697ms", "ElapsedMilliseconds": 4.9697, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:28:24.7228", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:28:24.7228", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:28:24.7244", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:28:24.7244", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:28:24.7244", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:28:24.7244", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:28:24.7277", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.9051ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.9051, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:28:24.7277", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:28:24.7277", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 5.1651ms", "ElapsedMilliseconds": 5.1651, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:29:52.2294", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:29:52.2302", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:29:52.2302", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.9825ms", "ElapsedMilliseconds": 0.9825, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:29:52.2302", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:29:52.2302", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:29:52.2302", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:29:52.2302", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:29:52.2302", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:29:52.2302", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:29:52.2302", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.2861ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.2861, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:29:52.2302", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:29:52.2302", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.9322ms", "ElapsedMilliseconds": 4.9322, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:30:02.3578", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:30:02.3578", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:30:02.3578", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.6733ms", "ElapsedMilliseconds": 0.6733, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:30:02.6361", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:30:02.6361", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:30:02.6361", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:30:02.6361", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:30:02.6361", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:30:02.6361", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:30:02.6361", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.5342ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.5342, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:30:02.6361", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:30:02.6361", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.8864ms", "ElapsedMilliseconds": 4.8864, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:30:10.4388", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:30:10.4388", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:30:10.4388", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.2236ms", "ElapsedMilliseconds": 1.2236, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:30:10.4388", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:30:10.4388", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:30:10.4388", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:30:10.4388", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:30:10.4388", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:30:10.4388", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:30:10.4388", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.6766ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.6766, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:30:10.4388", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:30:10.4388", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.8021ms", "ElapsedMilliseconds": 3.8021, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:30:16.6759", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:30:16.6759", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:30:16.6759", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.2091ms", "ElapsedMilliseconds": 1.2091, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:30:17.2822", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:30:17.2822", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:30:17.2822", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:30:17.2822", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:30:17.2822", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:30:17.2864", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:30:17.2864", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.5297ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.5297, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:30:17.2864", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:30:17.2864", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 5.0470ms", "ElapsedMilliseconds": 5.047, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:30:21.2806", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:30:21.2806", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:30:21.2806", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:30:21.2806", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:30:21.2806", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:30:21.2806", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:30:21.2806", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.4353ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.4353, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:30:21.2806", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:30:21.2806", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 5.6406ms", "ElapsedMilliseconds": 5.6406, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:30:35.0025", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=35 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=35", "EventId": 1 }
{ "time": "2024-04-16 15:30:35.0025", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:30:35.0025", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=35 - 204 - - 1.0472ms", "ElapsedMilliseconds": 1.0472, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=35", "EventId": 2 }
{ "time": "2024-04-16 15:30:35.1009", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=35 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=35", "EventId": 1 }
{ "time": "2024-04-16 15:30:35.1009", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:30:35.1009", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:30:35.1009", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:30:35.1009", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:30:35.1009", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "elapsed": "3", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:30:35.1009", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Delete.TicketDeleteResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Delete.TicketDeleteResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:30:35.1009", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 7.9528ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 7.9528, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:30:35.1009", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:30:35.1009", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=35 - 200 - application/json;+charset=utf-8 9.0662ms", "ElapsedMilliseconds": 9.0662, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=35", "EventId": 2 }
{ "time": "2024-04-16 15:30:38.4739", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:30:38.4744", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:30:38.4744", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.7053ms", "ElapsedMilliseconds": 0.7053, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:30:38.4744", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:30:38.4744", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:30:38.4744", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:30:38.4744", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:30:38.4744", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:30:38.4744", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:30:38.4744", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.4449ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.4449, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:30:38.4744", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:30:38.4744", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.6397ms", "ElapsedMilliseconds": 4.6397, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:30:47.2507", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:30:47.2507", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:30:47.2507", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.7163ms", "ElapsedMilliseconds": 0.7163, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:30:47.2507", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:30:47.2507", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:30:47.2507", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:30:47.2507", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:30:47.2507", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:30:47.2507", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:30:47.2507", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.0873ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.0873, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:30:47.2507", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:30:47.2662", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.5120ms", "ElapsedMilliseconds": 4.512, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:30:50.5564", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:30:50.5573", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:30:50.5573", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:30:50.5573", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:30:50.5573", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:30:50.5573", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:30:50.5573", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.5612ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.5612, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:30:50.5573", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:30:50.5573", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 5.7263ms", "ElapsedMilliseconds": 5.7263, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:31:01.3959", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=11 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=11", "EventId": 1 }
{ "time": "2024-04-16 15:31:01.3959", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:31:01.3959", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=11 - 204 - - 1.3358ms", "ElapsedMilliseconds": 1.3358, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=11", "EventId": 2 }
{ "time": "2024-04-16 15:31:01.4435", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=11 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=11", "EventId": 1 }
{ "time": "2024-04-16 15:31:01.4435", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:31:01.4444", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:31:01.4444", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:31:01.4444", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:31:01.4444", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "elapsed": "2", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:31:01.4444", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Delete.TicketDeleteResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Delete.TicketDeleteResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:31:01.4444", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 5.9131ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 5.9131, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:31:01.4444", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:31:01.4444", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=11 - 200 - application/json;+charset=utf-8 7.2806ms", "ElapsedMilliseconds": 7.2806, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=11", "EventId": 2 }
{ "time": "2024-04-16 15:33:45.3405", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:33:45.3405", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:33:45.3405", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.9888ms", "ElapsedMilliseconds": 0.9888, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:33:45.5402", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:33:45.5402", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:33:45.5402", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:33:45.5402", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:33:45.5857", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:33:45.5857", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:33:45.5857", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 44.9888ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 44.9888, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:33:45.5857", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:33:45.5871", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 46.8255ms", "ElapsedMilliseconds": 46.8255, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:33:49.2237", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:33:49.2237", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:33:49.2237", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:33:49.2237", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:33:49.2237", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:33:49.2237", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:33:49.2286", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.1587ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.1587, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:33:49.2286", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:33:49.2286", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 5.1423ms", "ElapsedMilliseconds": 5.1423, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:33:57.5166", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:33:57.5166", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:33:57.5166", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.0469ms", "ElapsedMilliseconds": 1.0469, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:33:57.7172", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:33:57.7172", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:33:57.7172", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:33:57.7172", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:33:57.7213", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:33:57.7213", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:33:57.7213", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.1973ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.1973, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:33:57.7213", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:33:57.7213", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 5.2781ms", "ElapsedMilliseconds": 5.2781, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:34:00.2818", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=11 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=11", "EventId": 1 }
{ "time": "2024-04-16 15:34:00.2818", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:34:00.2818", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=11 - 204 - - 1.0606ms", "ElapsedMilliseconds": 1.0606, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=11", "EventId": 2 }
{ "time": "2024-04-16 15:34:00.2960", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=11 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=11", "EventId": 1 }
{ "time": "2024-04-16 15:34:00.2960", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:34:00.2960", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:34:00.2960", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:34:00.2960", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:34:00.2960", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 4.2397ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 4.2397, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:34:00.2960", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:34:00.3486", "level": "ERROR", "message": "{\"Errors\":null,\"Message\":\"Resource not found\",\"Data\":{},\"InnerException\":null,\"HelpLink\":null,\"Source\":\"Core\",\"HResult\":-2146233088,\"StackTrace\":\"   at Core.Repositories.Repository`1.GetSingle(Expression`1 expression, Boolean throwException) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Core\\\\Repositories\\\\Repository.cs:line 61\\r\\n   at Business.Services.TicketService.DeleteTicket(Int32 id) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Application\\\\Services\\\\TicketService.cs:line 53\\r\\n   at Api.Controllers.TicketController.DeleteTicket(Int32 id) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\TicketController.cs:line 137\\r\\n   at lambda_method64(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\"}" }
{ "time": "2024-04-16 15:34:00.3587", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=11 - 400 - application/json 62.6758ms", "ElapsedMilliseconds": 62.6758, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=11", "EventId": 2 }
{ "time": "2024-04-16 15:34:11.9413", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:34:11.9413", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:34:11.9426", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.2660ms", "ElapsedMilliseconds": 1.266, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:34:12.0544", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:34:12.0544", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:34:12.0544", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:34:12.0544", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:34:12.0544", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:34:12.0586", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:34:12.0586", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.9536ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.9536, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:34:12.0586", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:34:12.0586", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.7316ms", "ElapsedMilliseconds": 4.7316, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:34:16.7602", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=19 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=19", "EventId": 1 }
{ "time": "2024-04-16 15:34:16.7602", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:34:16.7602", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=19 - 204 - - 2.0624ms", "ElapsedMilliseconds": 2.0624, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=19", "EventId": 2 }
{ "time": "2024-04-16 15:34:16.9557", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=19 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=19", "EventId": 1 }
{ "time": "2024-04-16 15:34:16.9557", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:34:16.9557", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:34:16.9557", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:34:16.9557", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:34:16.9632", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "elapsed": "3", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:34:16.9632", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Delete.TicketDeleteResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Delete.TicketDeleteResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:34:16.9632", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 7.1018ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 7.1018, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:34:16.9632", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:34:16.9632", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=19 - 200 - application/json;+charset=utf-8 9.0418ms", "ElapsedMilliseconds": 9.0418, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=19", "EventId": 2 }
{ "time": "2024-04-16 15:34:25.6536", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:34:25.6536", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:34:25.6536", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.2687ms", "ElapsedMilliseconds": 1.2687, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:34:25.6536", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:34:25.6536", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:34:25.6536", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:34:25.6536", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:34:25.6536", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:34:25.6536", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:34:25.6536", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.2701ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.2701, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:34:25.6536", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:34:25.6536", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.2449ms", "ElapsedMilliseconds": 4.2449, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:34:34.0293", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:34:34.0293", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:34:34.0293", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.6721ms", "ElapsedMilliseconds": 0.6721, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:34:34.0499", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:34:34.0499", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:34:34.0499", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:34:34.0499", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:34:34.0499", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:34:34.0499", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:34:34.0499", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.6661ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.6661, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:34:34.0499", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:34:34.0536", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.6633ms", "ElapsedMilliseconds": 3.6633, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:34:40.2879", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:34:40.2879", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:34:40.2879", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.0017ms", "ElapsedMilliseconds": 1.0017, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:34:40.4930", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:34:40.4930", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:34:40.4930", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:34:40.4930", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:34:40.4930", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:34:40.4930", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:34:40.4930", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.4029ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.4029, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:34:40.4930", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:34:40.4965", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.5120ms", "ElapsedMilliseconds": 3.512, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:34:42.8464", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:34:42.8464", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:34:42.8464", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:34:42.8464", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:34:42.8464", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:34:42.8464", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:34:42.8464", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.6475ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.6475, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:34:42.8506", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:34:42.8506", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.3425ms", "ElapsedMilliseconds": 4.3425, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:34:49.5022", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:34:49.5022", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:34:49.5022", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.0160ms", "ElapsedMilliseconds": 1.016, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:34:49.5293", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:34:49.5293", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:34:49.5293", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:34:49.5293", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:34:49.5293", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:34:49.5293", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:34:49.5293", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.0013ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.0013, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:34:49.5293", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:34:49.5293", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.3559ms", "ElapsedMilliseconds": 4.3559, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:34:56.3543", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:34:56.3553", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:34:56.3553", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.0719ms", "ElapsedMilliseconds": 1.0719, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:34:56.3721", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:34:56.3721", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:34:56.3721", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:34:56.3721", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:34:56.3721", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:34:56.3721", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:34:56.3721", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.0088ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.0088, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:34:56.3721", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:34:56.3721", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.0198ms", "ElapsedMilliseconds": 4.0198, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:34:57.8934", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=19 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=19", "EventId": 1 }
{ "time": "2024-04-16 15:34:57.8941", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:34:57.8941", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=19 - 204 - - 0.9037ms", "ElapsedMilliseconds": 0.9037, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=19", "EventId": 2 }
{ "time": "2024-04-16 15:34:57.9359", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=19 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=19", "EventId": 1 }
{ "time": "2024-04-16 15:34:57.9359", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:34:57.9359", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:34:57.9359", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:34:57.9359", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:34:57.9359", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 2.6101ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 2.6101, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:34:57.9359", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:34:57.9436", "level": "ERROR", "message": "{\"Errors\":null,\"Message\":\"Resource not found\",\"Data\":{},\"InnerException\":null,\"HelpLink\":null,\"Source\":\"Core\",\"HResult\":-2146233088,\"StackTrace\":\"   at Core.Repositories.Repository`1.GetSingle(Expression`1 expression, Boolean throwException) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Core\\\\Repositories\\\\Repository.cs:line 61\\r\\n   at Business.Services.TicketService.DeleteTicket(Int32 id) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Application\\\\Services\\\\TicketService.cs:line 53\\r\\n   at Api.Controllers.TicketController.DeleteTicket(Int32 id) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\TicketController.cs:line 137\\r\\n   at lambda_method64(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\"}" }
{ "time": "2024-04-16 15:34:57.9493", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=19 - 400 - application/json 13.3176ms", "ElapsedMilliseconds": 13.3176, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=19", "EventId": 2 }
{ "time": "2024-04-16 15:35:03.5966", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:35:03.5966", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:03.5966", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.8028ms", "ElapsedMilliseconds": 0.8028, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:35:03.6570", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:35:03.6570", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:03.6570", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:35:03.6570", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:35:03.6570", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:35:03.6602", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:35:03.6602", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.6317ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.6317, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:35:03.6602", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:35:03.6602", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.5815ms", "ElapsedMilliseconds": 3.5815, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:35:08.8456", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=28 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=28", "EventId": 1 }
{ "time": "2024-04-16 15:35:08.8456", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:08.8456", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=28 - 204 - - 1.6911ms", "ElapsedMilliseconds": 1.6911, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=28", "EventId": 2 }
{ "time": "2024-04-16 15:35:08.8456", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=28 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=28", "EventId": 1 }
{ "time": "2024-04-16 15:35:08.8456", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:08.8456", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:35:08.8456", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:35:08.8456", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:35:08.8655", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "elapsed": "2", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:35:08.8655", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Delete.TicketDeleteResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Delete.TicketDeleteResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:35:08.8655", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 5.4612ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 5.4612, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:35:08.8655", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:35:08.8655", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=28 - 200 - application/json;+charset=utf-8 6.4682ms", "ElapsedMilliseconds": 6.4682, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=28", "EventId": 2 }
{ "time": "2024-04-16 15:35:09.5645", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:35:09.5645", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:09.5645", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.3360ms", "ElapsedMilliseconds": 0.336, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:35:09.6509", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:35:09.6509", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:09.6509", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:35:09.6509", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:35:09.6509", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:35:09.6509", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:35:09.6509", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.3372ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.3372, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:35:09.6509", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:35:09.6509", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.1846ms", "ElapsedMilliseconds": 3.1846, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:35:16.5337", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:35:16.5337", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:16.5337", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.2788ms", "ElapsedMilliseconds": 1.2788, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:35:16.5337", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:35:16.5337", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:16.5337", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:35:16.5337", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:35:16.5337", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:35:16.5337", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:35:16.5337", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.4026ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.4026, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:35:16.5337", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:35:16.5465", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.4691ms", "ElapsedMilliseconds": 3.4691, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:35:19.3796", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:35:19.3796", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:19.3796", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:35:19.3796", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:35:19.3796", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:35:19.3796", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:35:19.3838", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.8016ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.8016, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:35:19.3838", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:35:19.3838", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.3457ms", "ElapsedMilliseconds": 4.3457, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:35:24.8424", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:35:24.8424", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:24.8424", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 1.1997ms", "ElapsedMilliseconds": 1.1997, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:35:25.1381", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:35:25.1381", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:25.1381", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:35:25.1381", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:35:25.1408", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:35:25.1408", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:35:25.1408", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.7264ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.7264, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:35:25.1408", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:35:25.1408", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.7387ms", "ElapsedMilliseconds": 3.7387, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:35:26.3320", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:35:26.3320", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:26.3320", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:35:26.3320", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:35:26.3320", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:35:26.3320", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:35:26.3320", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.4092ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.4092, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:35:26.3362", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:35:26.3362", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.3820ms", "ElapsedMilliseconds": 4.382, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:35:27.2587", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:35:27.2587", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:27.2587", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:35:27.2587", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:35:27.2612", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:35:27.2612", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:35:27.2612", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.4714ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.4714, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:35:27.2612", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:35:27.2612", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.5439ms", "ElapsedMilliseconds": 3.5439, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:35:28.2254", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:35:28.2264", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:28.2264", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:35:28.2264", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:35:28.2264", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:35:28.2264", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:35:28.2264", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.4557ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.4557, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:35:28.2264", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:35:28.2264", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.3515ms", "ElapsedMilliseconds": 4.3515, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:35:29.3243", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:35:29.3253", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:29.3253", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:35:29.3253", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:35:29.3253", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:35:29.3253", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:35:29.3253", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.34ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.34, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:35:29.3253", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:35:29.3253", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.2636ms", "ElapsedMilliseconds": 4.2636, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:35:49.6706", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:35:49.6706", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:49.6706", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.9162ms", "ElapsedMilliseconds": 0.9162, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:35:49.6706", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:35:49.6706", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:49.6706", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:35:49.6706", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:35:49.6706", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:35:49.6706", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:35:49.6706", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.5328ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.5328, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:35:49.6706", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:35:49.6862", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.6964ms", "ElapsedMilliseconds": 3.6964, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:35:54.9838", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=12 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=12", "EventId": 1 }
{ "time": "2024-04-16 15:35:54.9838", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:54.9838", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=12 - 204 - - 1.0725ms", "ElapsedMilliseconds": 1.0725, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=12", "EventId": 2 }
{ "time": "2024-04-16 15:35:54.9946", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=12 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=12", "EventId": 1 }
{ "time": "2024-04-16 15:35:54.9946", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:54.9946", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:35:54.9946", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:35:54.9946", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:35:54.9946", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "elapsed": "2", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:35:54.9946", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Delete.TicketDeleteResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Delete.TicketDeleteResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:35:54.9946", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 5.5044ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 5.5044, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:35:54.9946", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:35:54.9946", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=12 - 200 - application/json;+charset=utf-8 6.3378ms", "ElapsedMilliseconds": 6.3378, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=12", "EventId": 2 }
{ "time": "2024-04-16 15:35:55.8103", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:35:55.8103", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:55.8106", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.2999ms", "ElapsedMilliseconds": 0.2999, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:35:55.8662", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:35:55.8662", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:55.8662", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:35:55.8662", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:35:55.8662", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:35:55.8662", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:35:55.8662", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.5622ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.5622, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:35:55.8662", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:35:55.8662", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.5080ms", "ElapsedMilliseconds": 3.508, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:35:58.6518", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=13 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=13", "EventId": 1 }
{ "time": "2024-04-16 15:35:58.6518", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:58.6518", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=13 - 204 - - 1.1301ms", "ElapsedMilliseconds": 1.1301, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=13", "EventId": 2 }
{ "time": "2024-04-16 15:35:58.6634", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=13 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=13", "EventId": 1 }
{ "time": "2024-04-16 15:35:58.6634", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:58.6634", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:35:58.6634", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:35:58.6634", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:35:58.6688", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "elapsed": "2", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:35:58.6688", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Delete.TicketDeleteResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Delete.TicketDeleteResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:35:58.6688", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 5.1818ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 5.1818, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:35:58.6688", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:35:58.6688", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=13 - 200 - application/json;+charset=utf-8 6.1123ms", "ElapsedMilliseconds": 6.1123, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=13", "EventId": 2 }
{ "time": "2024-04-16 15:35:59.2566", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:35:59.2566", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:35:59.2566", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:35:59.2566", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:35:59.2566", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:35:59.2566", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:35:59.2566", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.4234ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.4234, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:35:59.2566", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:35:59.2566", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.3867ms", "ElapsedMilliseconds": 3.3867, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:36:09.3187", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:36:09.3187", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:09.3194", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.7244ms", "ElapsedMilliseconds": 0.7244, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:36:09.3378", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:36:09.3378", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:09.3378", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:36:09.3378", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:36:09.3378", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:09.3378", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:36:09.3378", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.4607ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.4607, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:36:09.3378", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:36:09.3378", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.5189ms", "ElapsedMilliseconds": 3.5189, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:36:15.2471", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:36:15.2471", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:15.2471", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.9460ms", "ElapsedMilliseconds": 0.946, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:36:15.2914", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:36:15.2914", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:15.2914", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:36:15.2914", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:36:15.2914", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:15.2944", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:36:15.2944", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.399ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.399, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:36:15.2944", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:36:15.2944", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.3241ms", "ElapsedMilliseconds": 3.3241, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:36:18.3243", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:36:18.3243", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:18.3243", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:36:18.3243", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:36:18.3243", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:18.3243", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:36:18.3243", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.5937ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.5937, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:36:18.3243", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:36:18.3243", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.4148ms", "ElapsedMilliseconds": 4.4148, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:36:20.2685", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:36:20.2685", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:20.2685", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:36:20.2685", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:36:20.2685", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:20.2685", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:36:20.2685", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.9645ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.9645, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:36:20.2732", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:36:20.2732", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.8451ms", "ElapsedMilliseconds": 4.8451, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:36:29.1723", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=27 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=27", "EventId": 1 }
{ "time": "2024-04-16 15:36:29.1723", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:29.1723", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=27 - 204 - - 1.1711ms", "ElapsedMilliseconds": 1.1711, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=27", "EventId": 2 }
{ "time": "2024-04-16 15:36:29.2202", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=27 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=27", "EventId": 1 }
{ "time": "2024-04-16 15:36:29.2202", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:29.2202", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:36:29.2202", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:36:29.2202", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:29.2202", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "elapsed": "2", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:29.2202", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Delete.TicketDeleteResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Delete.TicketDeleteResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:36:29.2202", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 5.5155ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 5.5155, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:36:29.2202", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:36:29.2202", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=27 - 200 - application/json;+charset=utf-8 6.5459ms", "ElapsedMilliseconds": 6.5459, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=27", "EventId": 2 }
{ "time": "2024-04-16 15:36:29.8664", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:36:29.8664", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:29.8664", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.3152ms", "ElapsedMilliseconds": 0.3152, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:36:29.8664", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:36:29.8664", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:29.8664", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:36:29.8664", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:36:29.8664", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:29.8664", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:36:29.8664", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.3127ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.3127, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:36:29.8779", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:36:29.8779", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.6476ms", "ElapsedMilliseconds": 3.6476, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:36:34.5959", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=30 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=30", "EventId": 1 }
{ "time": "2024-04-16 15:36:34.5959", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:34.5959", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=30 - 204 - - 0.7723ms", "ElapsedMilliseconds": 0.7723, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=30", "EventId": 2 }
{ "time": "2024-04-16 15:36:34.5959", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=30 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=30", "EventId": 1 }
{ "time": "2024-04-16 15:36:34.5959", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:34.5959", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:36:34.5959", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:36:34.5959", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:34.5959", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "elapsed": "2", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:34.5959", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Delete.TicketDeleteResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Delete.TicketDeleteResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:36:34.5959", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 6.3581ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 6.3581, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:36:34.5959", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:36:34.5959", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=30 - 200 - application/json;+charset=utf-8 7.3617ms", "ElapsedMilliseconds": 7.3617, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=30", "EventId": 2 }
{ "time": "2024-04-16 15:36:35.0554", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:36:35.0554", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:35.0554", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.2997ms", "ElapsedMilliseconds": 0.2997, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:36:35.0670", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:36:35.0670", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:35.0670", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:36:35.0670", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:36:35.0670", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:35.0670", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:36:35.0670", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.2189ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.2189, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:36:35.0670", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:36:35.0670", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.1547ms", "ElapsedMilliseconds": 3.1547, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:36:39.8207", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=5 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=5", "EventId": 1 }
{ "time": "2024-04-16 15:36:39.8207", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:39.8207", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=5 - 204 - - 0.9292ms", "ElapsedMilliseconds": 0.9292, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=5", "EventId": 2 }
{ "time": "2024-04-16 15:36:39.8207", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=5 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=5", "EventId": 1 }
{ "time": "2024-04-16 15:36:39.8207", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:39.8207", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:36:39.8207", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:36:39.8321", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:39.8321", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "elapsed": "2", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:39.8321", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Delete.TicketDeleteResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Delete.TicketDeleteResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:36:39.8321", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 6.3564ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 6.3564, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:36:39.8321", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:36:39.8321", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=5 - 200 - application/json;+charset=utf-8 7.3514ms", "ElapsedMilliseconds": 7.3514, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=5", "EventId": 2 }
{ "time": "2024-04-16 15:36:40.5354", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:36:40.5354", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:40.5354", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.3319ms", "ElapsedMilliseconds": 0.3319, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:36:40.5354", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:36:40.5354", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:40.5354", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:36:40.5354", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:36:40.5354", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:40.5484", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:36:40.5484", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.4805ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.4805, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:36:40.5484", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:36:40.5484", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.4528ms", "ElapsedMilliseconds": 3.4528, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:36:44.1126", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=25 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=25", "EventId": 1 }
{ "time": "2024-04-16 15:36:44.1126", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:44.1126", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=25 - 204 - - 0.6988ms", "ElapsedMilliseconds": 0.6988, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=25", "EventId": 2 }
{ "time": "2024-04-16 15:36:44.1126", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=25 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=25", "EventId": 1 }
{ "time": "2024-04-16 15:36:44.1126", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:44.1126", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:36:44.1126", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:36:44.1126", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:44.1326", "level": "INFO", "message": "Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "elapsed": "8", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:44.1326", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Delete.TicketDeleteResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Delete.TicketDeleteResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:36:44.1326", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 11.5773ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 11.5773, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:36:44.1326", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:36:44.1326", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=25 - 200 - application/json;+charset=utf-8 12.5372ms", "ElapsedMilliseconds": 12.5372, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=25", "EventId": 2 }
{ "time": "2024-04-16 15:36:44.9333", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:36:44.9333", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:44.9333", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:36:44.9333", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:36:44.9333", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:44.9333", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:36:44.9333", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.2073ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.2073, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:36:44.9333", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:36:44.9333", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.1762ms", "ElapsedMilliseconds": 3.1762, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:36:49.1264", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=24 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=24", "EventId": 1 }
{ "time": "2024-04-16 15:36:49.1264", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:49.1264", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=24 - 204 - - 1.2057ms", "ElapsedMilliseconds": 1.2057, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=24", "EventId": 2 }
{ "time": "2024-04-16 15:36:49.4336", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=24 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=24", "EventId": 1 }
{ "time": "2024-04-16 15:36:49.4336", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:49.4336", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:36:49.4336", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:36:49.4369", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:49.4369", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "elapsed": "2", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:49.4369", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Delete.TicketDeleteResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Delete.TicketDeleteResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:36:49.4369", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 5.958ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 5.958, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:36:49.4369", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:36:49.4369", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=24 - 200 - application/json;+charset=utf-8 6.9351ms", "ElapsedMilliseconds": 6.9351, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=24", "EventId": 2 }
{ "time": "2024-04-16 15:36:49.9542", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:36:49.9542", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:49.9542", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.3261ms", "ElapsedMilliseconds": 0.3261, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:36:50.1521", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:36:50.1521", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:50.1521", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:36:50.1521", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:36:50.1521", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:50.1521", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:36:50.1521", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.4012ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.4012, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:36:50.1521", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:36:50.1521", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.2000ms", "ElapsedMilliseconds": 4.2, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:36:54.8584", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=34 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=34", "EventId": 1 }
{ "time": "2024-04-16 15:36:54.8584", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:54.8584", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=34 - 204 - - 0.9412ms", "ElapsedMilliseconds": 0.9412, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=34", "EventId": 2 }
{ "time": "2024-04-16 15:36:54.9466", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=34 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=34", "EventId": 1 }
{ "time": "2024-04-16 15:36:54.9466", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:54.9466", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:36:54.9466", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:36:54.9500", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:54.9500", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "elapsed": "2", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:54.9500", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Delete.TicketDeleteResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Delete.TicketDeleteResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:36:54.9500", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 6.3124ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 6.3124, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:36:54.9500", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:36:54.9500", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=34 - 200 - application/json;+charset=utf-8 7.2866ms", "ElapsedMilliseconds": 7.2866, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=34", "EventId": 2 }
{ "time": "2024-04-16 15:36:55.4717", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:36:55.4717", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:55.4717", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.3582ms", "ElapsedMilliseconds": 0.3582, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:36:55.7033", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:36:55.7033", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:36:55.7033", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:36:55.7033", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:36:55.7033", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:36:55.7033", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:36:55.7033", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.4113ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.4113, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:36:55.7033", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:36:55.7033", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.5095ms", "ElapsedMilliseconds": 3.5095, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:37:00.6374", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=6 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=6", "EventId": 1 }
{ "time": "2024-04-16 15:37:00.6374", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:00.6374", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=6 - 204 - - 0.9780ms", "ElapsedMilliseconds": 0.978, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=6", "EventId": 2 }
{ "time": "2024-04-16 15:37:00.7402", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=6 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=6", "EventId": 1 }
{ "time": "2024-04-16 15:37:00.7402", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:00.7402", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:37:00.7402", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:37:00.7436", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:37:00.7436", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "elapsed": "2", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:37:00.7436", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Delete.TicketDeleteResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Delete.TicketDeleteResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:37:00.7436", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 5.9651ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 5.9651, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:37:00.7436", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:37:00.7436", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=6 - 200 - application/json;+charset=utf-8 6.9881ms", "ElapsedMilliseconds": 6.9881, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=6", "EventId": 2 }
{ "time": "2024-04-16 15:37:01.1760", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:37:01.1760", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:01.1760", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.3182ms", "ElapsedMilliseconds": 0.3182, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:37:01.2519", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:37:01.2519", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:01.2519", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:37:01.2519", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:37:01.2519", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:37:01.2519", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:37:01.2519", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.3564ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.3564, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:37:01.2519", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:37:01.2519", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.2950ms", "ElapsedMilliseconds": 3.295, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:37:04.5890", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=7 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=7", "EventId": 1 }
{ "time": "2024-04-16 15:37:04.5890", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:04.5890", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=7 - 204 - - 1.0988ms", "ElapsedMilliseconds": 1.0988, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=7", "EventId": 2 }
{ "time": "2024-04-16 15:37:04.6886", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=7 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=7", "EventId": 1 }
{ "time": "2024-04-16 15:37:04.6886", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:04.6886", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:37:04.6886", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:37:04.6886", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:37:04.6886", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "elapsed": "2", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:37:04.6886", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Delete.TicketDeleteResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Delete.TicketDeleteResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:37:04.6886", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 5.8494ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 5.8494, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:37:04.6886", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:37:04.6886", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=7 - 200 - application/json;+charset=utf-8 6.8247ms", "ElapsedMilliseconds": 6.8247, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=7", "EventId": 2 }
{ "time": "2024-04-16 15:37:05.0921", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:37:05.0921", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:05.0921", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:37:05.0921", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:37:05.0921", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:37:05.0921", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:37:05.0921", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.4832ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.4832, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:37:05.0921", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:37:05.0921", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.4608ms", "ElapsedMilliseconds": 3.4608, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:37:09.4907", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=10 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=10", "EventId": 1 }
{ "time": "2024-04-16 15:37:09.4917", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:09.4917", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=10 - 204 - - 1.1238ms", "ElapsedMilliseconds": 1.1238, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=10", "EventId": 2 }
{ "time": "2024-04-16 15:37:09.6974", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=10 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=10", "EventId": 1 }
{ "time": "2024-04-16 15:37:09.6974", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:09.6974", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:37:09.6974", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:37:09.6974", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:37:09.6974", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "elapsed": "2", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:37:09.6974", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Delete.TicketDeleteResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Delete.TicketDeleteResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:37:09.6974", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 4.452ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 4.452, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:37:09.6974", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:37:09.6974", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=10 - 200 - application/json;+charset=utf-8 5.3411ms", "ElapsedMilliseconds": 5.3411, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=10", "EventId": 2 }
{ "time": "2024-04-16 15:37:10.4127", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:37:10.4127", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:10.4127", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.3280ms", "ElapsedMilliseconds": 0.328, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:37:10.6163", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:37:10.6163", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:10.6163", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:37:10.6163", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:37:10.6163", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:37:10.6163", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:37:10.6163", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.4467ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.4467, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:37:10.6163", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:37:10.6163", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.9005ms", "ElapsedMilliseconds": 3.9005, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:37:15.1190", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=38 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=38", "EventId": 1 }
{ "time": "2024-04-16 15:37:15.1190", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:15.1190", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=38 - 204 - - 0.9689ms", "ElapsedMilliseconds": 0.9689, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=38", "EventId": 2 }
{ "time": "2024-04-16 15:37:15.1301", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=38 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=38", "EventId": 1 }
{ "time": "2024-04-16 15:37:15.1301", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:15.1301", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:37:15.1301", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:37:15.1301", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:37:15.1530", "level": "INFO", "message": "Executed DbCommand (19ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "elapsed": "19", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:37:15.1530", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Delete.TicketDeleteResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Delete.TicketDeleteResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:37:15.1530", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 22.769ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 22.769, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:37:15.1530", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:37:15.1530", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=38 - 200 - application/json;+charset=utf-8 23.7686ms", "ElapsedMilliseconds": 23.7686, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=38", "EventId": 2 }
{ "time": "2024-04-16 15:37:15.6315", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:37:15.6315", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:15.6315", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.2569ms", "ElapsedMilliseconds": 0.2569, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:37:15.8351", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:37:15.8351", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:15.8351", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:37:15.8351", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:37:15.8379", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:37:15.8379", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:37:15.8379", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.5931ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.5931, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:37:15.8379", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:37:15.8379", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.6711ms", "ElapsedMilliseconds": 3.6711, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:37:51.0242", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=9 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=9", "EventId": 1 }
{ "time": "2024-04-16 15:37:51.0712", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:51.0712", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=9 - 204 - - 47.0464ms", "ElapsedMilliseconds": 47.0464, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=9", "EventId": 2 }
{ "time": "2024-04-16 15:37:51.3325", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=9 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=9", "EventId": 1 }
{ "time": "2024-04-16 15:37:51.3325", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:51.3325", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=9 - 204 - - 0.1639ms", "ElapsedMilliseconds": 0.1639, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=9", "EventId": 2 }
{ "time": "2024-04-16 15:37:51.3553", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=9 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=9", "EventId": 1 }
{ "time": "2024-04-16 15:37:51.3553", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:51.3553", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=9 - 204 - - 0.1833ms", "ElapsedMilliseconds": 0.1833, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=9", "EventId": 2 }
{ "time": "2024-04-16 15:37:51.3645", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=9 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=9", "EventId": 1 }
{ "time": "2024-04-16 15:37:51.3645", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:51.3645", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:37:51.3645", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:37:51.3662", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=9 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=9", "EventId": 1 }
{ "time": "2024-04-16 15:37:51.3662", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:37:51.3662", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:51.3662", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:37:51.3662", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:37:51.3662", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "elapsed": "0", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:37:51.3662", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Delete.TicketDeleteResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Delete.TicketDeleteResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:37:51.3662", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 2.4177ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 2.4177, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:37:51.3662", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:37:51.3662", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=9 - 200 - application/json;+charset=utf-8 2.9043ms", "ElapsedMilliseconds": 2.9043, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=9", "EventId": 2 }
{ "time": "2024-04-16 15:37:51.3662", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:37:51.3662", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 1.5075ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 1.5075, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:37:51.3662", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:37:51.3662", "level": "ERROR", "message": "{\"Errors\":null,\"Message\":\"Resource not found\",\"Data\":{},\"InnerException\":null,\"HelpLink\":null,\"Source\":\"Core\",\"HResult\":-2146233088,\"StackTrace\":\"   at Core.Repositories.Repository`1.GetSingle(Expression`1 expression, Boolean throwException) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Core\\\\Repositories\\\\Repository.cs:line 61\\r\\n   at Business.Services.TicketService.DeleteTicket(Int32 id) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Application\\\\Services\\\\TicketService.cs:line 53\\r\\n   at Api.Controllers.TicketController.DeleteTicket(Int32 id) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\TicketController.cs:line 137\\r\\n   at lambda_method64(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\"}" }
{ "time": "2024-04-16 15:37:51.3662", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=9 - 400 - application/json 5.1015ms", "ElapsedMilliseconds": 5.1015, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=9", "EventId": 2 }
{ "time": "2024-04-16 15:37:52.0711", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:37:52.0717", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:52.0717", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.6455ms", "ElapsedMilliseconds": 0.6455, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:37:52.0717", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:37:52.0717", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:37:52.0717", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:37:52.0717", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:37:52.0717", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:37:52.0717", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:37:52.0717", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 1.1727ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 1.1727, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:37:52.0717", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:37:52.0717", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 1.5651ms", "ElapsedMilliseconds": 1.5651, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:40:57.6061", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=17 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=17", "EventId": 1 }
{ "time": "2024-04-16 15:40:57.6069", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:40:57.6069", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=17 - 204 - - 0.9800ms", "ElapsedMilliseconds": 0.98, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=17", "EventId": 2 }
{ "time": "2024-04-16 15:40:57.6069", "level": "INFO", "message": "Request starting HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=17 - - -", "Protocol": "HTTP/1.1", "Method": "DELETE", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=17", "EventId": 1 }
{ "time": "2024-04-16 15:40:57.6069", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:40:57.6069", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:40:57.6069", "level": "INFO", "message": "Route matched with {action = \"DeleteTicket\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"DeleteTicket\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult DeleteTicket(Int32)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:40:57.6598", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "3", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:40:57.6598", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nDELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "elapsed": "1", "parameters": "@p0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "DELETE FROM \"Ticket\"\r\nWHERE \"Id\" = @p0;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:40:57.6598", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Delete.TicketDeleteResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Delete.TicketDeleteResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:40:57.6598", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.DeleteTicket (Api) in 46.8949ms", "ActionName": "Api.Controllers.TicketController.DeleteTicket (Api)", "ElapsedMilliseconds": 46.8949, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:40:57.6598", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.DeleteTicket (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.DeleteTicket (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:40:57.6625", "level": "INFO", "message": "Request finished HTTP/1.1 DELETE http://192.168.0.102:5274/api/Ticket/DeleteTicket?id=17 - 200 - application/json;+charset=utf-8 47.8396ms", "ElapsedMilliseconds": 47.8396, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "DELETE", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/DeleteTicket", "QueryString": "?id=17", "EventId": 2 }
{ "time": "2024-04-16 15:40:58.2123", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:40:58.2123", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:40:58.2123", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.102:5274/api/Ticket/getbyid - 204 - - 0.3132ms", "ElapsedMilliseconds": 0.3132, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-16 15:40:58.2481", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-16 15:40:58.2481", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-16 15:40:58.2481", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-16 15:40:58.2481", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-16 15:40:58.2481", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-16 15:40:58.2481", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-16 15:40:58.2481", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.4868ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.4868, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-16 15:40:58.2481", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-16 15:40:58.2481", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.102:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.5401ms", "ElapsedMilliseconds": 3.5401, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.102:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
