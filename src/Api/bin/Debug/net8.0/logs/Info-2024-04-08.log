{ "time": "2024-04-08 11:56:43.6299", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-08 11:56:44.7231", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-08 11:56:44.7231", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-08 11:56:44.7231", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-08 11:56:44.7231", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-08 11:56:46.3747", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 11:56:46.6083", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-08 11:56:46.7476", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 380.1271ms", "ElapsedMilliseconds": 380.1271, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 11:56:46.7575", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 11:56:46.7575", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.2169ms", "ElapsedMilliseconds": 3.2169, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 11:56:46.7575", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 11:56:46.8505", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 88.8361ms", "ElapsedMilliseconds": 88.8361, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 11:56:46.9428", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 11:56:47.2674", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 324.6728ms", "ElapsedMilliseconds": 324.6728, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 11:57:04.7577", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 11:57:04.7577", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 11:57:04.8590", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 11:57:04.9010", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 11:57:08.6471", "level": "INFO", "message": "Executed DbCommand (43ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "43", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 11:57:08.7460", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "3", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 11:57:08.7794", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 11:57:08.8211", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 11:57:08.9075", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "3", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 11:57:08.9165", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 11:57:10.3903", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 5483.7173ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 5483.7173, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 11:57:10.3942", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 11:57:10.3942", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 5650.4219ms", "ElapsedMilliseconds": 5650.4219, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 11:59:05.5489", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-08 11:59:05.6972", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-08 11:59:05.6972", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-08 11:59:05.6972", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-08 11:59:05.6972", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-08 11:59:07.3713", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 11:59:07.4931", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-08 11:59:07.5681", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 201.1348ms", "ElapsedMilliseconds": 201.1348, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 11:59:07.5681", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 11:59:07.5681", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.2526ms", "ElapsedMilliseconds": 2.2526, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 11:59:07.5928", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 11:59:07.6464", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 53.6460ms", "ElapsedMilliseconds": 53.646, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 11:59:07.8214", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 11:59:08.1000", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 278.6585ms", "ElapsedMilliseconds": 278.6585, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 11:59:24.9150", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 11:59:24.9150", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 11:59:25.0113", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 11:59:25.0522", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 11:59:38.1487", "level": "INFO", "message": "Executed DbCommand (61ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "61", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 11:59:41.2789", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "3", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 11:59:41.7848", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 11:59:44.4388", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 11:59:44.5410", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "3", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 11:59:46.8183", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 11:59:51.1955", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 26137.7006ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 26137.7006, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 11:59:51.1955", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 11:59:52.4492", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 27534.1896ms", "ElapsedMilliseconds": 27534.1896, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:26:50.7628", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-08 12:26:50.9674", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-08 12:26:50.9712", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-08 12:26:50.9712", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-08 12:26:50.9712", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-08 12:26:51.9281", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:26:52.0723", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-08 12:26:52.1787", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 257.4177ms", "ElapsedMilliseconds": 257.4177, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:26:52.1787", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:26:52.1955", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.8131ms", "ElapsedMilliseconds": 2.8131, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:26:52.1955", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:26:52.2264", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 29.2036ms", "ElapsedMilliseconds": 29.2036, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:26:52.4221", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:26:52.6889", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 266.8797ms", "ElapsedMilliseconds": 266.8797, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:27:10.8967", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:27:10.8967", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 12:27:10.9844", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 12:27:11.0201", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 12:27:17.9295", "level": "INFO", "message": "Executed DbCommand (60ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "60", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:27:18.0163", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "3", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:27:18.0513", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:27:18.0876", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:27:18.1658", "level": "INFO", "message": "Executed DbCommand (5ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "5", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:27:18.1789", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 12:27:18.9303", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 7902.9465ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 7902.9465, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 12:27:18.9303", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 12:27:18.9444", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 8048.1591ms", "ElapsedMilliseconds": 8048.1591, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:27:41.2013", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:27:41.2081", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 12:27:41.2081", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 12:27:41.2081", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 12:27:43.7452", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:27:43.7504", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:27:43.7504", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:27:43.7504", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:27:43.7504", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "1", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:27:43.7504", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 12:27:44.0967", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 2885.2741ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 2885.2741, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 12:27:44.0967", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 12:27:44.3278", "level": "ERROR", "message": "{\"ClassName\":\"System.MissingMethodException\",\"Message\":\"Attempted to invoke a deleted method implementation. This can happen when a method is deleted or its name or signature is changed while the application is running.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Models.DTOs.Permissions.Get.GetPermissionsResponseDto.get_Id()\\r\\n   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)\\r\\n   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)\\r\\n   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)\\r\\n   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)\\r\\n   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2146233069,\"Source\":\"Models\",\"WatsonBuckets\":null,\"MMClassName\":null,\"MMMemberName\":null,\"MMSignature\":null}" }
{ "time": "2024-04-08 12:27:44.3612", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 400 - application/json 3160.1390ms", "ElapsedMilliseconds": 3160.139, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:27:45.0997", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:27:45.1196", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 20.0770ms", "ElapsedMilliseconds": 20.077, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:27:45.1366", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:27:45.1366", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 0.4309ms", "ElapsedMilliseconds": 0.4309, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:27:45.1366", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:27:45.1593", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 21.2341ms", "ElapsedMilliseconds": 21.2341, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:27:45.1903", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:27:45.2200", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 29.7003ms", "ElapsedMilliseconds": 29.7003, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:28:02.7046", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:28:02.7046", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 12:28:02.7046", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 12:28:02.7188", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 12:28:04.2787", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:28:04.2835", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:28:04.2835", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:28:04.2835", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:28:04.2835", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "2", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:28:04.2835", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 12:28:05.0502", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 2331.3047ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 2331.3047, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 12:28:05.0502", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 12:28:05.0664", "level": "ERROR", "message": "{\"ClassName\":\"System.MissingMethodException\",\"Message\":\"Attempted to invoke a deleted method implementation. This can happen when a method is deleted or its name or signature is changed while the application is running.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Models.DTOs.Permissions.Get.GetPermissionsResponseDto.get_Id()\\r\\n   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)\\r\\n   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)\\r\\n   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)\\r\\n   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)\\r\\n   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2146233069,\"Source\":\"Models\",\"WatsonBuckets\":null,\"MMClassName\":null,\"MMMemberName\":null,\"MMSignature\":null}" }
{ "time": "2024-04-08 12:28:05.0664", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 400 - application/json 2364.5607ms", "ElapsedMilliseconds": 2364.5607, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:28:18.0306", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:28:18.0306", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 12:28:18.0306", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 12:28:18.0306", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 12:28:20.6728", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:28:22.3037", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:28:22.5594", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:28:25.1287", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:28:25.1287", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "2", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:28:28.0856", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 12:28:31.1284", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 13092.1507ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 13092.1507, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 12:28:31.1284", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 12:28:34.3133", "level": "ERROR", "message": "{\"ClassName\":\"System.MissingMethodException\",\"Message\":\"Attempted to invoke a deleted method implementation. This can happen when a method is deleted or its name or signature is changed while the application is running.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Models.DTOs.Permissions.Get.GetPermissionsResponseDto.get_Id()\\r\\n   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)\\r\\n   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)\\r\\n   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)\\r\\n   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)\\r\\n   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2146233069,\"Source\":\"Models\",\"WatsonBuckets\":null,\"MMClassName\":null,\"MMMemberName\":null,\"MMSignature\":null}" }
{ "time": "2024-04-08 12:28:35.5599", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 400 - application/json 17529.9695ms", "ElapsedMilliseconds": 17529.9695, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:28:39.1765", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:28:41.5277", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 12:28:41.5277", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 12:28:41.5277", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 12:28:42.5859", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:28:43.4344", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:28:43.8305", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:28:47.8478", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:28:47.8478", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "1", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:28:51.9765", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 12:28:59.4837", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 17955.0114ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 17955.0114, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 12:28:59.4837", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 12:29:08.5383", "level": "ERROR", "message": "{\"ClassName\":\"System.MissingMethodException\",\"Message\":\"Attempted to invoke a deleted method implementation. This can happen when a method is deleted or its name or signature is changed while the application is running.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Models.DTOs.Permissions.Get.GetPermissionsResponseDto.get_Id()\\r\\n   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)\\r\\n   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)\\r\\n   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)\\r\\n   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)\\r\\n   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2146233069,\"Source\":\"Models\",\"WatsonBuckets\":null,\"MMClassName\":null,\"MMMemberName\":null,\"MMSignature\":null}" }
{ "time": "2024-04-08 12:29:08.5383", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 400 - application/json 29367.2490ms", "ElapsedMilliseconds": 29367.249, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:29:09.6066", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:29:09.6348", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 29.9703ms", "ElapsedMilliseconds": 29.9703, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:29:09.6467", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:29:09.6467", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 0.2712ms", "ElapsedMilliseconds": 0.2712, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:29:09.6467", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:29:09.6581", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 10.5607ms", "ElapsedMilliseconds": 10.5607, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:29:09.8223", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:29:09.8511", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 28.7678ms", "ElapsedMilliseconds": 28.7678, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:29:26.5705", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:29:26.5705", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 12:29:26.5705", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 12:29:26.5804", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 12:29:28.8445", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:29:29.5660", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:29:29.7614", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:29:33.3110", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:29:33.3110", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "2", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:29:35.9474", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 12:29:38.6001", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 12019.783ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 12019.783, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 12:29:38.6001", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 12:29:40.1631", "level": "ERROR", "message": "{\"ClassName\":\"System.MissingMethodException\",\"Message\":\"Attempted to invoke a deleted method implementation. This can happen when a method is deleted or its name or signature is changed while the application is running.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Models.DTOs.Permissions.Get.GetPermissionsResponseDto.get_Id()\\r\\n   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)\\r\\n   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)\\r\\n   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)\\r\\n   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)\\r\\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)\\r\\n   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2146233069,\"Source\":\"Models\",\"WatsonBuckets\":null,\"MMClassName\":null,\"MMMemberName\":null,\"MMSignature\":null}" }
{ "time": "2024-04-08 12:29:41.5670", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 400 - application/json 14996.9436ms", "ElapsedMilliseconds": 14996.9436, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:30:00.8406", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-08 12:30:00.9891", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-08 12:30:00.9891", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-08 12:30:00.9891", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-08 12:30:00.9891", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-08 12:30:02.1144", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:30:02.2319", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-08 12:30:02.3220", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 211.5234ms", "ElapsedMilliseconds": 211.5234, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:30:02.3392", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:30:02.3392", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:30:02.3392", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.9848ms", "ElapsedMilliseconds": 2.9848, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:30:02.3680", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 28.9858ms", "ElapsedMilliseconds": 28.9858, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:30:02.4139", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:30:02.5587", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 144.8213ms", "ElapsedMilliseconds": 144.8213, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:30:16.8366", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:30:16.8467", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 12:30:16.9226", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 12:30:16.9514", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 12:30:20.2449", "level": "INFO", "message": "Executed DbCommand (64ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "64", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:30:21.1203", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "3", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:30:21.3324", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:30:22.5402", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:30:22.6322", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "3", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 12:30:24.7162", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 12:30:34.0816", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 17125.1192ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 17125.1192, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 12:30:34.0816", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 12:30:36.3353", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 19499.4339ms", "ElapsedMilliseconds": 19499.4339, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:55:13.9750", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-08 12:55:14.1779", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-08 12:55:14.1817", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-08 12:55:14.1817", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-08 12:55:14.1817", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-08 12:55:15.2074", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:55:15.3340", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-08 12:55:15.4234", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 220.9690ms", "ElapsedMilliseconds": 220.969, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:55:15.4302", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:55:15.4302", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:55:15.4302", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.1289ms", "ElapsedMilliseconds": 3.1289, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:55:15.4674", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 37.3573ms", "ElapsedMilliseconds": 37.3573, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 12:55:15.5314", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 12:55:15.6796", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 148.1857ms", "ElapsedMilliseconds": 148.1857, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:06:44.9869", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-08 13:06:45.1122", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-08 13:06:45.1122", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-08 13:06:45.1122", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-08 13:06:45.1122", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-08 13:06:45.8777", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:06:45.9824", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-08 13:06:46.0608", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 182.4609ms", "ElapsedMilliseconds": 182.4609, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:06:46.0608", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:06:46.0608", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.1861ms", "ElapsedMilliseconds": 2.1861, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:06:46.0608", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:06:46.1052", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 33.7590ms", "ElapsedMilliseconds": 33.759, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:06:46.1572", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:06:46.3090", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 151.7698ms", "ElapsedMilliseconds": 151.7698, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:07:04.0965", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:07:04.1059", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 13:07:04.1059", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - 204 - - 10.8130ms", "ElapsedMilliseconds": 10.813, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:07:04.5723", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:07:04.5778", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 13:07:04.7385", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 13:07:04.7701", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 13:07:06.1727", "level": "INFO", "message": "Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "17", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:07:06.2344", "level": "WARN", "message": "The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.", "EventId": 10103, "EventName": "Microsoft.EntityFrameworkCore.Query.FirstWithoutOrderByAndFilterWarning" }
{ "time": "2024-04-08 13:07:06.2663", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:07:06.4199", "level": "INFO", "message": "Executed DbCommand (7ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "7", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:07:06.4199", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:07:06.4333", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:07:06.4333", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:07:06.4333", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:07:06.4333", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:07:06.4333", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:07:06.4333", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:07:06.4333", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:07:06.4531", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 13:07:06.4667", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 1692.1582ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 1692.1582, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 13:07:06.4667", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 13:07:06.4790", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 1906.7426ms", "ElapsedMilliseconds": 1906.7426, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:33:23.2691", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Auth/Login - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:33:23.2691", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 13:33:23.2691", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Auth/Login - 204 - - 5.6181ms", "ElapsedMilliseconds": 5.6181, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:33:23.4575", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.105:5274/api/Auth/Login - application/json 79", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 79, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:33:23.4575", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 13:33:23.4575", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 13:33:23.4740", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 13:53:41.0402", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-08 13:53:41.2570", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-08 13:53:41.2570", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-08 13:53:41.2570", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-08 13:53:41.2570", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-08 13:53:41.9375", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:53:42.0741", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-08 13:53:42.1647", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 230.3463ms", "ElapsedMilliseconds": 230.3463, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:53:42.1647", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:53:42.1647", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:53:42.1647", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.1126ms", "ElapsedMilliseconds": 3.1126, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:53:42.2024", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 34.6060ms", "ElapsedMilliseconds": 34.606, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:53:42.2511", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:53:42.4224", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 171.2625ms", "ElapsedMilliseconds": 171.2625, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:53:59.6076", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:53:59.6129", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 13:53:59.6129", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - 204 - - 6.8922ms", "ElapsedMilliseconds": 6.8922, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:53:59.6946", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:53:59.6946", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 13:53:59.8340", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenNotYetValidException: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '08.04.2024 13:35:34', Current time (UTC): '08.04.2024 09:53:59'.\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-08 13:53:59.8867", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '08.04.2024 13:35:34', Current time (UTC): '08.04.2024 09:53:59'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '08.04.2024 13:35:34', Current time (UTC): '08.04.2024 09:53:59'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-08 13:53:59.8952", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Admin)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Admin)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-08 13:53:59.8952", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-08 13:53:59.8952", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 401 0 - 208.3807ms", "ElapsedMilliseconds": 208.3807, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:54:14.2533", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:54:14.2533", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 13:54:14.2533", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - 204 - - 2.0352ms", "ElapsedMilliseconds": 2.0352, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:54:14.3027", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:54:14.3027", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 13:54:14.3027", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenNotYetValidException: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '08.04.2024 13:35:34', Current time (UTC): '08.04.2024 09:54:14'.\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-08 13:54:14.3027", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '08.04.2024 13:35:34', Current time (UTC): '08.04.2024 09:54:14'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '08.04.2024 13:35:34', Current time (UTC): '08.04.2024 09:54:14'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-08 13:54:14.3027", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Admin)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Admin)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-08 13:54:14.3027", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-08 13:54:14.3126", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 401 0 - 9.9704ms", "ElapsedMilliseconds": 9.9704, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:54:36.9211", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:54:36.9211", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 13:54:36.9222", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - 204 - - 1.0851ms", "ElapsedMilliseconds": 1.0851, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:54:37.0093", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:54:37.0093", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 13:54:37.0093", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenNotYetValidException: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '08.04.2024 13:35:34', Current time (UTC): '08.04.2024 09:54:37'.\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-08 13:54:37.0093", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '08.04.2024 13:35:34', Current time (UTC): '08.04.2024 09:54:37'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10222: Lifetime validation failed. The token is not yet valid. ValidFrom (UTC): '08.04.2024 13:35:34', Current time (UTC): '08.04.2024 09:54:37'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-08 13:54:37.0093", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Admin)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Admin)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-08 13:54:37.0093", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-08 13:54:37.0093", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 401 0 - 4.6542ms", "ElapsedMilliseconds": 4.6542, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:55:28.0263", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Auth/Login - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:55:28.0263", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 13:55:28.0263", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Auth/Login - 204 - - 7.3467ms", "ElapsedMilliseconds": 7.3467, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:55:28.0660", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.105:5274/api/Auth/Login - application/json 65", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 65, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:55:28.0660", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 13:55:28.0660", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 13:55:28.1289", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 13:55:32.9959", "level": "INFO", "message": "Executed DbCommand (74ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "74", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:55:33.1365", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:55:33.1749", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:55:33.2178", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:55:33.3128", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "2", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:55:33.3198", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 13:55:34.4600", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:55:34.4700", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 6331.8457ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 6331.8457, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 13:55:34.4700", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 13:55:34.4700", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 14.7352ms", "ElapsedMilliseconds": 14.7352, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:55:34.4700", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.105:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 6418.2450ms", "ElapsedMilliseconds": 6418.245, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:55:34.5557", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:55:34.5557", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 13:55:34.5557", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - 204 - - 0.6179ms", "ElapsedMilliseconds": 0.6179, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:55:34.5701", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:55:34.5701", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 13:55:34.5848", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 13:55:34.5848", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 13:55:34.7433", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:55:34.7524", "level": "WARN", "message": "The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.", "EventId": 10103, "EventName": "Microsoft.EntityFrameworkCore.Query.FirstWithoutOrderByAndFilterWarning" }
{ "time": "2024-04-08 13:55:34.7524", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:55:34.7987", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:55:34.7987", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:55:34.7987", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 1.3886ms", "ElapsedMilliseconds": 1.3886, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:55:34.7987", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:55:34.7987", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:55:34.8149", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:55:34.8149", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:55:34.8149", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:55:34.8149", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:55:34.8289", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:55:34.8289", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:55:34.8289", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 13:55:34.8289", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 13:55:34.8289", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 37.8992ms", "ElapsedMilliseconds": 37.8992, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:55:34.8454", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 259.0467ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 259.0467, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 13:55:34.8454", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 13:55:34.8454", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 275.7853ms", "ElapsedMilliseconds": 275.7853, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 13:55:34.8657", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 13:55:34.8827", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 17.0401ms", "ElapsedMilliseconds": 17.0401, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:06:39.1613", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:06:39.1613", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:06:39.1613", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - 204 - - 2.8734ms", "ElapsedMilliseconds": 2.8734, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:06:39.2214", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:06:39.2214", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:06:39.2214", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:06:39.2214", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:06:39.2735", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:39.2735", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:39.2828", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:39.2828", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:39.2828", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:39.2828", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:39.2828", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:39.2828", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:39.2978", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:39.2978", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:39.2978", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:39.2978", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:06:39.2978", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 79.6002ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 79.6002, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:06:39.2978", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:06:39.2978", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 82.3201ms", "ElapsedMilliseconds": 82.3201, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:06:51.1306", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:06:51.1306", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:06:51.1306", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - 204 - - 0.5116ms", "ElapsedMilliseconds": 0.5116, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:06:51.2183", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:06:51.2183", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:06:51.2192", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:06:51.2192", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:06:51.2192", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:51.2192", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:51.2401", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:51.2401", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:51.2401", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:51.2533", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:51.2533", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:51.2533", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:51.2533", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:51.2686", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:51.2686", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:06:51.2686", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:06:51.2686", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 55.3162ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 55.3162, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:06:51.2686", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:06:51.2686", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 56.7401ms", "ElapsedMilliseconds": 56.7401, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:10.1276", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:10.1276", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:10.1276", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - 204 - - 1.1724ms", "ElapsedMilliseconds": 1.1724, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:10.1276", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:10.1276", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:10.1276", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:10.1276", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:10.1460", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:10.1460", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:10.1460", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:10.1460", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:10.1583", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:10.1583", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:10.1583", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:10.1583", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:10.1583", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:10.1583", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:10.1583", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:10.1583", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:10.1722", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 31.066ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 31.066, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:10.1722", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:10.1722", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 32.1566ms", "ElapsedMilliseconds": 32.1566, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:28.4431", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:28.4431", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:28.4431", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Product/GetAllProducts - 204 - - 1.3461ms", "ElapsedMilliseconds": 1.3461, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:28.4630", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:28.4630", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:28.4630", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:28.4630", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:28.4745", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-08 14:07:28.4864", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:28.4864", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:28.4864", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 20.4486ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 20.4486, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:28.4864", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:28.4864", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 26.3656ms", "ElapsedMilliseconds": 26.3656, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:29.8115", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:29.8115", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:29.8115", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - 204 - - 0.6558ms", "ElapsedMilliseconds": 0.6558, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:29.8372", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:29.8372", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:29.8372", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:29.8372", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:29.8372", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:29.8372", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:29.8487", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:29.8487", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:29.8487", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:29.8487", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:29.8606", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:29.8606", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:29.8606", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:29.8606", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:29.8606", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:29.8758", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:29.8758", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 37.9341ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 37.9341, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:29.8758", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:29.8758", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 39.1904ms", "ElapsedMilliseconds": 39.1904, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:31.4303", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:31.4303", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:31.4303", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:31.4303", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:31.4379", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-08 14:07:31.4379", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:31.4379", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:31.4379", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 9.3318ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 9.3318, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:31.4379", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:31.4379", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 11.0022ms", "ElapsedMilliseconds": 11.0022, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:32.9039", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:32.9039", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:32.9039", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:32.9039", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:32.9083", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:32.9083", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:32.9083", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:32.9083", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:32.9083", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:32.9238", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:32.9238", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:32.9238", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:32.9238", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:32.9238", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:32.9386", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:32.9386", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:32.9386", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 34.725ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 34.725, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:32.9386", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:32.9386", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 36.2437ms", "ElapsedMilliseconds": 36.2437, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:51.9685", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:51.9700", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:51.9700", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - 204 - - 1.8939ms", "ElapsedMilliseconds": 1.8939, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:51.9957", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:51.9957", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:51.9957", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:51.9957", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:52.0028", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0028", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0028", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0028", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0171", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0171", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0171", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0171", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0171", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0171", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0329", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0329", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:52.0329", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 37.2725ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 37.2725, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:52.0329", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:52.0329", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 38.6253ms", "ElapsedMilliseconds": 38.6253, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:52.0595", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:52.0595", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:52.0595", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:52.0595", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:52.0635", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0635", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0635", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0635", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0635", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0635", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0803", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0803", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0803", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0803", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0803", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.0803", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:52.0803", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 33.046ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 33.046, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:52.0803", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:52.0803", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 33.9276ms", "ElapsedMilliseconds": 33.9276, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:52.2187", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:52.2187", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:52.2194", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:52.2194", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:52.2194", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.2194", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.2194", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.2194", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.2194", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.2365", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.2365", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.2365", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.2365", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.2365", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.2365", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.2365", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:52.2365", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 28.5505ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 28.5505, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:52.2365", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:52.2365", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 29.9125ms", "ElapsedMilliseconds": 29.9125, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:52.2789", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:52.2789", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:52.2789", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:52.2789", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:52.2849", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.2849", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.2849", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.2849", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.2849", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.2972", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.2972", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.2972", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.2972", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.2972", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.3134", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.3134", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:52.3134", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 34.3451ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 34.3451, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:52.3134", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:52.3134", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 35.3141ms", "ElapsedMilliseconds": 35.3141, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:52.3879", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:52.3879", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:52.3879", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:52.3879", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:52.3944", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.3944", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.3944", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.4068", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.4068", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.4068", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.4244", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.4244", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.4244", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.4244", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.4244", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:52.4244", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:52.4376", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 48.4687ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 48.4687, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:52.4376", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:52.4376", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 49.9805ms", "ElapsedMilliseconds": 49.9805, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:53.0667", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:53.0667", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:53.0667", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:53.0667", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:53.0667", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.0667", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.0667", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.0792", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.0792", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.0792", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.0792", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.0792", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.0946", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.0946", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.0946", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.0946", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:53.0946", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 36.576ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 36.576, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:53.0946", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:53.0946", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 38.3383ms", "ElapsedMilliseconds": 38.3383, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:53.2653", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:53.2653", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:53.2664", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:53.2664", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:53.2664", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.2825", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.2825", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.2825", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.2825", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.3038", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.3038", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.3038", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.3038", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.3133", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.3133", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.3133", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:53.3133", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 54.2256ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 54.2256, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:53.3133", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:53.3133", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 55.7483ms", "ElapsedMilliseconds": 55.7483, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:53.7869", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:53.7869", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:53.7869", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:53.7869", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:53.7869", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.7973", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.7973", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.7973", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.7973", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.7973", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.8158", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.8158", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.8158", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.8158", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.8287", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:53.8287", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:53.8287", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 41.1307ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 41.1307, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:53.8287", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:53.8287", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 42.3499ms", "ElapsedMilliseconds": 42.3499, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:54.0835", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:54.0835", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:54.0835", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:54.0835", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:54.0835", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.0973", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.0973", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.0973", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.0973", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.1099", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.1099", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.1099", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.1099", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.1099", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.1099", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.1099", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:54.1099", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 34.4741ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 34.4741, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:54.1099", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:54.1099", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 40.1063ms", "ElapsedMilliseconds": 40.1063, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:54.1931", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:54.1931", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:54.1931", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:54.1931", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:54.1931", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.1931", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.2050", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.2050", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.2050", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.2050", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.2220", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.2220", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.2220", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.2220", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.2398", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.2398", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:54.2398", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 46.4086ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 46.4086, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:54.2398", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:54.2398", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 47.3123ms", "ElapsedMilliseconds": 47.3123, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:54.4668", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:54.4668", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:54.4668", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:54.4668", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:54.4741", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.4741", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.4741", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.4894", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.5275", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.5275", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.5367", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.5367", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.5367", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.5367", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.5528", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.5528", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:54.5528", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 85.0961ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 85.0961, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:54.5528", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:54.5528", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 86.6654ms", "ElapsedMilliseconds": 86.6654, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:54.8945", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:54.8945", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:54.8945", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:54.8945", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:54.9086", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.9086", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.9086", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.9086", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.9086", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.9247", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.9247", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.9247", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.9247", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.9247", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.9388", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.9388", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:54.9388", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 36.3914ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 36.3914, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:54.9388", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:54.9388", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 45.0014ms", "ElapsedMilliseconds": 45.0014, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:54.9878", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:54.9878", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:54.9878", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:54.9878", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:54.9878", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.9878", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:54.9878", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.0021", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.0021", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.0021", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.0021", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.0021", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.0021", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.0021", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.0191", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.0191", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:55.0191", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 30.9242ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 30.9242, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:55.0191", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:55.0191", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 31.9903ms", "ElapsedMilliseconds": 31.9903, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:55.0682", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:55.0682", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:55.0682", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:55.0682", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:55.0682", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.0682", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.0821", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.0821", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.0821", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.0821", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.0951", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.0951", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.0951", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.0951", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.1105", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.1105", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:55.1105", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 41.6192ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 41.6192, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:55.1105", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:55.1105", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 42.7858ms", "ElapsedMilliseconds": 42.7858, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:55.1390", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:55.1390", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:55.1390", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:55.1390", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:55.1451", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.1451", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.1451", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.1572", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.1572", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.1572", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.1572", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.1572", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.1749", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.1749", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.1749", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.1749", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:55.1749", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 41.1048ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 41.1048, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:55.1749", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:55.1749", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 42.3453ms", "ElapsedMilliseconds": 42.3453, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:55.2091", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:55.2091", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:55.2091", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:55.2091", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:55.2091", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.2091", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.2198", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.2198", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.2198", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.2198", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.2198", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.2352", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.2352", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.2352", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.2352", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.2352", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:55.2352", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 37.839ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 37.839, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:55.2352", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:55.2352", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 39.5722ms", "ElapsedMilliseconds": 39.5722, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:55.3110", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:55.3110", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:55.3110", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:55.3110", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:55.3164", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.3164", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.3164", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.3164", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.3318", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.3318", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.3318", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.3318", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.3448", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.3448", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.3448", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.3448", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:55.3448", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 38.5196ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 38.5196, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:55.3448", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:55.3448", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 39.3814ms", "ElapsedMilliseconds": 39.3814, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:55.4161", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:55.4161", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:55.4161", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:55.4161", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:55.4247", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.4247", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.4247", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.4247", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.4414", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.4414", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.4414", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.4414", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.4555", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.4555", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.4555", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.4555", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:55.4555", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 44.7931ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 44.7931, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:55.4555", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:55.4555", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 46.1964ms", "ElapsedMilliseconds": 46.1964, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:55.4866", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:55.4866", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:55.4866", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:55.4866", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:55.4866", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.4866", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.4866", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.5013", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.5013", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.5013", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.5013", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.5013", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.5013", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.5013", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.5175", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.5175", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:55.5175", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 30.0647ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 30.0647, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:55.5175", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:55.5175", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 31.5100ms", "ElapsedMilliseconds": 31.51, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:55.5773", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:55.5773", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:55.5773", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:55.5773", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:55.5814", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.5814", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.5814", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.5814", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.5814", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.5814", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.5949", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.5949", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.5949", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.5949", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.5949", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.5949", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:55.5949", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 25.7742ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 25.7742, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:55.5949", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:55.5949", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 26.6500ms", "ElapsedMilliseconds": 26.65, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:55.7638", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:55.7638", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:55.7638", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:55.7638", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:55.7677", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.7677", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.7677", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.7677", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.7677", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.7677", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.7677", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.7677", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.7836", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.7836", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.8100", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.8100", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:55.8100", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 45.9104ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 45.9104, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:55.8100", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:55.8100", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 46.8181ms", "ElapsedMilliseconds": 46.8181, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:55.8355", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:55.8355", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:55.8355", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:55.8355", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:55.8355", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.8355", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.8355", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.8461", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.8461", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.8461", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.8461", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.8461", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.8461", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.8461", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.8605", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.8605", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:55.8605", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 24.3173ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 24.3173, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:55.8605", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:55.8605", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 25.5408ms", "ElapsedMilliseconds": 25.5408, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:55.9800", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:55.9800", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:55.9800", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:55.9800", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:55.9884", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.9884", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:55.9884", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.0012", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.0012", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.0012", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.0012", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.0012", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.0168", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.0168", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.0168", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.0168", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:56.0168", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 40.515ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 40.515, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:56.0168", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:56.0168", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 42.7607ms", "ElapsedMilliseconds": 42.7607, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:56.0739", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:56.0739", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:56.0739", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:56.0739", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:56.0783", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.0783", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.0783", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.0783", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.0783", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.0946", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.0946", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.0946", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.0946", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.0946", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.1120", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.1120", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:56.1120", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 37.7738ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 37.7738, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:56.1120", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:56.1120", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 38.7477ms", "ElapsedMilliseconds": 38.7477, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:56.1410", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:56.1410", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:56.1410", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:56.1410", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:56.1410", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.1410", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.1410", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.1410", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.1410", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.1607", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.1607", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.1607", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.1607", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.1607", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.1607", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.1735", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:56.1735", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 32.2344ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 32.2344, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:56.1735", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:56.1735", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 34.1408ms", "ElapsedMilliseconds": 34.1408, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:56.2481", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:56.2481", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:56.2481", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:56.2481", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:56.2518", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.2518", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.2908", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "3", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.2908", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.2995", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.2995", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.2995", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.2995", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.3148", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.3148", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.3148", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.3148", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:56.3148", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 73.9526ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 73.9526, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:56.3148", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:56.3148", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 74.7177ms", "ElapsedMilliseconds": 74.7177, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:56.9379", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:56.9379", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:56.9379", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:56.9379", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:56.9379", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.9379", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.9379", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.9379", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.9561", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.9561", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.9561", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.9697", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.9697", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.9697", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.9697", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:56.9697", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:56.9697", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 40.2883ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 40.2883, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:56.9697", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:56.9697", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 41.1521ms", "ElapsedMilliseconds": 41.1521, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:57.1188", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:57.1188", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:57.1188", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - 204 - - 0.3732ms", "ElapsedMilliseconds": 0.3732, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:57.1443", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:57.1443", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:57.1443", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:57.1443", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:57.1443", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.1443", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.1619", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.1619", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.1619", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.1749", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.1749", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.1749", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.1749", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.1749", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.1897", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.1897", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:57.1897", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 44.1175ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 44.1175, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:57.1897", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:57.1897", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 45.7811ms", "ElapsedMilliseconds": 45.7811, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:57.2897", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:57.2897", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:57.2897", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:57.2897", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:57.2897", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.2897", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.3001", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.3001", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.3777", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.3777", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.3777", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.4075", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.4075", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.4075", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.4075", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.4075", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:57.4075", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 125.1564ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 125.1564, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:57.4075", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:57.4075", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 125.8281ms", "ElapsedMilliseconds": 125.8281, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:57.8663", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:57.8663", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:57.8663", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:57.8663", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:57.8663", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.8663", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.8789", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.8789", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.8789", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.8789", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.8923", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.8923", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.8923", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.8923", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.8923", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.8923", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:57.8923", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 37.778ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 37.778, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:57.8923", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:57.8923", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 38.7256ms", "ElapsedMilliseconds": 38.7256, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:57.9829", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:57.9829", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:57.9829", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:57.9829", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:57.9901", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.9901", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:57.9901", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.0017", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.0017", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.0017", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.0017", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.0017", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.0017", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.0180", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.0180", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.0180", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:58.0180", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 35.9144ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 35.9144, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:58.0180", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:58.0180", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 38.1022ms", "ElapsedMilliseconds": 38.1022, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:58.0869", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:58.0869", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:58.0869", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:58.0869", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:58.0944", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.0944", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.0944", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.0944", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.1118", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.1118", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.1118", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.1118", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.1118", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.1118", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.1118", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.1118", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:58.1118", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 36.8719ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 36.8719, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:58.1118", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:58.1118", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 38.0054ms", "ElapsedMilliseconds": 38.0054, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:58.1617", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:58.1617", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:58.1617", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:58.1617", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:58.1617", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.1617", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.1617", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.1738", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.1738", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.1738", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.1738", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.1738", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.1877", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.1877", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.1877", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.1877", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:58.1877", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 28.791ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 28.791, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:58.1877", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:58.1877", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 30.1079ms", "ElapsedMilliseconds": 30.1079, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:58.4340", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:58.4340", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:58.4340", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:58.4340", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:58.4381", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.4381", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.4381", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.4381", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.4381", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.4381", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.4533", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.4533", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.4533", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.4533", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.4533", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:58.4533", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:58.4533", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 26.3539ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 26.3539, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:58.4533", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:58.4533", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 27.3175ms", "ElapsedMilliseconds": 27.3175, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:59.1094", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:59.1094", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:59.1098", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:59.1098", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:59.1098", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1098", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1098", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1098", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1271", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1271", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1271", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1271", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1271", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1271", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1415", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1415", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:59.1415", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 31.8709ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 31.8709, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:59.1415", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:59.1415", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 32.5516ms", "ElapsedMilliseconds": 32.5516, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:59.1602", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:59.1602", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:59.1602", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:59.1602", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:59.1602", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1602", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1602", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1602", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1732", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1732", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1732", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1732", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1732", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1732", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1892", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.1892", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:59.1892", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 28.3684ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 28.3684, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:59.1892", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:59.1892", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 29.3582ms", "ElapsedMilliseconds": 29.3582, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:59.2092", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:59.2092", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:59.2092", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:59.2092", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:59.2092", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.2092", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.2092", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.2212", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.2212", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.2212", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.2212", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.2212", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.2361", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.2361", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.2361", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.2361", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:59.2361", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 31.2305ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 31.2305, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:59.2361", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:59.2361", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 31.7271ms", "ElapsedMilliseconds": 31.7271, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:59.2749", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:59.2749", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:59.2749", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:59.2749", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:59.2828", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.2828", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.2828", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.2828", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.2982", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.2982", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.2982", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.2982", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.2982", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.2982", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.3157", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.3157", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:59.3157", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 41.7313ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 41.7313, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:59.3157", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:59.3157", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 42.6624ms", "ElapsedMilliseconds": 42.6624, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:59.6205", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:59.6205", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:59.6205", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:59.6205", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:59.6205", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.6205", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.6282", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.6282", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.6282", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.6282", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.6282", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.6425", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.6425", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.6425", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.6425", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.6425", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:59.6425", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 31.5106ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 31.5106, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:59.6425", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:59.6425", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 32.0994ms", "ElapsedMilliseconds": 32.0994, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:59.7336", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:59.7336", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:59.7336", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:59.7336", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:59.7371", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.7371", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.7371", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.7371", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.7371", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.7526", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.7526", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.7526", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.7526", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.7526", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.7526", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.7526", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:59.7526", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 30.3246ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 30.3246, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:59.7526", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:59.7526", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 31.1367ms", "ElapsedMilliseconds": 31.1367, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:59.8657", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:59.8657", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:59.8657", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:59.8657", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:59.8657", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.8657", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.8777", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.8777", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.8777", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.8777", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.8777", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.8917", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.8917", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.8917", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.8917", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.8917", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:59.8917", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 33.5731ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 33.5731, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:59.8917", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:59.8917", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 34.8654ms", "ElapsedMilliseconds": 34.8654, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:07:59.9355", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:07:59.9355", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:07:59.9355", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:07:59.9355", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:07:59.9399", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.9399", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.9399", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.9399", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.9399", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.9399", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.9548", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.9548", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.9548", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.9548", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.9548", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:07:59.9548", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:07:59.9548", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 28.11ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 28.11, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:07:59.9548", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:07:59.9548", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 28.9532ms", "ElapsedMilliseconds": 28.9532, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:00.0013", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:00.0013", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:00.0013", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:00.0013", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:00.0013", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0013", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0013", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0170", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0170", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0170", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0170", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0170", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0336", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0336", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0336", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0336", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:00.0336", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 36.648ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 36.648, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:00.0336", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:00.0336", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 37.3401ms", "ElapsedMilliseconds": 37.3401, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:00.0592", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:00.0592", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:00.0592", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:00.0592", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:00.0592", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0648", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0648", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0648", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0648", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0648", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0648", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0790", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0790", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0790", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0790", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.0790", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:00.0790", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 29.4089ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 29.4089, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:00.0790", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:00.0790", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 29.9852ms", "ElapsedMilliseconds": 29.9852, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:00.1303", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:00.1303", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:00.1303", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:00.1303", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:00.1303", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.1303", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.1425", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.1425", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.1425", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.1425", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.1425", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.1890", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.1890", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.1890", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.1890", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.1890", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:00.1890", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 67.7799ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 67.7799, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:00.1890", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:00.1890", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 68.6851ms", "ElapsedMilliseconds": 68.6851, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:00.2426", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:00.2426", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:00.2426", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:00.2426", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:00.2426", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.2426", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.2522", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.2522", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.2522", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.2522", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.2522", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.2522", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.2667", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.2667", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.2667", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.2667", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:00.2667", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 28.0178ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 28.0178, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:00.2667", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:00.2667", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 28.8211ms", "ElapsedMilliseconds": 28.8211, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:00.2891", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:00.2891", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:00.2891", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:00.2891", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:00.2891", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.2891", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.2991", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.2991", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.2991", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.2991", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.2991", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.2991", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.2991", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.3150", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.3150", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.3150", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:00.3150", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 29.5058ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 29.5058, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:00.3150", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:00.3150", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 30.2909ms", "ElapsedMilliseconds": 30.2909, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:00.3428", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:00.3428", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:00.3428", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:00.3428", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:00.3459", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.3459", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.3459", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.3459", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.3459", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.3594", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.3594", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.3594", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.3594", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.3594", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.3594", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.3594", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:00.3594", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 27.0036ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 27.0036, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:00.3594", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:00.3594", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 27.6331ms", "ElapsedMilliseconds": 27.6331, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:00.4020", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:00.4020", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:00.4020", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:00.4020", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:00.4020", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.4085", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.4085", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.4085", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.4085", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.4085", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.4235", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.4235", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.4235", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.4235", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.4235", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.4235", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:00.4235", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 32.9425ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 32.9425, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:00.4235", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:00.4235", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 33.8010ms", "ElapsedMilliseconds": 33.801, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:00.4776", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:00.4776", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:00.4776", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:00.4776", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:00.4776", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.4776", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.4877", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.4877", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.4877", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.4877", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.4877", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.5007", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.5007", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.5007", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.5007", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.5007", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:00.5007", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 30.2361ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 30.2361, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:00.5007", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:00.5007", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 31.2062ms", "ElapsedMilliseconds": 31.2062, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:00.6442", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:00.6442", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:00.6442", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:00.6442", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:00.6442", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.6587", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.6587", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.6587", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.6587", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.6587", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.6739", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.6739", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.6739", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.6892", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.6892", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.6892", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:00.6892", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 46.6917ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 46.6917, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:00.6892", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:00.6892", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 47.3987ms", "ElapsedMilliseconds": 47.3987, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:00.8612", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:00.8612", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:00.8612", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:00.8612", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:00.8612", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.8612", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.8612", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.8766", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.8766", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.8766", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.8766", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.8766", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.8766", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.8912", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.8912", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.8912", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:00.8912", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 31.9788ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 31.9788, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:00.8912", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:00.8912", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 32.4448ms", "ElapsedMilliseconds": 32.4448, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:00.9190", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:00.9190", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:00.9190", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:00.9190", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:00.9220", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.9220", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.9220", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.9220", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.9220", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.9220", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.9591", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.9591", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.9591", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.9591", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.9697", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.9697", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:00.9697", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 50.6603ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 50.6603, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:00.9697", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:00.9697", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 51.2648ms", "ElapsedMilliseconds": 51.2648, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:00.9902", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:00.9902", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:00.9902", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:00.9902", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:00.9902", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.9902", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:00.9902", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.0014", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.0014", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.0014", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.0014", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.0014", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.0014", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.0369", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.0369", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.0369", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:01.0369", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 49.1902ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 49.1902, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:01.0369", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:01.0369", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 49.9333ms", "ElapsedMilliseconds": 49.9333, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:01.0640", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:01.0640", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:01.0640", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:01.0640", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:01.0640", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.0640", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.0640", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.0640", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.0801", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.0801", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.0801", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.0801", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.0801", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.0940", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.0940", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.0940", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:01.0940", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 33.1645ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 33.1645, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:01.0940", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:01.0940", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 34.0522ms", "ElapsedMilliseconds": 34.0522, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:01.1220", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:01.1220", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:01.1220", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:01.1220", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:01.1220", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.1274", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.1274", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.1274", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.1274", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.1274", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.1274", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.1910", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.2147", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.2147", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.2371", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.2371", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:01.2371", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 114.7864ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 114.7864, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:01.2371", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:01.2371", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 115.5537ms", "ElapsedMilliseconds": 115.5537, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:01.2563", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:01.2563", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:01.2563", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:01.2563", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:01.2563", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.2563", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.2563", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.2675", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.2675", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.2675", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.2675", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.2675", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.2675", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.2675", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.2823", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.2823", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:01.2823", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 25.8961ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 25.8961, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:01.2823", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:01.2823", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 26.3657ms", "ElapsedMilliseconds": 26.3657, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:01.3504", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:01.3504", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:01.3504", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:01.3504", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:01.3504", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.3504", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.3504", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.3504", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.3610", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.3610", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.3610", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.3610", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.3610", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.3610", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.3610", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.3610", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:01.3610", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 23.3282ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 23.3282, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:01.3610", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:01.3610", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 23.8557ms", "ElapsedMilliseconds": 23.8557, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:01.5529", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:01.5529", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:01.5529", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:01.5529", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:01.5529", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.5529", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.5529", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.5650", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.5650", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.5650", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.5650", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.5650", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.5650", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.5800", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.5800", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.5800", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:01.5800", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 31.59ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 31.59, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:01.5800", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:01.5800", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 32.2137ms", "ElapsedMilliseconds": 32.2137, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:01.6483", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:01.6483", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:01.6483", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:01.6483", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:01.6483", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.6483", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.6587", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.6587", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.6587", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.6587", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.6587", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.6721", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.6721", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.6721", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.6721", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.6721", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:01.6721", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 30.6087ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 30.6087, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:01.6721", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:01.6721", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 31.2257ms", "ElapsedMilliseconds": 31.2257, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:01.7718", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:01.7718", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:01.7718", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:01.7718", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:01.7718", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.7718", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.7889", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "3", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.7889", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.7889", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.7991", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.7991", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.7991", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.7991", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.7991", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.8164", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.8164", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:01.8164", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 44.1333ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 44.1333, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:01.8164", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:01.8164", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 45.2936ms", "ElapsedMilliseconds": 45.2936, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:01.8886", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:01.8886", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:01.8886", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:01.8886", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:01.8938", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.8938", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.8938", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "3", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.9081", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.9081", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.9081", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.9081", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.9081", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.9081", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.9253", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.9253", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:01.9253", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:01.9253", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 42.5572ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 42.5572, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:01.9253", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:01.9253", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 43.0497ms", "ElapsedMilliseconds": 43.0497, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:01.9988", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:01.9988", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:01.9988", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:01.9988", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:02.0048", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0048", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0048", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0166", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0166", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0166", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0166", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0166", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0166", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0358", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0358", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0358", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:02.0358", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 38.2441ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 38.2441, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:02.0358", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:02.0358", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 39.7370ms", "ElapsedMilliseconds": 39.737, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:02.0673", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:02.0673", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:02.0673", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:02.0673", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:02.0673", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0673", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0673", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0838", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0838", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0838", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0838", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0838", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0992", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0992", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0992", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.0992", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:02.0992", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 36.6608ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 36.6608, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:02.0992", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:02.0992", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 37.3462ms", "ElapsedMilliseconds": 37.3462, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:02.1464", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:02.1464", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:02.1464", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - 204 - - 0.6298ms", "ElapsedMilliseconds": 0.6298, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:02.1851", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:02.1851", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:02.1851", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:02.1851", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:02.1941", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.1941", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.2061", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.2061", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.2061", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.2061", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.2061", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.2211", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.2211", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.2211", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.2211", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.2211", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:02.2211", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 44.0021ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 44.0021, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:02.2211", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:02.2211", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 45.2128ms", "ElapsedMilliseconds": 45.2128, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:02.3337", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:02.3337", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:02.3337", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:02.3337", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:02.3337", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.3337", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.3454", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.3454", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.3454", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.3454", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.3599", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.3599", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.3599", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.3599", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.3599", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.3599", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:02.3599", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 39.0304ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 39.0304, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:02.3599", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:02.3599", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 40.6899ms", "ElapsedMilliseconds": 40.6899, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:02.4239", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:02.4239", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:02.4239", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:02.4239", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:02.4239", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.4239", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.4239", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.4239", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.4398", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.4398", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.4398", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.4398", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.4398", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.4398", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.4536", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.4536", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:02.4536", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 29.6839ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 29.6839, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:02.4536", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:02.4536", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 30.0583ms", "ElapsedMilliseconds": 30.0583, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:02.4859", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:02.4859", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:02.4859", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:02.4859", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:02.4859", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.4859", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.4859", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.4859", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.5023", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.5023", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.5023", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.5023", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.5023", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.5168", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.5168", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.5168", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:02.5168", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 33.1571ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 33.1571, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:02.5168", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:02.5168", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 33.7279ms", "ElapsedMilliseconds": 33.7279, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:02.5444", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:02.5444", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:02.5444", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:02.5444", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:02.5520", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.5520", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.5520", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.5650", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.5650", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.5650", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.5650", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.5790", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.5790", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.5790", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.5790", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.5790", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:02.5790", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 45.5117ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 45.5117, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:02.5790", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:02.5790", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 46.2878ms", "ElapsedMilliseconds": 46.2878, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:02.8038", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:02.8038", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:02.8038", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:02.8038", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:02.8038", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.8038", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.8038", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.8166", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.8166", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.8166", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.8166", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.8166", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.8166", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.8166", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.8299", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.8299", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:02.8299", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 26.2096ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 26.2096, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:02.8299", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:02.8299", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 26.7908ms", "ElapsedMilliseconds": 26.7908, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:02.8776", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:02.8776", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:02.8776", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:02.8776", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:02.8776", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.8776", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.8776", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.8776", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.8942", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.8942", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.8942", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.8942", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.8942", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.9072", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.9072", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.9072", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:02.9072", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 31.5207ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 31.5207, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:02.9072", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:02.9072", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 32.0106ms", "ElapsedMilliseconds": 32.0106, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:02.9385", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:02.9385", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:02.9385", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:02.9385", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:02.9385", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.9385", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.9385", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.9554", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.9554", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.9554", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.9554", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.9703", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.9703", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.9703", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.9703", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:02.9703", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:02.9703", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 38.6611ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 38.6611, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:02.9703", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:02.9703", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 39.1553ms", "ElapsedMilliseconds": 39.1553, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:03.0118", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:03.0118", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:03.0118", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:03.0118", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:03.0203", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.0203", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.0203", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.0203", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.0329", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.0329", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.0329", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.0329", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.0329", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.0480", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.0480", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.0480", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:03.0480", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 41.0064ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 41.0064, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:03.0480", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:03.0480", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 41.3920ms", "ElapsedMilliseconds": 41.392, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:03.1046", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:03.1046", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:03.1046", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:03.1046", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:03.1046", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1103", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1103", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1103", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1103", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1257", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1257", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1257", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1257", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1257", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1410", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1410", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:03.1410", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 36.2484ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 36.2484, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:03.1410", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:03.1410", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 36.7962ms", "ElapsedMilliseconds": 36.7962, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:08:03.1410", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:08:03.1410", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:08:03.1410", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:08:03.1410", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:08:03.1587", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1587", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1587", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1587", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1587", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1587", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1732", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1732", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1732", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1732", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1732", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:08:03.1732", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:08:03.1732", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 28.6591ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 28.6591, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:08:03.1732", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:08:03.1732", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 29.0835ms", "ElapsedMilliseconds": 29.0835, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:09:10.7711", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:09:10.7711", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:09:10.7711", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - 204 - - 0.7125ms", "ElapsedMilliseconds": 0.7125, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:09:11.2653", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:09:11.2653", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:09:11.2900", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:09:11.2900", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:09:11.2900", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:11.2900", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:11.2975", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:11.2975", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:11.2975", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:11.2975", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:11.2975", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:11.2975", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:11.2975", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:11.2975", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:11.3141", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:11.3141", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:09:11.3141", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 23.4361ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 23.4361, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:09:11.3141", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:09:11.3141", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 49.0532ms", "ElapsedMilliseconds": 49.0532, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:09:14.0425", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:09:14.0425", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:09:14.0425", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:09:14.0425", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:09:14.0425", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:14.0496", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:14.0496", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:14.0496", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:14.0496", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:14.0496", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:14.0496", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:14.0650", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:14.0650", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:14.0650", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:14.0650", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:14.0650", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:09:14.0650", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 29.3798ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 29.3798, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:09:14.0650", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:09:14.0650", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 30.5063ms", "ElapsedMilliseconds": 30.5063, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:09:15.5484", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:09:15.5484", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:09:15.5484", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:09:15.5484", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:09:15.5484", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:15.5484", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:15.5484", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:15.5484", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:15.5635", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:15.5635", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:15.5635", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:15.5635", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:15.5635", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:15.5635", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:15.5635", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:15.5635", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:09:15.5635", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 27.7877ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 27.7877, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:09:15.5635", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:09:15.5635", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 29.1400ms", "ElapsedMilliseconds": 29.14, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:09:20.2822", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:09:20.2822", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:09:20.2822", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - 204 - - 0.5389ms", "ElapsedMilliseconds": 0.5389, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:09:20.2986", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:09:20.2986", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:09:20.2986", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:09:20.2986", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:09:20.2986", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:20.2986", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:20.2986", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:20.2986", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:20.3136", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:20.3136", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:20.3136", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:20.3136", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:20.3136", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:20.3136", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:20.3136", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:20.3136", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:09:20.3136", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 28.2401ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 28.2401, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:09:20.3136", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:09:20.3136", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 28.6831ms", "ElapsedMilliseconds": 28.6831, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:09:41.2391", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:09:41.2391", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:09:41.2391", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - 204 - - 0.3876ms", "ElapsedMilliseconds": 0.3876, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:09:41.2514", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:09:41.2514", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:09:41.2514", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:09:41.2514", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:09:41.2514", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:41.2514", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:41.2514", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:41.2514", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:41.2514", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:41.2514", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:41.2677", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:41.2677", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:41.2677", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:41.2677", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:41.2677", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:09:41.2677", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:09:41.2677", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 26.0922ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 26.0922, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:09:41.2677", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:09:41.2677", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 26.7243ms", "ElapsedMilliseconds": 26.7243, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:16:54.1046", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:16:54.1046", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:16:54.1046", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - 204 - - 1.3376ms", "ElapsedMilliseconds": 1.3376, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:16:54.1238", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:16:54.1238", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:16:54.1238", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:16:54.1238", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:16:54.1499", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:16:54.1499", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:16:54.1499", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:16:54.1573", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:16:54.1573", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:16:54.1573", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:16:54.1573", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:16:54.1573", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:16:54.1573", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:16:54.1573", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:16:54.1573", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:16:54.1573", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:16:54.1573", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 46.7767ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 46.7767, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:16:54.1573", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:16:54.1573", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 48.2607ms", "ElapsedMilliseconds": 48.2607, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:23:46.4495", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-08 14:23:46.6347", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-08 14:23:46.6347", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-08 14:23:46.6347", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-08 14:23:46.6416", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-08 14:23:47.6029", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:23:47.7465", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-08 14:23:47.8583", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 257.7863ms", "ElapsedMilliseconds": 257.7863, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:23:47.8608", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:23:47.8608", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.3434ms", "ElapsedMilliseconds": 2.3434, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:23:47.8608", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:23:47.9003", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 35.5465ms", "ElapsedMilliseconds": 35.5465, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:23:47.9518", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:23:48.1151", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 163.3412ms", "ElapsedMilliseconds": 163.3412, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:24:02.0983", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:24:02.0983", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:24:02.1747", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:24:02.2146", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:24:07.2368", "level": "INFO", "message": "Executed DbCommand (45ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "45", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:24:07.3200", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:24:07.3503", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:24:07.3857", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:24:07.4784", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "2", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:24:07.4784", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:24:07.4784", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:24:07.4852", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - 204 - - 2.9075ms", "ElapsedMilliseconds": 2.9075, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:24:07.4852", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:24:08.4454", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:24:08.4454", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:24:08.4454", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 6232.3855ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 6232.3855, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:24:08.4534", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:24:08.4534", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 6368.5517ms", "ElapsedMilliseconds": 6368.5517, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:24:08.5131", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:24:08.5131", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:24:08.6639", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:24:08.6639", "level": "WARN", "message": "The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.", "EventId": 10103, "EventName": "Microsoft.EntityFrameworkCore.Query.FirstWithoutOrderByAndFilterWarning" }
{ "time": "2024-04-08 14:24:08.6800", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:24:08.7160", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:24:08.7212", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:24:08.7212", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:24:08.7212", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:24:08.7212", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:24:08.7212", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:24:08.7358", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:24:08.7358", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:24:08.7358", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:24:08.7358", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:24:08.7358", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 232.9485ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 232.9485, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:24:08.7358", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:24:08.7358", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 303.0270ms", "ElapsedMilliseconds": 303.027, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:24:26.9321", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-08 14:24:27.0502", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-08 14:24:27.0502", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-08 14:24:27.0502", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-08 14:24:27.0502", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-08 14:24:28.0170", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:24:28.1188", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-08 14:24:28.1934", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:24:28.1934", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 176.9306ms", "ElapsedMilliseconds": 176.9306, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:24:28.2069", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:24:28.2069", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 4.8245ms", "ElapsedMilliseconds": 4.8245, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:24:28.2251", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 31.7434ms", "ElapsedMilliseconds": 31.7434, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:24:28.2746", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:24:28.4238", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 148.5713ms", "ElapsedMilliseconds": 148.5713, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:26:25.6981", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:26:25.7326", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:26:25.7346", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - 204 - - 37.3082ms", "ElapsedMilliseconds": 37.3082, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:26:25.9052", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:26:25.9114", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:26:26.0814", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:26:26.1065", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:26:27.2954", "level": "INFO", "message": "Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "15", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:27.3440", "level": "WARN", "message": "The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.", "EventId": 10103, "EventName": "Microsoft.EntityFrameworkCore.Query.FirstWithoutOrderByAndFilterWarning" }
{ "time": "2024-04-08 14:26:27.3719", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:27.5097", "level": "INFO", "message": "Executed DbCommand (9ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "9", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:27.5194", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:27.5194", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:27.5194", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:27.5194", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:27.5194", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:27.5350", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:27.5350", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:27.5350", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:27.5350", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:26:27.5582", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 1447.2307ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 1447.2307, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:26:27.5582", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:26:27.5697", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 1664.5263ms", "ElapsedMilliseconds": 1664.5263, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:26:38.6531", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:26:38.6531", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:26:38.6531", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - 204 - - 1.8164ms", "ElapsedMilliseconds": 1.8164, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 14:26:38.6665", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 14:26:38.6665", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 14:26:38.6665", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 14:26:38.6665", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 14:26:38.7345", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:38.7370", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:38.7370", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:38.7370", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:38.7370", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:38.7536", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:38.7536", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:38.7536", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:38.7536", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:38.7536", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:38.7708", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 14:26:38.7708", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 14:26:38.7708", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 101.3297ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 101.3297, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 14:26:38.7708", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 14:26:38.7708", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 105.8774ms", "ElapsedMilliseconds": 105.8774, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:00:47.1380", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-08 15:00:47.4015", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-08 15:00:47.4135", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-08 15:00:47.4135", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-08 15:00:47.4135", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-08 15:00:47.4561", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:00:47.5244", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-08 15:00:47.5362", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:00:47.5486", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - 204 - - 104.1751ms", "ElapsedMilliseconds": 104.1751, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:00:47.6151", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:00:47.6325", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:00:47.9052", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:00:47.9091", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:00:47.9527", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:00:48.2900", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 380.8688ms", "ElapsedMilliseconds": 380.8688, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:00:48.3024", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:00:48.3024", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 6.9891ms", "ElapsedMilliseconds": 6.9891, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:00:48.3141", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:00:48.3908", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 77.0195ms", "ElapsedMilliseconds": 77.0195, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:00:48.4862", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:00:48.7026", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 216.0646ms", "ElapsedMilliseconds": 216.0646, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:00:50.3979", "level": "INFO", "message": "Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "23", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:00:50.5390", "level": "WARN", "message": "The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.", "EventId": 10103, "EventName": "Microsoft.EntityFrameworkCore.Query.FirstWithoutOrderByAndFilterWarning" }
{ "time": "2024-04-08 15:00:50.6199", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:00:51.0998", "level": "INFO", "message": "Executed DbCommand (14ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "14", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:00:51.1135", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:00:51.1135", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:00:51.1135", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:00:51.1275", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:00:51.1275", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:00:51.1275", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:00:51.1275", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:00:51.1441", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:00:51.1441", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:00:51.1649", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 3206.202ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 3206.202, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:00:51.1649", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:00:51.2003", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 3585.3993ms", "ElapsedMilliseconds": 3585.3993, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:01:02.7415", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:01:02.7415", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:01:02.7540", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:01:02.7956", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:01:05.4639", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "3", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:01:05.5351", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:01:05.6003", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "3", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:01:05.6631", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:01:05.7432", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "3", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:01:05.7432", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:01:06.1413", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 3345.1333ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 3345.1333, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:01:06.1418", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:01:06.1418", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:01:06.1418", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:01:06.1418", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 3400.9965ms", "ElapsedMilliseconds": 3400.9965, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:01:06.1418", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/getAllLicenses - 204 - - 1.1068ms", "ElapsedMilliseconds": 1.1068, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:01:06.2356", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:01:06.2356", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:01:06.2356", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:01:06.2356", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:01:06.2940", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:01:06.2995", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:01:06.2995", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "3", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:01:06.3166", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:01:06.3166", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:01:06.3166", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:01:06.3315", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:01:06.3315", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:01:06.3315", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:01:06.3470", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:01:06.3470", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:01:06.3470", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:01:06.3470", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 106.538ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 106.538, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:01:06.3470", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:01:06.3470", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/getAllLicenses - 200 - application/json;+charset=utf-8 119.2011ms", "ElapsedMilliseconds": 119.2011, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/getAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:03:57.5979", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 1 }
{ "time": "2024-04-08 15:03:57.5979", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:03:57.5979", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - 204 - - 2.8895ms", "ElapsedMilliseconds": 2.8895, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 2 }
{ "time": "2024-04-08 15:03:57.6227", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 1 }
{ "time": "2024-04-08 15:03:57.6227", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:03:57.6298", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:03:57.6298", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:03:57.6876", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:03:57.7243", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 83.7166ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 83.7166, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:03:57.7243", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:03:57.7243", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - 400 - application/problem+json;+charset=utf-8 102.5427ms", "ElapsedMilliseconds": 102.5427, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 2 }
{ "time": "2024-04-08 15:04:02.9283", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 1 }
{ "time": "2024-04-08 15:04:02.9283", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:04:02.9283", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - 204 - - 2.4774ms", "ElapsedMilliseconds": 2.4774, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 2 }
{ "time": "2024-04-08 15:04:02.9905", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 1 }
{ "time": "2024-04-08 15:04:02.9905", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:04:02.9905", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:04:02.9905", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:04:02.9905", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:04:02.9905", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 2.7996ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 2.7996, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:04:02.9905", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:04:02.9905", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - 400 - application/problem+json;+charset=utf-8 5.6738ms", "ElapsedMilliseconds": 5.6738, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 2 }
{ "time": "2024-04-08 15:04:52.1129", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 1 }
{ "time": "2024-04-08 15:04:52.1464", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Admin)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Admin)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-08 15:04:52.1683", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-08 15:04:52.1683", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - 401 0 - 56.0621ms", "ElapsedMilliseconds": 56.0621, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 2 }
{ "time": "2024-04-08 15:04:56.2322", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 1 }
{ "time": "2024-04-08 15:04:56.2322", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:04:56.2322", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - 204 - - 1.2497ms", "ElapsedMilliseconds": 1.2497, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 2 }
{ "time": "2024-04-08 15:04:56.2471", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 1 }
{ "time": "2024-04-08 15:04:56.2471", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:04:56.2471", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:04:56.2471", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:04:56.2528", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:04:56.2528", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 3.3833ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 3.3833, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:04:56.2528", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:04:56.2528", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - 400 - application/problem+json;+charset=utf-8 6.9361ms", "ElapsedMilliseconds": 6.9361, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 2 }
{ "time": "2024-04-08 15:04:59.6274", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:04:59.6274", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Admin)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Admin)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-08 15:04:59.6274", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-08 15:04:59.6274", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 401 0 - 2.7176ms", "ElapsedMilliseconds": 2.7176, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:06:55.5236", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:06:55.5319", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:06:55.5319", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:06:55.7054", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "3", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:06:55.7216", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-08 15:06:55.7216", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-08 15:06:55.7466", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "2", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:06:55.9936", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:06:55.9936", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:06:56.0289", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:06:56.0526", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:06:56.0802", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:06:56.1138", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "4", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:06:56.1138", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:06:56.1300", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:06:56.1300", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:06:56.1300", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 603.6831ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 603.6831, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:06:56.1300", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:06:56.1300", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 619.2306ms", "ElapsedMilliseconds": 619.2306, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:07:01.8472", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 1 }
{ "time": "2024-04-08 15:07:01.8472", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:07:01.8472", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - 204 - - 0.7164ms", "ElapsedMilliseconds": 0.7164, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 2 }
{ "time": "2024-04-08 15:07:01.9340", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 1 }
{ "time": "2024-04-08 15:07:01.9340", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:07:01.9340", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:07:01.9340", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:07:01.9395", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:07:01.9395", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 3.5142ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 3.5142, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:07:01.9395", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:07:01.9395", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - 400 - application/problem+json;+charset=utf-8 6.6095ms", "ElapsedMilliseconds": 6.6095, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 2 }
{ "time": "2024-04-08 15:07:34.3495", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 1 }
{ "time": "2024-04-08 15:07:34.3495", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:07:34.3495", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - 204 - - 10.2496ms", "ElapsedMilliseconds": 10.2496, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 2 }
{ "time": "2024-04-08 15:07:34.3688", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 1 }
{ "time": "2024-04-08 15:07:34.3688", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:07:34.3688", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:07:34.3688", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:07:34.3688", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:07:34.3688", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 2.6143ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 2.6143, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:07:34.3688", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:07:34.3688", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - 400 - application/problem+json;+charset=utf-8 5.3362ms", "ElapsedMilliseconds": 5.3362, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 2 }
{ "time": "2024-04-08 15:08:44.8960", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:08:44.9249", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/swagger/index.html - 200 - text/html;charset=utf-8 29.0059ms", "ElapsedMilliseconds": 29.0059, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:08:45.0067", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/swagger/swagger-ui.css - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/swagger/swagger-ui.css", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:08:45.0179", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/swagger/swagger-ui-standalone-preset.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/swagger/swagger-ui-standalone-preset.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:08:45.0179", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/swagger/swagger-ui-bundle.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/swagger/swagger-ui-bundle.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:08:45.2996", "level": "INFO", "message": "Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'", "VirtualPath": "/swagger-ui.css", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" }
{ "time": "2024-04-08 15:08:45.2996", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/swagger/swagger-ui.css - 200 143943 text/css 295.5784ms", "ElapsedMilliseconds": 295.5784, "StatusCode": 200, "ContentType": "text/css", "ContentLength": 143943, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/swagger/swagger-ui.css", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:08:45.3149", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:08:45.3149", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:08:45.3149", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 5.0456ms", "ElapsedMilliseconds": 5.0456, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:08:45.7693", "level": "INFO", "message": "Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'", "VirtualPath": "/swagger-ui-standalone-preset.js", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" }
{ "time": "2024-04-08 15:08:45.7693", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/swagger/swagger-ui-standalone-preset.js - 200 339486 text/javascript 752.1025ms", "ElapsedMilliseconds": 752.1025, "StatusCode": 200, "ContentType": "text/javascript", "ContentLength": 339486, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/swagger/swagger-ui-standalone-preset.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:08:45.9399", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 624.9067ms", "ElapsedMilliseconds": 624.9067, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:08:46.5522", "level": "INFO", "message": "Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'", "VirtualPath": "/swagger-ui-bundle.js", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" }
{ "time": "2024-04-08 15:08:46.5522", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/swagger/swagger-ui-bundle.js - 200 1096145 text/javascript 1534.1468ms", "ElapsedMilliseconds": 1534.1468, "StatusCode": 200, "ContentType": "text/javascript", "ContentLength": 1096145, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/swagger/swagger-ui-bundle.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:08:47.2996", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:08:47.3142", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/swagger/favicon-32x32.png - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/swagger/favicon-32x32.png", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:08:47.3142", "level": "INFO", "message": "Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'", "VirtualPath": "/favicon-32x32.png", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" }
{ "time": "2024-04-08 15:08:47.3142", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/swagger/favicon-32x32.png - 200 628 image/png 0.9667ms", "ElapsedMilliseconds": 0.9667, "StatusCode": 200, "ContentType": "image/png", "ContentLength": 628, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/swagger/favicon-32x32.png", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:08:47.3142", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 24.8708ms", "ElapsedMilliseconds": 24.8708, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:10:04.7710", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:10:04.7710", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Admin)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Admin)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-08 15:10:04.7710", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-08 15:10:04.7710", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 401 0 - 3.5112ms", "ElapsedMilliseconds": 3.5112, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:10:54.1014", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 1 }
{ "time": "2024-04-08 15:10:54.1014", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:10:54.1014", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - 204 - - 10.2969ms", "ElapsedMilliseconds": 10.2969, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 2 }
{ "time": "2024-04-08 15:10:54.1748", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 1 }
{ "time": "2024-04-08 15:10:54.1748", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:10:54.1748", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:10:54.1748", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:10:54.1748", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:10:54.1748", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 2.9147ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 2.9147, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:10:54.1748", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:10:54.1748", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5 - 400 - application/problem+json;+charset=utf-8 5.2066ms", "ElapsedMilliseconds": 5.2066, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 2 }
{ "time": "2024-04-08 15:10:58.5997", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:10:58.5997", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:10:58.5997", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 204 - - 0.8600ms", "ElapsedMilliseconds": 0.86, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:10:58.6347", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:10:58.6347", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:10:58.6347", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:10:58.6347", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:10:58.6451", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:10:58.6451", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:10:58.6582", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:10:58.6582", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:10:58.6582", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:10:58.6777", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:10:58.6777", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:10:58.6919", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:10:58.6919", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:10:58.7034", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:10:58.7034", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:10:58.7034", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 68.0365ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 68.0365, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:10:58.7034", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:10:58.7034", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 70.4124ms", "ElapsedMilliseconds": 70.4124, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:16:41.1331", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:16:41.1422", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:16:41.1422", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 204 - - 12.6769ms", "ElapsedMilliseconds": 12.6769, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:16:41.2652", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:16:41.2652", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:16:41.2670", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:16:41.2670", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:16:41.2670", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:16:41.2828", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:16:41.2828", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:16:41.2828", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:16:41.3013", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:16:41.3013", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:16:41.3137", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:16:41.3137", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:16:41.3137", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:16:41.3343", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:16:41.3343", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:16:41.3343", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 68.0508ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 68.0508, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:16:41.3343", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:16:41.3343", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 70.8404ms", "ElapsedMilliseconds": 70.8404, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:17:10.2781", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:17:10.2781", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:17:10.2781", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 204 - - 5.2547ms", "ElapsedMilliseconds": 5.2547, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:17:10.3705", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:17:10.3705", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:17:10.3705", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:17:10.3705", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:17:10.4086", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:17:10.4086", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:17:10.4086", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:17:10.4253", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:17:10.4253", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:17:10.4253", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:17:10.4417", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:17:10.4417", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:17:10.4545", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:17:10.4545", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:17:10.4545", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:17:10.4545", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 89.2454ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 89.2454, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:17:10.4545", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:17:10.4545", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 91.4909ms", "ElapsedMilliseconds": 91.4909, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:18:25.8032", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:18:25.8032", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:18:25.8032", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 204 - - 13.2832ms", "ElapsedMilliseconds": 13.2832, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:18:25.8684", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:18:25.8684", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:18:25.8684", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:18:25.8684", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:18:25.8774", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:25.8774", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:25.8774", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:25.8929", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:25.8929", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:25.8929", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:25.9386", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:25.9386", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:25.9386", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:25.9577", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:25.9577", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:18:25.9577", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 88.9405ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 88.9405, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:18:25.9577", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:18:25.9577", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 91.0108ms", "ElapsedMilliseconds": 91.0108, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:18:46.6715", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:18:46.6722", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:18:46.6722", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 204 - - 1.0091ms", "ElapsedMilliseconds": 1.0091, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:18:46.6902", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:18:46.6902", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:18:46.6902", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:18:46.6902", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:18:46.6902", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:46.7047", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:46.7047", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:46.7047", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:46.7199", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:46.7199", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:46.7199", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:46.7381", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:46.7381", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:46.7381", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:46.7503", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:18:46.7503", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 58.7017ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 58.7017, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:18:46.7503", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:18:46.7503", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 60.9307ms", "ElapsedMilliseconds": 60.9307, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:18:54.0387", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:18:54.0387", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:18:54.0387", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 204 - - 4.3714ms", "ElapsedMilliseconds": 4.3714, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:18:54.0914", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:18:54.0914", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:18:54.0914", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:18:54.0914", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:18:54.0995", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:54.0995", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-08 15:18:54.1130", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-08 15:18:54.1302", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:54.1302", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:54.1302", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:54.1447", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:54.1447", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:54.1447", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:54.1605", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:54.1605", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:54.1605", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:18:54.1605", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:18:54.1605", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 79.3031ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 79.3031, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:18:54.1605", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:18:54.1605", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 81.1305ms", "ElapsedMilliseconds": 81.1305, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:19:11.3341", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:19:11.3341", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:19:11.3341", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 204 - - 0.9871ms", "ElapsedMilliseconds": 0.9871, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:19:11.3475", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:19:11.3475", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:19:11.3475", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:19:11.3475", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:19:11.3475", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:19:11.3619", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:19:11.3619", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:19:11.3619", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:19:11.3770", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:19:11.3770", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:19:11.3770", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:19:11.3934", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:19:11.3934", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:19:11.3934", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:19:11.3934", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:19:11.3934", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 55.6436ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 55.6436, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:19:11.3934", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:19:11.3934", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 58.5368ms", "ElapsedMilliseconds": 58.5368, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:20:26.4591", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:20:26.4591", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:20:26.4702", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - 204 - - 8.3035ms", "ElapsedMilliseconds": 8.3035, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:20:26.4702", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:20:26.4702", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:20:26.4702", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:20:26.4702", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:20:26.4911", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:26.4911", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:26.5008", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:26.5008", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:26.5008", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:26.5164", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:26.5164", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:26.5164", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:26.5164", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:20:26.5164", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 44.3828ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 44.3828, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:20:26.5164", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:20:26.5164", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 46.5440ms", "ElapsedMilliseconds": 46.544, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:20:35.7666", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:20:35.7672", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:20:35.7672", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 204 - - 0.9785ms", "ElapsedMilliseconds": 0.9785, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:20:35.8124", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:20:35.8124", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:20:35.8136", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:20:35.8136", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:20:35.8136", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:35.8136", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:35.8319", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:35.8319", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:35.8319", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:35.8473", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:35.8473", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:35.8607", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "3", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:35.8607", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:35.8607", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:35.8607", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:20:35.8607", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 59.7848ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 59.7848, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:20:35.8607", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:20:35.8607", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 61.7965ms", "ElapsedMilliseconds": 61.7965, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:20:40.5283", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:20:40.5333", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:20:40.5333", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 204 - - 10.5656ms", "ElapsedMilliseconds": 10.5656, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:20:40.5944", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:20:40.5944", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:20:40.5944", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:20:40.5944", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:20:40.5944", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:40.5944", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:40.6123", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:40.6123", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_0 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:40.6123", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:40.6268", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:40.6268", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:40.6268", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:40.6433", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:40.6433", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:20:40.6433", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:20:40.6433", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 54.3003ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 54.3003, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:20:40.6433", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:20:40.6433", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=2&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 56.0845ms", "ElapsedMilliseconds": 56.0845, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=2&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:21:01.0370", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=5&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:21:01.0370", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:21:01.0370", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=5&PageSize=5&sortBy=status - 204 - - 1.1076ms", "ElapsedMilliseconds": 1.1076, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:21:01.0839", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=5&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:21:01.0839", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:21:01.0839", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:21:01.0839", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:21:01.0839", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:21:01.0977", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:21:01.0977", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:21:01.0977", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:21:01.0977", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:21:01.0977", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 24.7499ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 24.7499, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:21:01.1103", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:21:01.1103", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=5&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 26.7423ms", "ElapsedMilliseconds": 26.7423, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=5&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:21:16.2816", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:21:16.2838", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:21:16.2838", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=4&PageSize=5&sortBy=status - 204 - - 2.9555ms", "ElapsedMilliseconds": 2.9555, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:21:16.2838", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=4&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:21:16.2838", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:21:16.2838", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:21:16.2838", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:21:16.3017", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:21:16.3017", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:21:16.3017", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:21:16.3173", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:21:16.3173", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:21:16.3173", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 23.0572ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 23.0572, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:21:16.3173", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:21:16.3173", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=4&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 25.2204ms", "ElapsedMilliseconds": 25.2204, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=4&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:21:25.4932", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:21:25.4932", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:21:25.4932", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - 204 - - 1.3979ms", "ElapsedMilliseconds": 1.3979, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:21:25.5073", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:21:25.5073", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:21:25.5073", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:21:25.5073", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:21:25.5160", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:21:25.5160", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:21:25.5160", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:21:25.5160", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:21:25.5359", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:21:25.5359", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:21:25.5359", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:21:25.5511", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:21:25.5511", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:21:25.5511", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 43.359ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 43.359, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:21:25.5511", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:21:25.5511", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=3&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 45.3526ms", "ElapsedMilliseconds": 45.3526, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=3&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:26:29.3461", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:26:29.3461", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:26:29.3461", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 204 - - 3.2896ms", "ElapsedMilliseconds": 3.2896, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:26:29.3757", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:26:29.3757", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:26:29.3757", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:26:29.3757", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:26:29.4314", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:26:29.4314", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:26:29.4439", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:26:29.4439", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:26:29.4567", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:26:29.4567", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:26:29.4698", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:26:29.4698", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:26:29.4698", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:26:29.4891", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:26:29.4891", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:26:29.4891", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 112.6326ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 112.6326, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:26:29.4891", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:26:29.4891", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 115.0226ms", "ElapsedMilliseconds": 115.0226, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:26:33.9181", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 1 }
{ "time": "2024-04-08 15:26:33.9181", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:26:33.9181", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:26:33.9181", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters, System.String)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:26:33.9272", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:26:33.9272", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:26:33.9378", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:26:33.9378", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:26:33.9378", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:26:33.9536", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:26:33.9536", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:26:33.9733", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "4", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:26:33.9733", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:26:33.9882", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:26:33.9882", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:26:33.9882", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 68.45ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 68.45, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:26:33.9882", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:26:33.9882", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/PaginationLicenses?PageNumber=1&PageSize=5&sortBy=status - 200 - application/json;+charset=utf-8 71.5198ms", "ElapsedMilliseconds": 71.5198, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/PaginationLicenses", "QueryString": "?PageNumber=1&PageSize=5&sortBy=status", "EventId": 2 }
{ "time": "2024-04-08 15:27:06.2677", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/GetAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:27:06.2677", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:27:06.2677", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/GetAllLicenses - 204 - - 11.9363ms", "ElapsedMilliseconds": 11.9363, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:27:06.2898", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/GetAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:27:06.2898", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:27:06.2898", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/GetAllLicenses - 404 0 - 1.5797ms", "ElapsedMilliseconds": 1.5797, "StatusCode": 404, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:27:06.2898", "level": "INFO", "message": "Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://192.168.0.105:5274/api/GetAllLicenses, Response status code: 404", "Method": "GET", "Scheme": "http", "Host": {"Value":"192.168.0.105:5274", "HasValue":true, "Host":"192.168.0.105", "Port":5274}, "PathBase": {"Value":"", "HasValue":false}, "Path": {"Value":"/api/GetAllLicenses", "HasValue":true}, "StatusCode": 404, "EventId": 16 }
{ "time": "2024-04-08 15:27:10.1698", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/GetAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:27:10.1698", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:27:10.1698", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/GetAllLicenses - 404 0 - 1.8778ms", "ElapsedMilliseconds": 1.8778, "StatusCode": 404, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:27:10.1698", "level": "INFO", "message": "Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://192.168.0.105:5274/api/GetAllLicenses, Response status code: 404", "Method": "GET", "Scheme": "http", "Host": {"Value":"192.168.0.105:5274", "HasValue":true, "Host":"192.168.0.105", "Port":5274}, "PathBase": {"Value":"", "HasValue":false}, "Path": {"Value":"/api/GetAllLicenses", "HasValue":true}, "StatusCode": 404, "EventId": 16 }
{ "time": "2024-04-08 15:27:28.1279", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/GetAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:27:28.1279", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:27:28.1279", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/GetAllLicenses - 204 - - 1.4330ms", "ElapsedMilliseconds": 1.433, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:27:28.2097", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/GetAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:27:28.2097", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:27:28.2097", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/GetAllLicenses - 404 0 - 1.3588ms", "ElapsedMilliseconds": 1.3588, "StatusCode": 404, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:27:28.2097", "level": "INFO", "message": "Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://192.168.0.105:5274/api/GetAllLicenses, Response status code: 404", "Method": "GET", "Scheme": "http", "Host": {"Value":"192.168.0.105:5274", "HasValue":true, "Host":"192.168.0.105", "Port":5274}, "PathBase": {"Value":"", "HasValue":false}, "Path": {"Value":"/api/GetAllLicenses", "HasValue":true}, "StatusCode": 404, "EventId": 16 }
{ "time": "2024-04-08 15:29:49.1923", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/GetAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:29:49.1923", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:29:49.1923", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/GetAllLicenses - 204 - - 11.2598ms", "ElapsedMilliseconds": 11.2598, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:29:49.3098", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/GetAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:29:49.3098", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:29:49.3098", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/GetAllLicenses - 404 0 - 1.3551ms", "ElapsedMilliseconds": 1.3551, "StatusCode": 404, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:29:49.3098", "level": "INFO", "message": "Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://192.168.0.105:5274/api/GetAllLicenses, Response status code: 404", "Method": "GET", "Scheme": "http", "Host": {"Value":"192.168.0.105:5274", "HasValue":true, "Host":"192.168.0.105", "Port":5274}, "PathBase": {"Value":"", "HasValue":false}, "Path": {"Value":"/api/GetAllLicenses", "HasValue":true}, "StatusCode": 404, "EventId": 16 }
{ "time": "2024-04-08 15:30:03.7548", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/GetAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:30:03.7548", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:30:03.7548", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/GetAllLicenses - 204 - - 1.4240ms", "ElapsedMilliseconds": 1.424, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:30:03.8925", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/GetAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:30:03.8925", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:30:03.8925", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/GetAllLicenses - 404 0 - 1.0869ms", "ElapsedMilliseconds": 1.0869, "StatusCode": 404, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:30:03.8925", "level": "INFO", "message": "Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://192.168.0.105:5274/api/GetAllLicenses, Response status code: 404", "Method": "GET", "Scheme": "http", "Host": {"Value":"192.168.0.105:5274", "HasValue":true, "Host":"192.168.0.105", "Port":5274}, "PathBase": {"Value":"", "HasValue":false}, "Path": {"Value":"/api/GetAllLicenses", "HasValue":true}, "StatusCode": 404, "EventId": 16 }
{ "time": "2024-04-08 15:30:21.5186", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/GetAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:30:21.5186", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:30:21.5186", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/GetAllLicenses - 204 - - 1.8305ms", "ElapsedMilliseconds": 1.8305, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:30:21.5755", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/GetAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:30:21.5755", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:30:21.5755", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/GetAllLicenses - 404 0 - 1.1678ms", "ElapsedMilliseconds": 1.1678, "StatusCode": 404, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/GetAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:30:21.5755", "level": "INFO", "message": "Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://192.168.0.105:5274/api/GetAllLicenses, Response status code: 404", "Method": "GET", "Scheme": "http", "Host": {"Value":"192.168.0.105:5274", "HasValue":true, "Host":"192.168.0.105", "Port":5274}, "PathBase": {"Value":"", "HasValue":false}, "Path": {"Value":"/api/GetAllLicenses", "HasValue":true}, "StatusCode": 404, "EventId": 16 }
{ "time": "2024-04-08 15:30:41.3285", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/GetAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/GetAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:30:41.3285", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:30:41.3285", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.105:5274/api/Licenses/GetAllLicenses - 204 - - 1.6261ms", "ElapsedMilliseconds": 1.6261, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/GetAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 15:30:41.4043", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/GetAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/GetAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 15:30:41.4043", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 15:30:41.4043", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 15:30:41.4043", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 15:30:41.4139", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"ProductName\", l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"\r\nLEFT JOIN \"Product\" AS p ON l.\"ProductId\" = p.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:30:41.4247", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:30:41.4247", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:30:41.4247", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:30:41.4421", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "3", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:30:41.4421", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:30:41.4421", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:30:41.4568", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:30:41.4568", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:30:41.4568", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:30:41.4704", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 15:30:41.4704", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 15:30:41.4704", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 65.5115ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 65.5115, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 15:30:41.4704", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 15:30:41.4704", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.105:5274/api/Licenses/GetAllLicenses - 200 - application/json;+charset=utf-8 67.1986ms", "ElapsedMilliseconds": 67.1986, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.105:5274", "PathBase": "", "Path": "/api/Licenses/GetAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 22:25:20.8826", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-08 22:25:22.6318", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-08 22:25:22.6318", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-08 22:25:22.6414", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-08 22:25:22.6414", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-08 22:25:23.7138", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:25:24.1010", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-08 22:25:24.1630", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger - 301 0 - 458.6227ms", "ElapsedMilliseconds": 458.6227, "StatusCode": 301, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 22:25:24.1723", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:25:24.3790", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 206.7407ms", "ElapsedMilliseconds": 206.7407, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 22:25:24.3790", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/swagger-ui.css - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/swagger-ui.css", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:25:24.3790", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/swagger-ui-bundle.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/swagger-ui-bundle.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:25:24.3790", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/swagger-ui-standalone-preset.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/swagger-ui-standalone-preset.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:25:24.4196", "level": "INFO", "message": "Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'", "VirtualPath": "/swagger-ui.css", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" }
{ "time": "2024-04-08 22:25:24.4196", "level": "INFO", "message": "Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'", "VirtualPath": "/swagger-ui-standalone-preset.js", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" }
{ "time": "2024-04-08 22:25:24.4196", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/swagger-ui.css - 200 143943 text/css 36.1805ms", "ElapsedMilliseconds": 36.1805, "StatusCode": 200, "ContentType": "text/css", "ContentLength": 143943, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/swagger-ui.css", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 22:25:24.4196", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/swagger-ui-standalone-preset.js - 200 339486 text/javascript 35.8894ms", "ElapsedMilliseconds": 35.8894, "StatusCode": 200, "ContentType": "text/javascript", "ContentLength": 339486, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/swagger-ui-standalone-preset.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 22:25:24.4196", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:25:24.4196", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:25:24.4196", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 1.8401ms", "ElapsedMilliseconds": 1.8401, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 22:25:24.4745", "level": "INFO", "message": "Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'", "VirtualPath": "/swagger-ui-bundle.js", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" }
{ "time": "2024-04-08 22:25:24.4745", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/swagger-ui-bundle.js - 200 1096145 text/javascript 88.8976ms", "ElapsedMilliseconds": 88.8976, "StatusCode": 200, "ContentType": "text/javascript", "ContentLength": 1096145, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/swagger-ui-bundle.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 22:25:24.5090", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 86.2608ms", "ElapsedMilliseconds": 86.2608, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 22:25:24.7209", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:25:24.9624", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 241.8121ms", "ElapsedMilliseconds": 241.8121, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 22:25:40.2033", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:25:40.2114", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 22:25:40.3577", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 22:25:40.4319", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 22:25:42.3366", "level": "INFO", "message": "Executed DbCommand (81ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "81", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 22:25:42.4708", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "4", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 22:25:42.5128", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 22:26:01.1123", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 20675.6677ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 20675.6677, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 22:26:01.1175", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 22:26:05.4342", "level": "ERROR", "message": "{\"ClassName\":\"System.NullReferenceException\",\"Message\":\"Object reference not set to an instance of an object.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Application.Services.JWTService.Login(UserLoginDto usersdata) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Application\\\\Services\\\\JWTService.cs:line 68\\r\\n   at Api.Controllers.AuthController.Login(UserLoginDto usersdata) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\AuthController.cs:line 34\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"Application\",\"WatsonBuckets\":null}" }
{ "time": "2024-04-08 22:26:06.4986", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 400 - application/json 26295.8184ms", "ElapsedMilliseconds": 26295.8184, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 22:26:26.8400", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-08 22:26:27.0652", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-08 22:26:27.0652", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-08 22:26:27.0792", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-08 22:26:27.0792", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-08 22:26:27.9056", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:26:28.1467", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-08 22:26:28.3518", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 452.4107ms", "ElapsedMilliseconds": 452.4107, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 22:26:28.3518", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:26:28.3518", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:26:28.3518", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.1064ms", "ElapsedMilliseconds": 2.1064, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 22:26:28.4044", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 49.7047ms", "ElapsedMilliseconds": 49.7047, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 22:26:28.6673", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:26:28.9356", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 268.2602ms", "ElapsedMilliseconds": 268.2602, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 22:26:44.0468", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:26:44.0596", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 22:26:44.2384", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 22:26:44.3440", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 22:26:49.0423", "level": "INFO", "message": "Executed DbCommand (136ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "136", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 22:26:49.2822", "level": "INFO", "message": "Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "6", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 22:26:49.3792", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 22:27:25.2614", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 40904.9845ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 40904.9845, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 22:27:25.3089", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 22:27:28.1748", "level": "ERROR", "message": "{\"ClassName\":\"System.NullReferenceException\",\"Message\":\"Object reference not set to an instance of an object.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Application.Services.JWTService.Login(UserLoginDto usersdata) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Application\\\\Services\\\\JWTService.cs:line 68\\r\\n   at Api.Controllers.AuthController.Login(UserLoginDto usersdata) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\AuthController.cs:line 34\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"Application\",\"WatsonBuckets\":null}" }
{ "time": "2024-04-08 22:27:30.9812", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 400 - application/json 46934.4052ms", "ElapsedMilliseconds": 46934.4052, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 22:27:37.8206", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:27:37.8206", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 22:27:37.8206", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 22:27:37.8206", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 22:27:38.0211", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 22:27:38.0211", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 22:27:38.0360", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 22:28:00.5971", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 22763.9833ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 22763.9833, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 22:28:00.5971", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 22:28:02.5795", "level": "ERROR", "message": "{\"ClassName\":\"System.NullReferenceException\",\"Message\":\"Object reference not set to an instance of an object.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Application.Services.JWTService.Login(UserLoginDto usersdata) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Application\\\\Services\\\\JWTService.cs:line 68\\r\\n   at Api.Controllers.AuthController.Login(UserLoginDto usersdata) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\AuthController.cs:line 34\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"Application\",\"WatsonBuckets\":null}" }
{ "time": "2024-04-08 22:28:03.9633", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 400 - application/json 26142.7964ms", "ElapsedMilliseconds": 26142.7964, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 22:28:08.8654", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:28:08.8654", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 22:28:08.8654", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 22:28:08.8654", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 22:28:08.9237", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 22:28:08.9237", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 22:28:08.9237", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 22:29:19.8607", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-08 22:29:20.0719", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-08 22:29:20.0719", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-08 22:29:20.0780", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-08 22:29:20.0780", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-08 22:29:21.2301", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:29:21.5108", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-08 22:29:21.6556", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:29:21.6556", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 439.7001ms", "ElapsedMilliseconds": 439.7001, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 22:29:21.6556", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:29:21.6636", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.8779ms", "ElapsedMilliseconds": 3.8779, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 22:29:21.6974", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 40.1548ms", "ElapsedMilliseconds": 40.1548, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 22:29:21.8020", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:29:22.0360", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 233.9602ms", "ElapsedMilliseconds": 233.9602, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 22:29:35.6234", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:29:35.6399", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 22:29:35.8098", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 22:29:35.9002", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 22:29:39.6856", "level": "INFO", "message": "Executed DbCommand (147ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "147", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 22:29:39.9226", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "3", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 22:29:40.0250", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 22:29:46.7338", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 10819.5745ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 10819.5745, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 22:29:46.7428", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 22:30:00.5025", "level": "ERROR", "message": "{\"ClassName\":\"System.ArgumentNullException\",\"Message\":\"Value cannot be null.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at System.ArgumentNullException.Throw(String paramName)\\r\\n   at System.Text.Encoding.GetBytes(String s)\\r\\n   at DataAccess.Repositories.JWTManagerRepository.GenerateJWTTokens(Int32 id, String userName, String roleName, List`1 permissions, Boolean rememberMe) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\DataAccess\\\\Repositories\\\\JWTManagerRepository.cs:line 84\\r\\n   at Application.Services.JWTService.Login(UserLoginDto usersdata) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Application\\\\Services\\\\JWTService.cs:line 67\\r\\n   at Api.Controllers.AuthController.Login(UserLoginDto usersdata) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\AuthController.cs:line 34\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"System.Private.CoreLib\",\"WatsonBuckets\":null,\"ParamName\":\"s\"}" }
{ "time": "2024-04-08 22:30:01.8127", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 400 - application/json 26189.3473ms", "ElapsedMilliseconds": 26189.3473, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 22:30:12.2684", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 22:30:15.1548", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 22:30:15.1568", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 22:30:15.1568", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 22:30:15.3299", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 22:30:15.3299", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 22:30:15.3299", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 22:30:40.4560", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 22:30:40.7255", "level": "INFO", "message": "Executed DbCommand (13ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "13", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 22:30:44.7401", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 22:30:49.3528", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 34195.0957ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 34195.0957, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 22:30:49.3528", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 22:30:50.1111", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 37843.5224ms", "ElapsedMilliseconds": 37843.5224, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 23:55:35.2063", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-08 23:55:35.5563", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-08 23:55:35.5563", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-08 23:55:35.5563", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-08 23:55:35.5563", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-08 23:55:36.4486", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 23:55:36.7336", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-08 23:55:36.9586", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 520.2247ms", "ElapsedMilliseconds": 520.2247, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 23:55:36.9586", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 23:55:36.9586", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 23:55:36.9704", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.2226ms", "ElapsedMilliseconds": 3.2226, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 23:55:37.0235", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 55.8906ms", "ElapsedMilliseconds": 55.8906, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 23:55:37.1084", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 23:55:37.4610", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 352.4626ms", "ElapsedMilliseconds": 352.4626, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 23:55:52.6411", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 23:55:52.6526", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-08 23:55:52.7757", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-08 23:55:52.8409", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-08 23:55:55.5297", "level": "INFO", "message": "Executed DbCommand (106ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "106", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 23:55:55.7189", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "3", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 23:55:55.7804", "level": "INFO", "message": "Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "elapsed": "6", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"PermissionName\", p.\"RolesId\"\r\nFROM \"Permissions\" AS p\r\nWHERE p.\"RolesId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 23:56:00.3328", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 23:56:00.5395", "level": "INFO", "message": "Executed DbCommand (7ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "7", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-08 23:56:01.9685", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.UserLoginResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.UserLoginResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-08 23:56:08.4283", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 15573.3525ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 15573.3525, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-08 23:56:08.4283", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-08 23:56:08.4577", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 15816.6591ms", "ElapsedMilliseconds": 15816.6591, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 23:56:37.0746", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 23:56:37.0943", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-08 23:56:37.0943", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-08 23:56:37.0943", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/User/GetLicenses - 401 0 - 33.7641ms", "ElapsedMilliseconds": 33.7641, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 23:56:45.3568", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 23:56:45.4655", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-08 23:56:45.4655", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-08 23:56:45.4655", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/User/GetLicenses - 403 0 - 112.8096ms", "ElapsedMilliseconds": 112.8096, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 23:57:26.4902", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 23:57:26.5314", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-08 23:57:26.5314", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-08 23:57:26.5314", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/User/GetLicenses - 403 0 - 43.3375ms", "ElapsedMilliseconds": 43.3375, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-08 23:58:41.0864", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-08 23:58:41.0864", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "Reason": "These requirements were not met:\r\nCore.Authorization.PermissionRequirement", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-08 23:58:41.0864", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-08 23:58:41.0864", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/User/GetLicenses - 403 0 - 30.1357ms", "ElapsedMilliseconds": 30.1357, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
