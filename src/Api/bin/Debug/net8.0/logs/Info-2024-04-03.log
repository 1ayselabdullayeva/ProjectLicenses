{ "time": "2024-04-03 00:18:12.1659", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 00:18:12.4870", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 00:18:12.4870", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 00:18:12.4967", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 00:18:12.4967", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 00:18:14.5584", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 00:18:14.7940", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 00:18:14.9484", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 400.3683ms", "ElapsedMilliseconds": 400.3683, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 00:18:14.9604", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 00:18:14.9604", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 00:18:14.9604", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.9054ms", "ElapsedMilliseconds": 3.9054, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 00:18:15.0742", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 113.8389ms", "ElapsedMilliseconds": 113.8389, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 00:18:15.1763", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 00:18:15.4735", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 297.0624ms", "ElapsedMilliseconds": 297.0624, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 00:18:53.3086", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMDg0MTQwLCJleHAiOjE3MTIxNzA1NDAsImlhdCI6MTcxMjA4NDE0MH0.SckOf3HSpg0kyLeSvc6aBQN2TFs1XTQ5n6OLQoHuhiw - - 0", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": null, "ContentLength": 0, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMDg0MTQwLCJleHAiOjE3MTIxNzA1NDAsImlhdCI6MTcxMjA4NDE0MH0.SckOf3HSpg0kyLeSvc6aBQN2TFs1XTQ5n6OLQoHuhiw", "EventId": 1 }
{ "time": "2024-04-03 00:18:53.3170", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 00:18:53.3860", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 00:18:53.4221", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 00:21:26.4696", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Int32'.", "ObjectResultType": "OkObjectResult", "Type": "System.Int32", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 00:21:26.5206", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 153082.8544ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 153082.8544, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 00:21:26.5206", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 00:21:29.8106", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMDg0MTQwLCJleHAiOjE3MTIxNzA1NDAsImlhdCI6MTcxMjA4NDE0MH0.SckOf3HSpg0kyLeSvc6aBQN2TFs1XTQ5n6OLQoHuhiw - 200 - application/json;+charset=utf-8 156501.9058ms", "ElapsedMilliseconds": 156501.9058, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMDg0MTQwLCJleHAiOjE3MTIxNzA1NDAsImlhdCI6MTcxMjA4NDE0MH0.SckOf3HSpg0kyLeSvc6aBQN2TFs1XTQ5n6OLQoHuhiw", "EventId": 2 }
{ "time": "2024-04-03 00:23:08.1468", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMDg0MTQwLCJleHAiOjE3MTIxNzA1NDAsImlhdCI6MTcxMjA4NDE0MH0.SckOf3HSpg0kyLeSvc6aBQN2TFs1XTQ5n6OLQoHuhiw - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMDg0MTQwLCJleHAiOjE3MTIxNzA1NDAsImlhdCI6MTcxMjA4NDE0MH0.SckOf3HSpg0kyLeSvc6aBQN2TFs1XTQ5n6OLQoHuhiw", "EventId": 1 }
{ "time": "2024-04-03 00:23:08.1712", "level": "INFO", "message": "Executing endpoint '405 HTTP Method Not Supported'", "EndpointName": {"DisplayName":"405 HTTP Method Not Supported", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 00:23:08.1712", "level": "INFO", "message": "Executed endpoint '405 HTTP Method Not Supported'", "EndpointName": {"DisplayName":"405 HTTP Method Not Supported", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 00:23:08.1712", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMDg0MTQwLCJleHAiOjE3MTIxNzA1NDAsImlhdCI6MTcxMjA4NDE0MH0.SckOf3HSpg0kyLeSvc6aBQN2TFs1XTQ5n6OLQoHuhiw - 405 0 - 30.8778ms", "ElapsedMilliseconds": 30.8778, "StatusCode": 405, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMDg0MTQwLCJleHAiOjE3MTIxNzA1NDAsImlhdCI6MTcxMjA4NDE0MH0.SckOf3HSpg0kyLeSvc6aBQN2TFs1XTQ5n6OLQoHuhiw", "EventId": 2 }
{ "time": "2024-04-03 11:52:51.5972", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 11:52:53.3286", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 11:52:53.3452", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 11:52:53.3452", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 11:52:53.3452", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 11:52:53.5577", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/swagger - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:52:54.1971", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:52:54.3317", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 11:52:54.3768", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/swagger - 301 0 - 827.5320ms", "ElapsedMilliseconds": 827.532, "StatusCode": 301, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:52:54.3915", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:52:54.4799", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 282.9505ms", "ElapsedMilliseconds": 282.9505, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:52:54.4799", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/swagger/index.html - 200 - text/html;charset=utf-8 88.4625ms", "ElapsedMilliseconds": 88.4625, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:52:54.4919", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:52:54.4964", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 4.4996ms", "ElapsedMilliseconds": 4.4996, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:52:54.4964", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:52:54.4964", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/swagger/swagger-ui.css - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/swagger-ui.css", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:52:54.5121", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/swagger/swagger-ui-bundle.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/swagger-ui-bundle.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:52:54.5121", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/swagger/swagger-ui-standalone-preset.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/swagger-ui-standalone-preset.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:52:54.5355", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:52:54.5355", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 0.3785ms", "ElapsedMilliseconds": 0.3785, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:52:54.5977", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 106.0209ms", "ElapsedMilliseconds": 106.0209, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:52:54.6787", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:52:54.8016", "level": "INFO", "message": "Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'", "VirtualPath": "/swagger-ui.css", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" }
{ "time": "2024-04-03 11:52:54.8016", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/swagger/swagger-ui.css - 200 143943 text/css 295.6595ms", "ElapsedMilliseconds": 295.6595, "StatusCode": 200, "ContentType": "text/css", "ContentLength": 143943, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/swagger-ui.css", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:52:54.8488", "level": "INFO", "message": "Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'", "VirtualPath": "/swagger-ui-standalone-preset.js", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" }
{ "time": "2024-04-03 11:52:54.8488", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/swagger/swagger-ui-standalone-preset.js - 200 339486 text/javascript 336.8062ms", "ElapsedMilliseconds": 336.8062, "StatusCode": 200, "ContentType": "text/javascript", "ContentLength": 339486, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/swagger-ui-standalone-preset.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:52:54.9088", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 230.0403ms", "ElapsedMilliseconds": 230.0403, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:52:55.0559", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:52:55.1586", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 109.8408ms", "ElapsedMilliseconds": 109.8408, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:52:56.0501", "level": "INFO", "message": "Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'", "VirtualPath": "/swagger-ui-bundle.js", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" }
{ "time": "2024-04-03 11:52:56.0501", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/swagger/swagger-ui-bundle.js - 200 1096145 text/javascript 1539.1394ms", "ElapsedMilliseconds": 1539.1394, "StatusCode": 200, "ContentType": "text/javascript", "ContentLength": 1096145, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/swagger-ui-bundle.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:52:56.3863", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:52:56.4022", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/swagger/favicon-32x32.png - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/favicon-32x32.png", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:52:56.4022", "level": "INFO", "message": "Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'", "VirtualPath": "/favicon-32x32.png", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" }
{ "time": "2024-04-03 11:52:56.4022", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/swagger/favicon-32x32.png - 200 628 image/png 1.5228ms", "ElapsedMilliseconds": 1.5228, "StatusCode": 200, "ContentType": "image/png", "ContentLength": 628, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/favicon-32x32.png", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:52:56.4022", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 20.4795ms", "ElapsedMilliseconds": 20.4795, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:53:03.0326", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:53:03.0326", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:53:03.0492", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 16.7351ms", "ElapsedMilliseconds": 16.7351, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:53:03.0614", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:53:03.0614", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:53:03.3991", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 11:53:03.4616", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 11:53:19.6389", "level": "INFO", "message": "Executed DbCommand (151ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "151", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:53:19.8666", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "4", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:53:19.9371", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:53:20.1392", "level": "INFO", "message": "Executed DbCommand (7ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "7", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:53:20.1608", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:53:20.1682", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:53:20.1682", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:53:20.1682", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:53:20.1846", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:53:20.1846", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:53:20.2020", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 11:53:20.2422", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 16765.6958ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 16765.6958, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 11:53:20.2422", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 11:53:20.2762", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 17214.9533ms", "ElapsedMilliseconds": 17214.9533, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:54:21.1453", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:54:21.1453", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:54:21.1519", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - 204 - - 6.4952ms", "ElapsedMilliseconds": 6.4952, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:54:21.2025", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - application/json 64", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 64, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:54:21.2025", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:54:21.2025", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 11:54:21.2407", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 11:54:21.4815", "level": "INFO", "message": "Executed DbCommand (5ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "5", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:21.5476", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:21.5969", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:21.6375", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "3", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:21.6375", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.Tokens'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 11:54:21.6375", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 403.3229ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 403.3229, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 11:54:21.6375", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 11:54:21.6375", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 442.5541ms", "ElapsedMilliseconds": 442.5541, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:54:21.6565", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:54:21.6565", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:54:21.6565", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 2.2871ms", "ElapsedMilliseconds": 2.2871, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:54:21.6565", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:54:21.6565", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:54:21.6565", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 2.0675ms", "ElapsedMilliseconds": 2.0675, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:54:21.6754", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:54:21.6754", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:54:21.6754", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 11:54:21.6863", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 11:54:21.7448", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:21.7448", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 11:54:21.7448", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 63.4448ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 63.4448, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 11:54:21.7448", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 11:54:21.7448", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 75.4412ms", "ElapsedMilliseconds": 75.4412, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:54:21.7612", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:54:21.7612", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:54:21.7612", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 11:54:21.7612", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 11:54:21.7612", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:21.7612", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 11:54:21.7612", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 7.1538ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 7.1538, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 11:54:21.7612", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 11:54:21.7612", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 9.0024ms", "ElapsedMilliseconds": 9.0024, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:54:21.7907", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:54:21.7907", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:54:21.7907", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 0.7397ms", "ElapsedMilliseconds": 0.7397, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:54:21.8145", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:54:21.8145", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:54:21.8145", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 11:54:21.8145", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 11:54:21.8384", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:21.8521", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:21.8595", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 11:54:21.8595", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 45.372ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 45.372, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 11:54:21.8595", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 11:54:21.8595", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 200 - application/json;+charset=utf-8 48.6302ms", "ElapsedMilliseconds": 48.6302, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:54:26.2957", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:54:26.2957", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:54:26.2957", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 4.5160ms", "ElapsedMilliseconds": 4.516, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:54:26.3173", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:54:26.3173", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:54:26.3173", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 11:54:26.3173", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 11:54:26.3325", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:26.3411", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:26.3411", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:26.3599", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "3", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:26.3758", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:26.3916", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:26.3916", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:26.4067", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:26.4067", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:26.4201", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:26.4201", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 11:54:26.4201", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 97.8448ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 97.8448, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 11:54:26.4201", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 11:54:26.4201", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 104.2032ms", "ElapsedMilliseconds": 104.2032, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:54:43.4269", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:54:43.4269", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:54:43.4269", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 1.5333ms", "ElapsedMilliseconds": 1.5333, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:54:43.4402", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:54:43.4402", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:54:43.4402", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 11:54:43.4402", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 11:54:43.4493", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:43.5051", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:43.5051", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 11:54:43.5051", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 64.5284ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 64.5284, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 11:54:43.5051", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 11:54:43.5051", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 200 - application/json;+charset=utf-8 66.1172ms", "ElapsedMilliseconds": 66.1172, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:54:46.8026", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:54:46.8026", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:54:46.8026", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 1.8129ms", "ElapsedMilliseconds": 1.8129, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:54:46.8026", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:54:46.8026", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:54:46.8026", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 11:54:46.8215", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 11:54:46.8488", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "3", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:46.8936", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 11:54:46.8936", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 78.3983ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 78.3983, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 11:54:46.8936", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 11:54:46.8936", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 90.3546ms", "ElapsedMilliseconds": 90.3546, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:54:50.2872", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:54:50.2872", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:54:50.2872", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 3.2550ms", "ElapsedMilliseconds": 3.255, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:54:50.3372", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:54:50.3372", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:54:50.3372", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 11:54:50.3372", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 11:54:50.3372", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 11:54:50.3372", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 2.2372ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 2.2372, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 11:54:50.3372", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 11:54:50.3372", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 5.5044ms", "ElapsedMilliseconds": 5.5044, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:54:54.6817", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:54:54.6817", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:54:54.6831", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 1.5446ms", "ElapsedMilliseconds": 1.5446, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:54:54.6831", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:54:54.6831", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:54:54.6831", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 11:54:54.6831", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 11:54:54.7023", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:54.7023", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:54.7139", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:54.7139", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "3", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:54.7139", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:54.7348", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:54.7348", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:54.7560", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:54.7626", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:54.7626", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:54.7626", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 11:54:54.7626", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 78.2589ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 78.2589, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 11:54:54.7626", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 11:54:54.7626", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 80.5025ms", "ElapsedMilliseconds": 80.5025, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:54:57.3506", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:54:57.3506", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:54:57.3506", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 1.2106ms", "ElapsedMilliseconds": 1.2106, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:54:57.3681", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:54:57.3681", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:54:57.3681", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 11:54:57.3681", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 11:54:57.3773", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:54:57.3773", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 11:54:57.3773", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 9.4586ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 9.4586, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 11:54:57.3773", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 11:54:57.3773", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 11.1390ms", "ElapsedMilliseconds": 11.139, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:55:02.7671", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:55:02.7679", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:55:02.7679", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.0211ms", "ElapsedMilliseconds": 1.0211, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:55:02.7679", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:55:02.7679", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:55:02.7679", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 11:55:02.7679", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 11:55:02.7679", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 11:55:02.7679", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 1.6293ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.6293, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 11:55:02.7679", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 11:55:02.7679", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 3.3767ms", "ElapsedMilliseconds": 3.3767, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:55:25.5890", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:55:25.5960", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:55:25.5960", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - 204 - - 9.6928ms", "ElapsedMilliseconds": 9.6928, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:55:25.5960", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - application/json 80", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 80, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:55:25.5960", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:55:25.5960", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 11:55:25.6139", "level": "INFO", "message": "Route matched with {action = \"Create\", controller = \"Ticket\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 11:55:25.6800", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:55:25.7546", "level": "INFO", "message": "Executed DbCommand (15ms) [Parameters=[@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "elapsed": "15", "parameters": "@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:55:25.7797", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Create.TicketCreateResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Create.TicketCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 11:55:25.7797", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.Create (Api) in 167.9605ms", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 167.9605, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 11:55:25.7797", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 11:55:25.7797", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - 200 - application/json;+charset=utf-8 177.5149ms", "ElapsedMilliseconds": 177.5149, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:55:25.8143", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:55:25.8143", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:55:25.8143", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 0.4517ms", "ElapsedMilliseconds": 0.4517, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:55:25.8261", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:55:25.8261", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:55:25.8261", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 11:55:25.8261", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 11:55:25.8321", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:55:25.8321", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 11:55:25.8321", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 6.1696ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 6.1696, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 11:55:25.8321", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 11:55:25.8321", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 7.3738ms", "ElapsedMilliseconds": 7.3738, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:55:32.9553", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:55:32.9553", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:55:32.9566", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.4114ms", "ElapsedMilliseconds": 1.4114, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:55:32.9566", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:55:32.9566", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:55:32.9566", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 11:55:32.9566", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 11:55:32.9566", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 11:55:32.9566", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.9696ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.9696, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 11:55:32.9566", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 11:55:32.9566", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.1113ms", "ElapsedMilliseconds": 2.1113, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:56:17.0778", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:56:17.0778", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:56:17.0778", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.4647ms", "ElapsedMilliseconds": 1.4647, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:56:17.0778", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:56:17.0778", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:56:17.0778", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 11:56:17.0778", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 11:56:17.0778", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 11:56:17.0778", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 1.1643ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.1643, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 11:56:17.0778", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 11:56:17.0962", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 9.0597ms", "ElapsedMilliseconds": 9.0597, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:56:29.7774", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 11:56:30.1539", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 11:56:30.1539", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 11:56:30.1539", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 11:56:30.1947", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 11:56:30.9180", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:56:30.9180", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:56:31.0138", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 11:56:31.0374", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:56:31.0489", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 138.5899ms", "ElapsedMilliseconds": 138.5899, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:56:31.0865", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:56:31.0947", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:56:31.2328", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 322.8820ms", "ElapsedMilliseconds": 322.882, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:56:31.2442", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:56:31.2442", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.7436ms", "ElapsedMilliseconds": 2.7436, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:56:31.2503", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:56:31.3127", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 11:56:31.3338", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 83.4776ms", "ElapsedMilliseconds": 83.4776, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:56:31.3514", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 11:56:31.4182", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:56:31.6042", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 185.9805ms", "ElapsedMilliseconds": 185.9805, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:56:32.7281", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 11:56:32.7281", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 1380.308ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1380.308, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 11:56:32.7281", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 11:56:32.7512", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 1664.8908ms", "ElapsedMilliseconds": 1664.8908, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:56:40.0859", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:56:40.0859", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:56:40.0859", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - 204 - - 3.0186ms", "ElapsedMilliseconds": 3.0186, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:56:40.1016", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - application/json 81", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 81, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:56:40.1016", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:56:40.1175", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 11:56:40.1438", "level": "INFO", "message": "Route matched with {action = \"Create\", controller = \"Ticket\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 11:56:41.6205", "level": "INFO", "message": "Executed DbCommand (148ms) [Parameters=[@__request_LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "elapsed": "148", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:56:42.3044", "level": "INFO", "message": "Executed DbCommand (35ms) [Parameters=[@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "elapsed": "35", "parameters": "@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:56:42.3928", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Create.TicketCreateResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Create.TicketCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 11:56:42.4045", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.Create (Api) in 2259.8745ms", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 2259.8745, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 11:56:42.4045", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 11:56:42.4174", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - 200 - application/json;+charset=utf-8 2315.9589ms", "ElapsedMilliseconds": 2315.9589, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:56:42.4607", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:56:42.4607", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:56:42.4619", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 1.2419ms", "ElapsedMilliseconds": 1.2419, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 11:56:42.4672", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 11:56:42.4672", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 11:56:42.4672", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 11:56:42.4672", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 11:56:42.5409", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 11:56:42.5485", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 11:56:42.5485", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 71.972ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 71.972, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 11:56:42.5485", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 11:56:42.5485", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 88.3969ms", "ElapsedMilliseconds": 88.3969, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:01:41.1256", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:01:41.1256", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:01:41.1256", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 2.8663ms", "ElapsedMilliseconds": 2.8663, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:01:41.1256", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:01:41.1256", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:01:41.1256", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:01:41.1256", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:01:41.1465", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:01:41.1465", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 4.1257ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 4.1257, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:01:41.1465", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:01:41.1465", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 7.6968ms", "ElapsedMilliseconds": 7.6968, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:02:10.0268", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:02:10.0312", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:02:10.0312", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 12.2687ms", "ElapsedMilliseconds": 12.2687, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:02:10.0485", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:02:10.0485", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:02:10.0485", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:02:10.0485", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:02:10.0485", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:02:10.0485", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 1.5756ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.5756, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:02:10.0485", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:02:10.0485", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 3.8132ms", "ElapsedMilliseconds": 3.8132, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:02:10.9312", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:02:10.9312", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:02:10.9312", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:02:10.9312", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:02:10.9312", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:02:10.9312", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 2.6251ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 2.6251, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:02:10.9312", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:02:10.9312", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 5.6833ms", "ElapsedMilliseconds": 5.6833, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:02:14.9153", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:02:14.9153", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:02:14.9177", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:02:14.9177", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:02:14.9177", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:02:14.9177", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 1.4085ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.4085, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:02:14.9177", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:02:14.9177", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 4.8198ms", "ElapsedMilliseconds": 4.8198, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:02:16.2533", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:02:16.2533", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:02:16.2533", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.8304ms", "ElapsedMilliseconds": 1.8304, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:02:16.2533", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:02:16.2533", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:02:16.2533", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:02:16.2533", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:02:16.2533", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:02:16.2533", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 1.279ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.279, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:02:16.2533", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:02:16.2533", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 3.2907ms", "ElapsedMilliseconds": 3.2907, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:02:20.8379", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:02:20.8403", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:02:20.8403", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:02:20.8403", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:02:20.8403", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:02:20.8403", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 1.989ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.989, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:02:20.8403", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:02:20.8403", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 6.6327ms", "ElapsedMilliseconds": 6.6327, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:02:51.9219", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:02:52.1185", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:02:52.1185", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 197.0889ms", "ElapsedMilliseconds": 197.0889, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:02:53.2325", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:02:53.2325", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:02:53.2325", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 1.5560ms", "ElapsedMilliseconds": 1.556, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:02:53.5165", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:02:53.5165", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:02:53.5165", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:02:53.5165", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:02:53.6197", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 12:02:53.6405", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 12:02:53.6587", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 12:02:53.6843", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "3", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 12:02:53.6923", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 12:02:53.6923", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 12:02:53.6923", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 12:02:53.7055", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 12:02:53.7055", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 12:02:53.7055", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 12:02:53.7162", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:02:53.7162", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 192.6269ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 192.6269, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:02:53.7162", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:02:53.7162", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 202.9185ms", "ElapsedMilliseconds": 202.9185, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:10:50.1230", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:10:50.1263", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:10:50.1263", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 8.8527ms", "ElapsedMilliseconds": 8.8527, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:10:50.8055", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:10:50.8085", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:10:50.8085", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n ---> Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)\r\n   --- End of inner exception stack trace ---", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-03 12:10:50.8865", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-03 12:10:50.8865", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:10:50.8898", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:11:14.5618", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 23671.7862ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 23671.7862, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:11:14.5618", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:11:16.7740", "level": "ERROR", "message": "testtt {\"ClassName\":\"System.ArgumentNullException\",\"Message\":\"Value cannot be null.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at System.Int32.Parse(String s)\\r\\n   at Api.Controllers.UserController.GetByIdLicenses() in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\UserController.cs:line 33\\r\\n   at lambda_method276(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"System.Private.CoreLib\",\"WatsonBuckets\":null,\"ParamName\":\"s\"}" }
{ "time": "2024-04-03 12:11:18.3101", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 400 - application/json 27504.7861ms", "ElapsedMilliseconds": 27504.7861, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:20:18.5728", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:20:18.6060", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-03 12:20:18.6229", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-03 12:20:18.6229", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Ticket/getbyid - 401 0 - 52.8011ms", "ElapsedMilliseconds": 52.8011, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:21:33.9170", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:21:33.9679", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/swagger/index.html - 200 - text/html;charset=utf-8 51.9625ms", "ElapsedMilliseconds": 51.9625, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:21:34.0278", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:21:34.0278", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 0.6461ms", "ElapsedMilliseconds": 0.6461, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:21:34.5689", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:21:34.6504", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 81.5067ms", "ElapsedMilliseconds": 81.5067, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:21:34.8409", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:21:34.8711", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 30.2611ms", "ElapsedMilliseconds": 30.2611, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:22:04.6732", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/getIdfromToken - - 0", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": null, "ContentLength": 0, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:22:04.6732", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:22:04.6732", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:22:04.6887", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:22:04.7061", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:22:04.7416", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 52.7326ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 52.7326, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:22:04.7416", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:22:04.7416", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 68.9635ms", "ElapsedMilliseconds": 68.9635, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:22:56.6590", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/forgot-password - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:22:56.6590", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:22:56.6590", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/forgot-password - 204 - - 4.2248ms", "ElapsedMilliseconds": 4.2248, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:22:56.6803", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/forgot-password - application/json 41", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 41, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:22:56.6803", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:22:56.6803", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.ForgotPassword (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:22:56.6803", "level": "INFO", "message": "Route matched with {action = \"ForgotPassword\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] ForgotPassword(Models.DTOs.User.ForgotPassword.ForgotPasswordDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"ForgotPassword\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] ForgotPassword(Models.DTOs.User.ForgotPassword.ForgotPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:22:56.7673", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__model_Email_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__model_Email_0\r\nLIMIT 1", "elapsed": "3", "parameters": "@__model_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__model_Email_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 12:23:00.7290", "level": "INFO", "message": "Executing StatusCodeResult, setting HTTP status code 200", "StatusCode": 200, "EventId": 1, "EventName": "HttpStatusCodeResultExecuting" }
{ "time": "2024-04-03 12:23:00.7290", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.ForgotPassword (Api) in 4042.6244ms", "ActionName": "Api.Controllers.AuthController.ForgotPassword (Api)", "ElapsedMilliseconds": 4042.6244, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:23:00.7290", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.ForgotPassword (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ForgotPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:23:00.7290", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/forgot-password - 200 0 - 4050.0145ms", "ElapsedMilliseconds": 4050.0145, "StatusCode": 200, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/forgot-password", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:28:48.8195", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:28:48.8195", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:28:48.8195", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - 204 - - 1.6599ms", "ElapsedMilliseconds": 1.6599, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:28:48.8342", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/json 2", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 2, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:28:48.8342", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:28:48.8342", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:28:48.8342", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:28:48.8413", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:28:48.8413", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 5.5968ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 5.5968, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:28:48.8413", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:28:48.8413", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 7.5220ms", "ElapsedMilliseconds": 7.522, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:31:31.6314", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:31:31.6314", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:31:31.6314", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - 204 - - 6.7475ms", "ElapsedMilliseconds": 6.7475, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:31:31.6447", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/json 180", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 180, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:31:31.6447", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:31:31.6447", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:31:31.6447", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:31:31.6447", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:31:31.6447", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 1.4086ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 1.4086, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:31:31.6447", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:31:31.6447", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 2.2581ms", "ElapsedMilliseconds": 2.2581, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:32:52.9514", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:32:52.9514", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:32:52.9514", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - 204 - - 0.5835ms", "ElapsedMilliseconds": 0.5835, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:32:52.9514", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - application/json 137", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 137, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:32:52.9514", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:32:52.9514", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:32:52.9514", "level": "INFO", "message": "Route matched with {action = \"Register\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:32:53.0221", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__userRegister_Email_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "elapsed": "2", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 12:32:53.0989", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Register (Api) in 136.8935ms", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 136.8935, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:32:53.0989", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:32:53.1221", "level": "ERROR", "message": "testtt {\"ClassName\":\"System.Exception\",\"Message\":\"Istifadeci qeydiyyatdan kecib\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Application.Services.JWTService.Register(UserRegisterDto userRegister)\\r\\n   at Api.Controllers.AuthController.Register(UserRegisterDto userRegister) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\AuthController.cs:line 80\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2146233088,\"Source\":\"Application\",\"WatsonBuckets\":null}" }
{ "time": "2024-04-03 12:32:53.1221", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - 400 - application/json 168.4544ms", "ElapsedMilliseconds": 168.4544, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:34:13.4227", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:34:13.4227", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:34:13.4227", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - 204 - - 7.4295ms", "ElapsedMilliseconds": 7.4295, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:34:13.4426", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/json 180", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 180, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:34:13.4426", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:34:13.4426", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:34:13.4426", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:34:13.4426", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:34:13.4426", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 3.6216ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 3.6216, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:34:13.4426", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:34:13.4426", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 4.5186ms", "ElapsedMilliseconds": 4.5186, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:34:31.4594", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:34:31.4594", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:34:31.4594", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - 204 - - 1.0127ms", "ElapsedMilliseconds": 1.0127, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:34:31.4594", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - application/json 137", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 137, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:34:31.4594", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:34:31.4594", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:34:31.4594", "level": "INFO", "message": "Route matched with {action = \"Register\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:34:31.4947", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__userRegister_Email_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "elapsed": "2", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 12:34:31.5513", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Register (Api) in 82.6917ms", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 82.6917, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:34:31.5513", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:34:31.5732", "level": "ERROR", "message": "testtt {\"ClassName\":\"System.Exception\",\"Message\":\"Istifadeci qeydiyyatdan kecib\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Application.Services.JWTService.Register(UserRegisterDto userRegister)\\r\\n   at Api.Controllers.AuthController.Register(UserRegisterDto userRegister) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\AuthController.cs:line 80\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2146233088,\"Source\":\"Application\",\"WatsonBuckets\":null}" }
{ "time": "2024-04-03 12:34:31.5732", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - 400 - application/json 108.1117ms", "ElapsedMilliseconds": 108.1117, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:36:02.7264", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:36:02.7264", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:36:02.7264", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - 204 - - 0.6695ms", "ElapsedMilliseconds": 0.6695, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:36:02.8031", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/json 180", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 180, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:36:02.8031", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:36:02.8031", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:36:02.8031", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:36:02.8118", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:36:02.8118", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 2.383ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 2.383, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:36:02.8118", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:36:02.8118", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 9.2081ms", "ElapsedMilliseconds": 9.2081, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:36:15.2846", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:36:15.2846", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:36:15.2846", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - 204 - - 0.9658ms", "ElapsedMilliseconds": 0.9658, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:36:15.2980", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - application/json 137", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 137, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:36:15.2980", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:36:15.2980", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:36:15.2980", "level": "INFO", "message": "Route matched with {action = \"Register\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:36:15.3311", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__userRegister_Email_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "elapsed": "1", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 12:36:15.3793", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Register (Api) in 80.5104ms", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 80.5104, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:36:15.3793", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:36:15.3951", "level": "ERROR", "message": "testtt {\"ClassName\":\"System.Exception\",\"Message\":\"Istifadeci qeydiyyatdan kecib\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Application.Services.JWTService.Register(UserRegisterDto userRegister)\\r\\n   at Api.Controllers.AuthController.Register(UserRegisterDto userRegister) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\AuthController.cs:line 80\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2146233088,\"Source\":\"Application\",\"WatsonBuckets\":null}" }
{ "time": "2024-04-03 12:36:15.3951", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - 400 - application/json 99.4526ms", "ElapsedMilliseconds": 99.4526, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:36:34.6270", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:36:34.6270", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:36:34.6270", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - 204 - - 1.1625ms", "ElapsedMilliseconds": 1.1625, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:36:34.6270", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - application/json 137", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 137, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:36:34.6270", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:36:34.6270", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:36:34.6270", "level": "INFO", "message": "Route matched with {action = \"Register\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:36:34.6550", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__userRegister_Email_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "elapsed": "1", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 12:36:34.6859", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Register (Api) in 47.084ms", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 47.084, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:36:34.6859", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:36:34.6990", "level": "ERROR", "message": "testtt {\"ClassName\":\"System.Exception\",\"Message\":\"Istifadeci qeydiyyatdan kecib\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Application.Services.JWTService.Register(UserRegisterDto userRegister)\\r\\n   at Api.Controllers.AuthController.Register(UserRegisterDto userRegister) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\AuthController.cs:line 80\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2146233088,\"Source\":\"Application\",\"WatsonBuckets\":null}" }
{ "time": "2024-04-03 12:36:34.6990", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - 400 - application/json 63.0732ms", "ElapsedMilliseconds": 63.0732, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:39:52.7582", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 12:39:53.6327", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 12:39:53.6380", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 12:39:53.6380", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 12:39:53.6380", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 12:39:54.6337", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:39:54.8542", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 12:39:54.9898", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 365.0307ms", "ElapsedMilliseconds": 365.0307, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:39:55.0004", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:39:55.0004", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:39:55.0004", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.9015ms", "ElapsedMilliseconds": 3.9015, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:39:55.0716", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 70.6066ms", "ElapsedMilliseconds": 70.6066, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:39:55.1325", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:39:55.3042", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 171.7260ms", "ElapsedMilliseconds": 171.726, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:40:21.8346", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/register - application/json 178", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 178, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:40:21.8607", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:40:21.9319", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:40:21.9767", "level": "INFO", "message": "Route matched with {action = \"Register\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:40:31.1242", "level": "INFO", "message": "Executed DbCommand (43ms) [Parameters=[@__userRegister_Email_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "elapsed": "43", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 12:40:31.1590", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "elapsed": "3", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 12:40:31.3715", "level": "INFO", "message": "Executed DbCommand (11ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "elapsed": "11", "parameters": "@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 12:40:37.0774", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Register.UserRegisterResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Register.UserRegisterResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:40:38.5740", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Register (Api) in 16592.2529ms", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 16592.2529, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:40:38.5758", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:40:39.1406", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/register - 200 - application/json;+charset=utf-8 17306.0493ms", "ElapsedMilliseconds": 17306.0493, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:40:46.8313", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:40:46.8313", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:40:46.8313", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - 204 - - 6.3820ms", "ElapsedMilliseconds": 6.382, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:40:46.8466", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - application/json 141", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 141, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:40:46.8466", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:40:46.8466", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:40:46.8466", "level": "INFO", "message": "Route matched with {action = \"Register\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:40:54.3782", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__userRegister_Email_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "elapsed": "1", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 12:40:54.4371", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Register (Api) in 7588.5282ms", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 7588.5282, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:40:54.4371", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:40:57.2841", "level": "ERROR", "message": "{\"ClassName\":\"System.Exception\",\"Message\":\"Istifadeci qeydiyyatdan kecib\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Application.Services.JWTService.Register(UserRegisterDto userRegister) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Application\\\\Services\\\\JWTService.cs:line 106\\r\\n   at Api.Controllers.AuthController.Register(UserRegisterDto userRegister) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\AuthController.cs:line 80\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2146233088,\"Source\":\"Application\",\"WatsonBuckets\":null}" }
{ "time": "2024-04-03 12:40:58.5726", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - 400 - application/json 11726.0278ms", "ElapsedMilliseconds": 11726.0278, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:41:09.9569", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:41:09.9569", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:41:09.9569", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - 204 - - 2.3400ms", "ElapsedMilliseconds": 2.34, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:41:09.9655", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - application/json 141", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 141, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:41:09.9655", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:41:09.9655", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:41:09.9655", "level": "INFO", "message": "Route matched with {action = \"Register\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:42:01.1685", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__userRegister_Email_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "elapsed": "1", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 12:42:01.2223", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Register (Api) in 51252.569ms", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 51252.569, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:42:01.2223", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:42:04.7515", "level": "ERROR", "message": "{\"ClassName\":\"System.Exception\",\"Message\":\"Istifadeci qeydiyyatdan kecib\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Application.Services.JWTService.Register(UserRegisterDto userRegister) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Application\\\\Services\\\\JWTService.cs:line 106\\r\\n   at Api.Controllers.AuthController.Register(UserRegisterDto userRegister) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\AuthController.cs:line 80\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2146233088,\"Source\":\"Application\",\"WatsonBuckets\":null}" }
{ "time": "2024-04-03 12:42:06.0388", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - 400 - application/json 56073.2819ms", "ElapsedMilliseconds": 56073.2819, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:42:18.6168", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:42:23.2006", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:42:23.2006", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:42:23.4075", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:42:23.4075", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - 204 - - 202.5285ms", "ElapsedMilliseconds": 202.5285, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:42:23.6297", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/json 180", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 180, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:42:23.6379", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - 204 - - 5020.6698ms", "ElapsedMilliseconds": 5020.6698, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:42:24.5834", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:42:24.5834", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:42:24.5834", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:42:24.5936", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:42:24.5936", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 16.5327ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 16.5327, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:42:24.5936", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:42:25.0414", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 1411.7581ms", "ElapsedMilliseconds": 1411.7581, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:42:49.3745", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:43:03.1326", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:43:04.5101", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - 204 - - 15137.7427ms", "ElapsedMilliseconds": 15137.7427, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:43:04.5213", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/json 180", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 180, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:43:06.0982", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:43:06.0982", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:43:06.0982", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:43:06.0982", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:43:06.0982", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 1.6953ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 1.6953, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:43:06.0982", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:43:07.1830", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 2661.6996ms", "ElapsedMilliseconds": 2661.6996, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:43:41.3551", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:43:47.8471", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:43:48.2671", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - 204 - - 6912.5131ms", "ElapsedMilliseconds": 6912.5131, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:43:48.2797", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/json 180", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 180, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:43:48.8950", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:43:48.8950", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:43:48.8950", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:43:48.8950", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:43:48.8950", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 1.506ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 1.506, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:43:48.8950", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:43:49.2981", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 1018.4706ms", "ElapsedMilliseconds": 1018.4706, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:44:07.9253", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:44:07.9253", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:44:07.9253", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - 204 - - 1.5118ms", "ElapsedMilliseconds": 1.5118, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:44:07.9476", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/json 180", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 180, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:44:07.9476", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:44:07.9476", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:44:07.9476", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:44:07.9476", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:44:07.9501", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 1.802ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 1.802, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:44:07.9501", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:44:07.9501", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 2.7713ms", "ElapsedMilliseconds": 2.7713, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:45:19.0258", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 12:45:19.1054", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 12:45:19.1054", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 12:45:19.1054", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 12:45:19.1054", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 12:45:19.6485", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:45:19.7251", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 12:45:19.7852", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 135.6334ms", "ElapsedMilliseconds": 135.6334, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:45:19.7930", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:45:19.7930", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.1649ms", "ElapsedMilliseconds": 2.1649, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:45:19.7930", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:45:19.8240", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 28.7560ms", "ElapsedMilliseconds": 28.756, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:45:19.8926", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:45:20.0061", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 113.5043ms", "ElapsedMilliseconds": 113.5043, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:46:09.6118", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 12:46:09.7460", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 12:46:09.7460", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 12:46:09.7460", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 12:46:09.7537", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 12:46:11.1308", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:46:11.2557", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 12:46:11.3713", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 248.0260ms", "ElapsedMilliseconds": 248.026, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:46:11.3713", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:46:11.3713", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.3871ms", "ElapsedMilliseconds": 2.3871, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:46:11.3713", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:46:11.4123", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 31.5538ms", "ElapsedMilliseconds": 31.5538, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:46:11.5808", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:46:11.8022", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 221.5800ms", "ElapsedMilliseconds": 221.58, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:46:23.6653", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - - 0", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": null, "ContentLength": 0, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 1 }
{ "time": "2024-04-03 12:46:23.6734", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:46:23.7484", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:46:23.7484", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:46:35.3805", "level": "INFO", "message": "Executing StatusCodeResult, setting HTTP status code 200", "StatusCode": 200, "EventId": 1, "EventName": "HttpStatusCodeResultExecuting" }
{ "time": "2024-04-03 12:46:35.3918", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 11609.2104ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 11609.2104, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:46:35.3918", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:46:35.4132", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - 200 0 - 11747.9880ms", "ElapsedMilliseconds": 11747.988, "StatusCode": 200, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 2 }
{ "time": "2024-04-03 12:47:01.9918", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - - 0", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": null, "ContentLength": 0, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 1 }
{ "time": "2024-04-03 12:47:01.9970", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:47:01.9970", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:47:01.9970", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:47:10.0470", "level": "INFO", "message": "Executing StatusCodeResult, setting HTTP status code 200", "StatusCode": 200, "EventId": 1, "EventName": "HttpStatusCodeResultExecuting" }
{ "time": "2024-04-03 12:47:10.0470", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 8049.5541ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 8049.5541, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:47:10.0470", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:47:10.0470", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - 200 0 - 8057.8051ms", "ElapsedMilliseconds": 8057.8051, "StatusCode": 200, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 2 }
{ "time": "2024-04-03 12:47:52.6715", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:47:52.6715", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:47:52.6715", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - 204 - - 38.0147ms", "ElapsedMilliseconds": 38.0147, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:47:52.6881", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/json 180", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 180, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:47:52.6881", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:47:52.6881", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:47:52.6881", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:47:52.7190", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:47:52.7190", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 37.9302ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 37.9302, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:47:52.7190", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:47:52.7302", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 42.1300ms", "ElapsedMilliseconds": 42.13, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:47:57.4900", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/json 180", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 180, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:47:57.4900", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:47:57.4900", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:47:57.4900", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:47:57.4900", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:47:57.4900", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 2.1749ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 2.1749, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:47:57.4900", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:47:57.4900", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 4.0554ms", "ElapsedMilliseconds": 4.0554, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:49:33.9057", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 12:49:34.0417", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 12:49:34.0417", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 12:49:34.0417", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 12:49:34.0417", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 12:49:35.3784", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:49:35.4748", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 12:49:35.5484", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 174.4828ms", "ElapsedMilliseconds": 174.4828, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:49:35.5484", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:49:35.5484", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:49:35.5484", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.5386ms", "ElapsedMilliseconds": 2.5386, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:49:35.5975", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 44.1602ms", "ElapsedMilliseconds": 44.1602, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:49:35.6635", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:49:35.8808", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 217.2657ms", "ElapsedMilliseconds": 217.2657, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:50:22.6117", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:50:22.6315", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/swagger/index.html - 200 - text/html;charset=utf-8 19.8612ms", "ElapsedMilliseconds": 19.8612, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:50:22.6955", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:50:22.6963", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 0.9394ms", "ElapsedMilliseconds": 0.9394, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:50:22.7201", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:50:22.7595", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 39.4192ms", "ElapsedMilliseconds": 39.4192, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:50:22.9811", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:50:22.9811", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 10.3757ms", "ElapsedMilliseconds": 10.3757, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:50:23.0119", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/swagger/favicon-32x32.png - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/favicon-32x32.png", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:50:23.0256", "level": "INFO", "message": "Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'", "VirtualPath": "/favicon-32x32.png", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" }
{ "time": "2024-04-03 12:50:23.0256", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/swagger/favicon-32x32.png - 200 628 image/png 14.0203ms", "ElapsedMilliseconds": 14.0203, "StatusCode": 200, "ContentType": "image/png", "ContentLength": 628, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/swagger/favicon-32x32.png", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:50:31.7872", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - - 0", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": null, "ContentLength": 0, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 1 }
{ "time": "2024-04-03 12:50:31.7872", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:50:31.8738", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:50:31.9057", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:51:23.6865", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:51:23.6865", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:51:23.6865", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:51:23.6865", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:51:23.6865", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:51:23.6865", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:51:23.6865", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - 204 - - 10.5265ms", "ElapsedMilliseconds": 10.5265, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:51:23.6865", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - 204 - - 11.1348ms", "ElapsedMilliseconds": 11.1348, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:51:23.6865", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - 204 - - 10.0344ms", "ElapsedMilliseconds": 10.0344, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:51:23.6987", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:51:23.6987", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:51:23.6987", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - 204 - - 0.8501ms", "ElapsedMilliseconds": 0.8501, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:51:23.6987", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/json 180", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 180, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:51:23.6987", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:51:23.6987", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:51:23.7251", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:51:23.7596", "level": "INFO", "message": "Executing StatusCodeResult, setting HTTP status code 200", "StatusCode": 200, "EventId": 1, "EventName": "HttpStatusCodeResultExecuting" }
{ "time": "2024-04-03 12:51:23.7744", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 51854.1366ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 51854.1366, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:51:23.7744", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:51:23.7804", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - 200 0 - 51993.3851ms", "ElapsedMilliseconds": 51993.3851, "StatusCode": 200, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 2 }
{ "time": "2024-04-03 12:51:23.7804", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:51:23.8036", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 77.715ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 77.715, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:51:23.8036", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:51:23.8036", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 89.1794ms", "ElapsedMilliseconds": 89.1794, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:51:30.1081", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:51:30.1303", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-03 12:51:30.1398", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-03 12:51:30.1398", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/getLicenses - 401 0 - 32.5229ms", "ElapsedMilliseconds": 32.5229, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:51:44.8409", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/get-token - - 0", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": null, "ContentLength": 0, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/get-token", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:51:44.8409", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:51:44.8409", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetTokenByRefreshToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetTokenByRefreshToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:51:44.8409", "level": "INFO", "message": "Route matched with {action = \"GetTokenByRefreshToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.User.Login.UserRefreshTokenDto.UserAccessTokenDto]] GetTokenByRefreshToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetTokenByRefreshToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.User.Login.UserRefreshTokenDto.UserAccessTokenDto]] GetTokenByRefreshToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:51:44.8409", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:51:44.8409", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetTokenByRefreshToken (Api) in 17.7374ms", "ActionName": "Api.Controllers.AuthController.GetTokenByRefreshToken (Api)", "ElapsedMilliseconds": 17.7374, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:51:44.8409", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetTokenByRefreshToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetTokenByRefreshToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:51:44.8409", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/get-token - 400 - application/problem+json;+charset=utf-8 21.8898ms", "ElapsedMilliseconds": 21.8898, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/get-token", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:51:47.4724", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:51:47.4724", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:51:47.4724", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - 204 - - 1.9103ms", "ElapsedMilliseconds": 1.9103, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:51:47.4845", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/json 180", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 180, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:51:47.4845", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:51:47.4845", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:51:47.4845", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:51:47.4845", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:51:47.4845", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 1.0229ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 1.0229, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:51:47.4845", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:51:47.4845", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 2.2665ms", "ElapsedMilliseconds": 2.2665, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:51:50.3900", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/json 180", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 180, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:51:50.3900", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:51:50.3900", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:51:50.3900", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:51:50.3900", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:51:50.3900", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 2.3641ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 2.3641, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:51:50.3900", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:51:50.3900", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 4.4814ms", "ElapsedMilliseconds": 4.4814, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:51:55.3272", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/register - application/json 166", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 166, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:51:55.3272", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:51:55.3272", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:51:55.3272", "level": "INFO", "message": "Route matched with {action = \"Register\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:52:01.5802", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]'.", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:52:01.5802", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Register (Api) in 6254.2984ms", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 6254.2984, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:52:01.5802", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:52:01.5802", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/register - 400 - application/json;+charset=utf-8 6262.6781ms", "ElapsedMilliseconds": 6262.6781, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:54:39.7363", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:54:39.7363", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:54:39.7363", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - 204 - - 2.3381ms", "ElapsedMilliseconds": 2.3381, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:54:40.0316", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/json 180", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 180, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:54:40.0316", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:54:40.0316", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:54:40.0316", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:54:40.0316", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:54:40.0316", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 2.2884ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 2.2884, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:54:40.0316", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:54:40.0316", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 3.5260ms", "ElapsedMilliseconds": 3.526, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:54:43.7961", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/json 180", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 180, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:54:43.7968", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:54:43.7968", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:54:43.7968", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:54:43.7968", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:54:43.7968", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 1.3156ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 1.3156, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:54:43.7968", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:54:43.7968", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 3.1076ms", "ElapsedMilliseconds": 3.1076, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:55:52.6133", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token - application/x-www-form-urlencoded 168", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/x-www-form-urlencoded", "ContentLength": 168, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token", "EventId": 1 }
{ "time": "2024-04-03 12:55:52.6133", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:55:52.6133", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:55:52.6133", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:55:52.6255", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:55:52.6255", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 10.436ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 10.436, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:55:52.6255", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:55:52.6255", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token - 400 - application/problem+json;+charset=utf-8 14.4808ms", "ElapsedMilliseconds": 14.4808, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token", "EventId": 2 }
{ "time": "2024-04-03 12:55:56.6245", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token - application/x-www-form-urlencoded 168", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/x-www-form-urlencoded", "ContentLength": 168, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token", "EventId": 1 }
{ "time": "2024-04-03 12:55:56.6245", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:55:56.6245", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:55:56.6245", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:55:56.6245", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:55:56.6245", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 7.5428ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 7.5428, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:55:56.6245", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:55:56.6245", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token - 400 - application/problem+json;+charset=utf-8 8.7504ms", "ElapsedMilliseconds": 8.7504, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token", "EventId": 2 }
{ "time": "2024-04-03 12:56:01.1372", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/x-www-form-urlencoded 168", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/x-www-form-urlencoded", "ContentLength": 168, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:56:01.1372", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:56:01.1372", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:56:01.1372", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:56:01.1372", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:56:01.1372", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 1.8048ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 1.8048, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:56:01.1372", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:56:01.1372", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 4.0089ms", "ElapsedMilliseconds": 4.0089, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:56:05.1596", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/x-www-form-urlencoded 168", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/x-www-form-urlencoded", "ContentLength": 168, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:56:05.1596", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:56:05.1596", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:56:05.1596", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:56:05.1596", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:56:05.1596", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 1.574ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 1.574, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:56:05.1596", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:56:05.1596", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 4.0589ms", "ElapsedMilliseconds": 4.0589, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:56:13.3469", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/x-www-form-urlencoded 168", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/x-www-form-urlencoded", "ContentLength": 168, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:56:13.3469", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:56:13.3469", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:56:13.3469", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:56:13.3469", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:56:13.3469", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 1.531ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 1.531, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:56:13.3469", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:56:13.3469", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 3.4544ms", "ElapsedMilliseconds": 3.4544, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:56:51.6328", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:56:51.6328", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:56:51.6328", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - 204 - - 5.4059ms", "ElapsedMilliseconds": 5.4059, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:56:51.6520", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/json 180", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 180, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:56:51.6520", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:56:51.6520", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:56:51.6520", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:56:51.6520", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:56:51.6520", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 1.0006ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 1.0006, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:56:51.6520", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:56:51.6520", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 1.6153ms", "ElapsedMilliseconds": 1.6153, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:56:57.5987", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:56:57.6071", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:56:57.6071", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - 204 - - 10.1138ms", "ElapsedMilliseconds": 10.1138, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:56:57.6281", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/json 180", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 180, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:56:57.6281", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:56:57.6281", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:56:57.6281", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:56:57.6281", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:56:57.6281", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 0.7513ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 0.7513, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:56:57.6281", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:56:57.6281", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 1.3618ms", "ElapsedMilliseconds": 1.3618, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:57:05.1861", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:57:05.1861", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:57:05.1861", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - 204 - - 1.2776ms", "ElapsedMilliseconds": 1.2776, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:57:05.2205", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/json 180", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 180, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:57:05.2205", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:57:05.2205", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:57:05.2205", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:57:05.2205", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:57:05.2205", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 0.6198ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 0.6198, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:57:05.2205", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:57:05.2205", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 1.2460ms", "ElapsedMilliseconds": 1.246, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:57:25.0626", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/register - application/json 177", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 177, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:57:25.0626", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:57:25.0626", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:57:25.0626", "level": "INFO", "message": "Route matched with {action = \"Register\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:57:30.1367", "level": "INFO", "message": "Executed DbCommand (65ms) [Parameters=[@__userRegister_Email_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "elapsed": "65", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 12:57:30.2787", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Register (Api) in 5214.9841ms", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 5214.9841, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:57:30.2787", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:57:30.3284", "level": "ERROR", "message": "An unhandled exception has occurred while executing the request.", "exception": "System.Exception: Istifadeci qeydiyyatdan kecib\r\n   at Application.Services.JWTService.Register(UserRegisterDto userRegister) in C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Application\\Services\\JWTService.cs:line 106\r\n   at Api.Controllers.AuthController.Register(UserRegisterDto userRegister) in C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api\\Controllers\\AuthController.cs:line 80\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-03 12:57:30.3428", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/register - 500 - text/plain;+charset=utf-8 5280.3571ms", "ElapsedMilliseconds": 5280.3571, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:58:14.2571", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJOzIYoLS82VxdW14eOFDvp3JPDE6OlAw - - 0", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": null, "ContentLength": 0, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJOzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 1 }
{ "time": "2024-04-03 12:58:14.2613", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:58:14.2613", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:58:14.2613", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:59:14.1527", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 12:59:14.5787", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 12:59:14.5787", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 12:59:14.5787", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 12:59:14.5787", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 12:59:16.1559", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:59:16.4679", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 12:59:16.5992", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 449.9786ms", "ElapsedMilliseconds": 449.9786, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:59:16.6172", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:59:16.6172", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.7922ms", "ElapsedMilliseconds": 2.7922, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:59:16.6205", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:59:16.8850", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 264.4570ms", "ElapsedMilliseconds": 264.457, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:59:16.9726", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:59:17.2454", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 272.8836ms", "ElapsedMilliseconds": 272.8836, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:59:18.5065", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:59:18.5065", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:59:18.5065", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken - 204 - - 8.1023ms", "ElapsedMilliseconds": 8.1023, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 12:59:18.5622", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - application/json 180", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 180, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 12:59:18.5622", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 12:59:18.6442", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 12:59:18.6633", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 12:59:19.3006", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 12:59:19.3006", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 645.9548ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 645.9548, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 12:59:19.3006", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 12:59:19.3188", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken - 400 - application/problem+json;+charset=utf-8 756.6526ms", "ElapsedMilliseconds": 756.6526, "StatusCode": 400, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:00:16.6081", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 1 }
{ "time": "2024-04-03 13:00:16.6081", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:00:16.6081", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - 204 - - 1.5158ms", "ElapsedMilliseconds": 1.5158, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 2 }
{ "time": "2024-04-03 13:00:16.6081", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - application/json 180", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 180, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 1 }
{ "time": "2024-04-03 13:00:16.6081", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:00:16.6081", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:00:16.6081", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:00:26.8328", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 1 }
{ "time": "2024-04-03 13:00:26.8328", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:00:27.2716", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - 204 - - 438.8751ms", "ElapsedMilliseconds": 438.8751, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 2 }
{ "time": "2024-04-03 13:00:27.7597", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - application/json 180", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 180, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 1 }
{ "time": "2024-04-03 13:00:27.7743", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:00:28.5086", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:00:28.5086", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:00:38.9795", "level": "INFO", "message": "Executing StatusCodeResult, setting HTTP status code 200", "StatusCode": 200, "EventId": 1, "EventName": "HttpStatusCodeResultExecuting" }
{ "time": "2024-04-03 13:00:38.9795", "level": "INFO", "message": "Executing StatusCodeResult, setting HTTP status code 200", "StatusCode": 200, "EventId": 1, "EventName": "HttpStatusCodeResultExecuting" }
{ "time": "2024-04-03 13:00:38.9803", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 10469.4395ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 10469.4395, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:00:38.9803", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 22360.4463ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 22360.4463, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:00:38.9803", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:00:38.9803", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:00:40.8089", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - 200 0 - 13049.8371ms", "ElapsedMilliseconds": 13049.8371, "StatusCode": 200, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 2 }
{ "time": "2024-04-03 13:00:40.8089", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - 499 - - 24191.5053ms", "ElapsedMilliseconds": 24191.5053, "StatusCode": 499, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 2 }
{ "time": "2024-04-03 13:01:11.9569", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - application/x-www-form-urlencoded 168", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/x-www-form-urlencoded", "ContentLength": 168, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 1 }
{ "time": "2024-04-03 13:01:11.9569", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:01:11.9569", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:01:11.9569", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:01:29.3675", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:01:29.3675", "level": "INFO", "message": "Executing StatusCodeResult, setting HTTP status code 200", "StatusCode": 200, "EventId": 1, "EventName": "HttpStatusCodeResultExecuting" }
{ "time": "2024-04-03 13:01:29.3675", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 17411.0911ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 17411.0911, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:01:29.3675", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:01:29.3675", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:01:29.3675", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - 204 - - 1.7707ms", "ElapsedMilliseconds": 1.7707, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:01:29.3675", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - 200 0 - 17444.2999ms", "ElapsedMilliseconds": 17444.2999, "StatusCode": 200, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 2 }
{ "time": "2024-04-03 13:01:29.3807", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - application/json 129", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 129, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:01:29.3807", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:01:29.3807", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:01:29.3935", "level": "INFO", "message": "Route matched with {action = \"Register\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:01:31.2577", "level": "INFO", "message": "Executed DbCommand (55ms) [Parameters=[@__userRegister_Email_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "elapsed": "55", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:01:31.2885", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "elapsed": "2", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:01:31.5535", "level": "INFO", "message": "Executed DbCommand (11ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "elapsed": "11", "parameters": "@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:01:34.5565", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Register.UserRegisterResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Register.UserRegisterResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:01:34.5643", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Register (Api) in 5170.6359ms", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 5170.6359, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:01:34.5643", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:01:34.5960", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - 200 - application/json;+charset=utf-8 5215.2928ms", "ElapsedMilliseconds": 5215.2928, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:01:35.0554", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:01:35.0554", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:01:35.0554", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 0.7218ms", "ElapsedMilliseconds": 0.7218, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:01:35.0626", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:01:35.0626", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:01:35.0626", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n ---> Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)\r\n   --- End of inner exception stack trace ---", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-03 13:01:35.1026", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-03 13:01:35.1026", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:01:35.1043", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:02:08.2587", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 33154.1913ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 33154.1913, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:02:08.2587", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:02:08.2587", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:02:08.2587", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 0.6730ms", "ElapsedMilliseconds": 0.673, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:02:08.2607", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - application/x-www-form-urlencoded 168", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/x-www-form-urlencoded", "ContentLength": 168, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 1 }
{ "time": "2024-04-03 13:02:08.2607", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:02:08.2607", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:02:08.2607", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:02:08.2607", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:02:08.2607", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:02:08.2607", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 4.0659ms", "ElapsedMilliseconds": 4.0659, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:02:08.2607", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:02:09.3016", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:02:09.3016", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:02:09.9324", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:02:09.9327", "level": "INFO", "message": "Executing StatusCodeResult, setting HTTP status code 200", "StatusCode": 200, "EventId": 1, "EventName": "HttpStatusCodeResultExecuting" }
{ "time": "2024-04-03 13:02:09.9327", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n ---> Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)\r\n   --- End of inner exception stack trace ---", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-03 13:02:09.9327", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-03 13:02:09.9327", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:02:09.9327", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 1671.0733ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 1671.0733, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:02:09.9327", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:02:09.9327", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:02:09.9327", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - 200 0 - 1673.0591ms", "ElapsedMilliseconds": 1673.0591, "StatusCode": 200, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 2 }
{ "time": "2024-04-03 13:02:09.9327", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:02:09.9327", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n ---> Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)\r\n   --- End of inner exception stack trace ---", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-03 13:02:09.9327", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-03 13:02:10.1506", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 216.9047ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 216.9047, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:02:10.1557", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:02:10.1754", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-03 13:02:10.1754", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-03 13:02:10.1754", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 401 0 - 878.4492ms", "ElapsedMilliseconds": 878.4492, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:02:10.2520", "level": "ERROR", "message": "{\"ClassName\":\"System.ArgumentNullException\",\"Message\":\"Value cannot be null.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at System.Int32.Parse(String s)\\r\\n   at Api.Controllers.UserController.GetByIdLicenses() in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\UserController.cs:line 33\\r\\n   at lambda_method200(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"System.Private.CoreLib\",\"WatsonBuckets\":null,\"ParamName\":\"s\"}" }
{ "time": "2024-04-03 13:02:10.2520", "level": "ERROR", "message": "{\"ClassName\":\"System.ArgumentNullException\",\"Message\":\"Value cannot be null.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at System.Int32.Parse(String s)\\r\\n   at Api.Controllers.UserController.GetByIdLicenses() in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\UserController.cs:line 33\\r\\n   at lambda_method200(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"System.Private.CoreLib\",\"WatsonBuckets\":null,\"ParamName\":\"s\"}" }
{ "time": "2024-04-03 13:02:10.2808", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 400 - application/json 35218.2175ms", "ElapsedMilliseconds": 35218.2175, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:02:10.2808", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 400 - application/json 979.3833ms", "ElapsedMilliseconds": 979.3833, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:02:26.7049", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlA - application/x-www-form-urlencoded 167", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/x-www-form-urlencoded", "ContentLength": 167, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlA", "EventId": 1 }
{ "time": "2024-04-03 13:02:26.7049", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:02:26.7049", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:02:26.7049", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:02:33.7117", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "BadRequestObjectResult", "Type": "<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:02:33.7149", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 7008.8146ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 7008.8146, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:02:33.7149", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:02:33.7149", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlA - 400 - application/json;+charset=utf-8 7010.1912ms", "ElapsedMilliseconds": 7010.1912, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlA", "EventId": 2 }
{ "time": "2024-04-03 13:04:21.0494", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 13:04:21.2104", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 13:04:21.2104", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 13:04:21.2155", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 13:04:21.2155", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 13:04:22.0358", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:04:22.1550", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 13:04:22.2365", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 204.5296ms", "ElapsedMilliseconds": 204.5296, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:04:22.2365", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:04:22.2365", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.4679ms", "ElapsedMilliseconds": 2.4679, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:04:22.2365", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:04:22.2927", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 48.8086ms", "ElapsedMilliseconds": 48.8086, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:04:22.3353", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:04:22.4501", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 114.8311ms", "ElapsedMilliseconds": 114.8311, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:05:31.7326", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:05:31.7326", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:05:31.7326", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - 204 - - 7.8572ms", "ElapsedMilliseconds": 7.8572, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:05:31.7561", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - application/json 160", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 160, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:05:31.7561", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:05:31.8035", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:05:31.8338", "level": "INFO", "message": "Route matched with {action = \"Register\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:05:39.4337", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]'.", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:05:39.4486", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Register (Api) in 7610.5838ms", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 7610.5838, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:05:39.4486", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:05:39.4601", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - 400 - application/json;+charset=utf-8 7704.0024ms", "ElapsedMilliseconds": 7704.0024, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:05:50.7563", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:05:50.7563", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:05:50.7563", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - 204 - - 2.7174ms", "ElapsedMilliseconds": 2.7174, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:05:50.8577", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - application/json 160", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 160, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:05:50.8577", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:05:50.8577", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:05:50.8577", "level": "INFO", "message": "Route matched with {action = \"Register\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:05:59.5668", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]'.", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:05:59.5668", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Register (Api) in 8707.3632ms", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 8707.3632, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:05:59.5668", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:06:00.8815", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - 400 - application/json;+charset=utf-8 10023.9149ms", "ElapsedMilliseconds": 10023.9149, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:06:11.6734", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:06:11.6734", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:06:11.6734", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - 204 - - 1.4716ms", "ElapsedMilliseconds": 1.4716, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:06:11.6734", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - application/json 159", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 159, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:06:13.8402", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:06:13.8402", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:06:13.8402", "level": "INFO", "message": "Route matched with {action = \"Register\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:06:21.4423", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]'.", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:06:21.4423", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Register (Api) in 7599.5017ms", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 7599.5017, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:06:21.4423", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:06:22.7461", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - 400 - application/json;+charset=utf-8 11063.5392ms", "ElapsedMilliseconds": 11063.5392, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:06:32.5009", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:06:32.5009", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:06:32.5009", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - 204 - - 2.0320ms", "ElapsedMilliseconds": 2.032, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:06:32.5222", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - application/json 159", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 159, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:06:32.5222", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:06:32.5222", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:06:32.5222", "level": "INFO", "message": "Route matched with {action = \"Register\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:07:13.8896", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:07:13.8896", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:07:13.8896", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - 204 - - 3.6604ms", "ElapsedMilliseconds": 3.6604, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:07:14.6965", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - application/json 163", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 163, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:07:14.6965", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:07:14.6965", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:07:14.7044", "level": "INFO", "message": "Route matched with {action = \"Register\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:07:36.6879", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]'.", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:07:37.2913", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Register (Api) in 64767.9822ms", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 64767.9822, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:07:37.2913", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:07:38.6771", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - 400 - application/json;+charset=utf-8 66154.2548ms", "ElapsedMilliseconds": 66154.2548, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:07:40.7139", "level": "INFO", "message": "Executed DbCommand (53ms) [Parameters=[@__userRegister_Email_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "elapsed": "53", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:07:54.7313", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:08:02.5995", "level": "INFO", "message": "Executed DbCommand (11ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "elapsed": "11", "parameters": "@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:08:11.0321", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Register.UserRegisterResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Register.UserRegisterResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:08:13.3229", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Register (Api) in 58617.2439ms", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 58617.2439, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:08:13.3229", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:08:13.3229", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - 200 - application/json;+charset=utf-8 58633.2672ms", "ElapsedMilliseconds": 58633.2672, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:08:13.4928", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:08:13.4928", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:08:13.4928", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 0.9172ms", "ElapsedMilliseconds": 0.9172, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:08:14.0097", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:08:14.0112", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:08:14.0356", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n ---> Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)\r\n   --- End of inner exception stack trace ---", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-03 13:08:14.0650", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-03 13:08:14.0650", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:08:14.0650", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:09:33.6793", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:09:33.6859", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:09:33.6859", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - 204 - - 10.1349ms", "ElapsedMilliseconds": 10.1349, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:09:34.4232", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - application/json 151", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 151, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:09:34.4232", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:09:34.4232", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:09:34.4232", "level": "INFO", "message": "Route matched with {action = \"Register\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:09:37.0516", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 82984.9181ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 82984.9181, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:09:37.0670", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:10:13.7674", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__userRegister_Email_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "elapsed": "2", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:10:15.7753", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:10:17.1345", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "elapsed": "4", "parameters": "@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:10:17.4214", "level": "ERROR", "message": "{\"ClassName\":\"System.ArgumentNullException\",\"Message\":\"Value cannot be null.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at System.Int32.Parse(String s)\\r\\n   at Api.Controllers.UserController.GetByIdLicenses() in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\UserController.cs:line 33\\r\\n   at lambda_method198(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"System.Private.CoreLib\",\"WatsonBuckets\":null,\"ParamName\":\"s\"}" }
{ "time": "2024-04-03 13:10:19.4957", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 400 - application/json 125486.1387ms", "ElapsedMilliseconds": 125486.1387, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:10:26.7786", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Register.UserRegisterResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Register.UserRegisterResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:10:28.7566", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Register (Api) in 54332.3761ms", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 54332.3761, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:10:28.7566", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:10:28.7566", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - 200 - application/json;+charset=utf-8 54335.2727ms", "ElapsedMilliseconds": 54335.2727, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:10:28.8326", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:10:28.8326", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:10:28.8326", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 0.5347ms", "ElapsedMilliseconds": 0.5347, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:10:29.3456", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:10:29.3456", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:10:29.3456", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n ---> Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)\r\n   --- End of inner exception stack trace ---", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-03 13:10:29.3456", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-03 13:10:29.3456", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:10:29.3456", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:11:25.0885", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:11:25.0885", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:11:25.0885", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:11:27.1798", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:11:27.1798", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:11:27.1798", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - 204 - - 2093.4566ms", "ElapsedMilliseconds": 2093.4566, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:11:27.1832", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 57836.064ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 57836.064, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:11:27.1832", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:11:27.2000", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - application/json 153", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 153, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:11:27.2000", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:11:27.6458", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:11:27.6458", "level": "INFO", "message": "Route matched with {action = \"Register\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:11:35.6518", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:11:38.2440", "level": "ERROR", "message": "{\"ClassName\":\"System.ArgumentNullException\",\"Message\":\"Value cannot be null.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at System.Int32.Parse(String s)\\r\\n   at Api.Controllers.UserController.GetByIdLicenses() in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\UserController.cs:line 33\\r\\n   at lambda_method198(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"System.Private.CoreLib\",\"WatsonBuckets\":null,\"ParamName\":\"s\"}" }
{ "time": "2024-04-03 13:11:46.0886", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 400 - application/json 76743.1278ms", "ElapsedMilliseconds": 76743.1278, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:11:46.0886", "level": "INFO", "message": "Executed DbCommand (7ms) [Parameters=[@__userRegister_Email_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "elapsed": "7", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:11:49.6133", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:11:49.6251", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:11:49.6550", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:11:49.6702", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "4", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:11:49.6702", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.Tokens'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:11:49.6702", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 13981.9926ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 13981.9926, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:11:49.6702", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:11:49.6702", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 24586.2079ms", "ElapsedMilliseconds": 24586.2079, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:11:49.7529", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:11:51.1229", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "elapsed": "2", "parameters": "@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:11:55.8268", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Register.UserRegisterResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Register.UserRegisterResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:11:55.8268", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Register (Api) in 28181.7189ms", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 28181.7189, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:11:55.8268", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:11:55.8268", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - 200 - application/json;+charset=utf-8 28628.1730ms", "ElapsedMilliseconds": 28628.173, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:11:55.8777", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:11:55.8777", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:11:55.8777", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 0.4542ms", "ElapsedMilliseconds": 0.4542, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:11:55.8876", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:11:55.8876", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:11:55.8876", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n ---> Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)\r\n   --- End of inner exception stack trace ---", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-03 13:11:55.8876", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-03 13:11:55.8876", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:11:55.8876", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:12:47.0124", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 51123.866ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 51123.866, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:12:47.0587", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:12:57.3469", "level": "ERROR", "message": "{\"ClassName\":\"System.ArgumentNullException\",\"Message\":\"Value cannot be null.\",\"Data\":{},\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at System.Int32.Parse(String s)\\r\\n   at Api.Controllers.UserController.GetByIdLicenses() in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\UserController.cs:line 33\\r\\n   at lambda_method198(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"System.Private.CoreLib\",\"WatsonBuckets\":null,\"ParamName\":\"s\"}" }
{ "time": "2024-04-03 13:12:58.4941", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 400 - application/json 62606.4846ms", "ElapsedMilliseconds": 62606.4846, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:14:33.4273", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:14:35.9069", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:14:35.9088", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:14:35.9242", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "3", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:14:35.9477", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:14:35.9559", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:14:35.9715", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:14:35.9715", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:14:35.9715", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:14:35.9814", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:14:35.9814", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:14:35.9814", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:14:35.9814", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:14:35.9814", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:14:35.9814", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 86.7423ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 86.7423, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:14:35.9814", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:14:36.4007", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 2973.8316ms", "ElapsedMilliseconds": 2973.8316, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:18:49.9265", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:18:49.9265", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:18:49.9265", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - 204 - - 2.4808ms", "ElapsedMilliseconds": 2.4808, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:18:49.9402", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - application/json 147", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 147, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:18:49.9402", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:18:49.9402", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:18:49.9402", "level": "INFO", "message": "Route matched with {action = \"Register\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:19:02.0341", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__userRegister_Email_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "elapsed": "1", "parameters": "@__userRegister_Email_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__userRegister_Email_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:19:02.0341", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"RoleName\" = 'Customer'\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:19:02.0435", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "elapsed": "3", "parameters": "@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"User\" (\"CompanyName\", \"Email\", \"FirstName\", \"LastName\", \"Password\", \"PhoneNumber\", \"RefreshToken\", \"RolesId\", \"Status\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:19:04.3990", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Register.UserRegisterResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Register.UserRegisterResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:19:04.3990", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Register (Api) in 14458.5097ms", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 14458.5097, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:19:04.3990", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:19:04.3990", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - 200 - application/json;+charset=utf-8 14459.8532ms", "ElapsedMilliseconds": 14459.8532, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:19:04.4526", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:19:04.4526", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:19:04.4526", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 0.4644ms", "ElapsedMilliseconds": 0.4644, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:19:04.4638", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:19:04.4638", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:19:04.4638", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n ---> Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)\r\n   --- End of inner exception stack trace ---", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-03 13:19:04.4638", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-03 13:19:04.4638", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:19:04.4638", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:19:13.2688", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 8803.3644ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 8803.3644, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:19:13.2688", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:19:13.2849", "level": "ERROR", "message": "{\"ClassName\":\"System.ArgumentNullException\",\"Message\":\"Value cannot be null.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at System.Int32.Parse(String s)\\r\\n   at Api.Controllers.UserController.GetByIdLicenses() in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Controllers\\\\UserController.cs:line 33\\r\\n   at lambda_method198(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"System.Private.CoreLib\",\"WatsonBuckets\":null,\"ParamName\":\"s\"}" }
{ "time": "2024-04-03 13:19:13.2849", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 400 - application/json 8823.6300ms", "ElapsedMilliseconds": 8823.63, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:21:20.1557", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:21:20.1557", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:21:20.1557", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - 204 - - 9.6614ms", "ElapsedMilliseconds": 9.6614, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:21:20.1745", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - application/json 64", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 64, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:21:20.1745", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:21:20.1745", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:21:20.1745", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:21:20.1745", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:21:20.1854", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:21:20.1854", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:21:20.1854", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "1", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:21:20.1854", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.Tokens'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:21:20.1854", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 18.5781ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 18.5781, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:21:20.1854", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:21:20.1854", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 19.3946ms", "ElapsedMilliseconds": 19.3946, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:21:20.2065", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:21:20.2065", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:21:20.2065", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 0.4238ms", "ElapsedMilliseconds": 0.4238, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:21:20.2065", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:21:20.2065", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:21:20.2065", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 0.2613ms", "ElapsedMilliseconds": 0.2613, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:21:20.2157", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:21:20.2157", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:21:20.2157", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:21:20.2157", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:21:20.2157", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:21:20.2306", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:21:20.2306", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 14.3439ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 14.3439, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:21:20.2306", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:21:20.2306", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 17.6218ms", "ElapsedMilliseconds": 17.6218, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:21:20.2306", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:21:20.2306", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:21:20.2306", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:21:20.2306", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:21:20.2306", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:21:20.2306", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:21:20.2306", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 4.1642ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 4.1642, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:21:20.2306", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:21:20.2306", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 4.9175ms", "ElapsedMilliseconds": 4.9175, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:21:20.2582", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:21:20.2582", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:21:20.2582", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 0.4259ms", "ElapsedMilliseconds": 0.4259, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:21:20.2731", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:21:20.2731", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:21:20.2731", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:21:20.2731", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:21:24.2308", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:21:24.2308", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:21:24.7715", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:21:26.9919", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 6718.316ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 6718.316, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:21:26.9919", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:21:26.9919", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 200 - application/json;+charset=utf-8 6720.0279ms", "ElapsedMilliseconds": 6720.0279, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:33:34.2733", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlA - application/x-www-form-urlencoded 167", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/x-www-form-urlencoded", "ContentLength": 167, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlA", "EventId": 1 }
{ "time": "2024-04-03 13:33:34.2733", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:33:34.2783", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:33:34.2783", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:33:46.6299", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "BadRequestObjectResult", "Type": "<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:33:46.6469", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 12365.4043ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 12365.4043, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:33:46.6469", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:33:48.2214", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlA - 400 - application/json;+charset=utf-8 13948.1167ms", "ElapsedMilliseconds": 13948.1167, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlA", "EventId": 2 }
{ "time": "2024-04-03 13:34:10.9459", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - application/x-www-form-urlencoded 168", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/x-www-form-urlencoded", "ContentLength": 168, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 1 }
{ "time": "2024-04-03 13:34:10.9459", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:34:10.9459", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:34:10.9459", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:34:28.6371", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - application/x-www-form-urlencoded 168", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/x-www-form-urlencoded", "ContentLength": 168, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 1 }
{ "time": "2024-04-03 13:34:29.8394", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:34:29.8394", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:34:29.8394", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:34:29.8876", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - application/x-www-form-urlencoded 168", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/x-www-form-urlencoded", "ContentLength": 168, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 1 }
{ "time": "2024-04-03 13:34:29.8876", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:34:29.8876", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:34:29.8876", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:34:40.2808", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.", "ObjectResultType": "BadRequestObjectResult", "Type": "Microsoft.AspNetCore.Mvc.ValidationProblemDetails", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:34:48.9538", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 19066.5093ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 19066.5093, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:34:48.9538", "level": "INFO", "message": "Executing StatusCodeResult, setting HTTP status code 200", "StatusCode": 200, "EventId": 1, "EventName": "HttpStatusCodeResultExecuting" }
{ "time": "2024-04-03 13:34:48.9538", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 38006.0815ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 38006.0815, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:34:48.9538", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:34:48.9538", "level": "INFO", "message": "Executing StatusCodeResult, setting HTTP status code 200", "StatusCode": 200, "EventId": 1, "EventName": "HttpStatusCodeResultExecuting" }
{ "time": "2024-04-03 13:34:48.9538", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 19055.4592ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 19055.4592, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:34:48.9538", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:34:48.9538", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:34:49.3223", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - 499 - application/problem+json;+charset=utf-8 20684.8568ms", "ElapsedMilliseconds": 20684.8568, "StatusCode": 499, "ContentType": "application/problem+json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 2 }
{ "time": "2024-04-03 13:34:51.4271", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - 200 0 - 21539.7835ms", "ElapsedMilliseconds": 21539.7835, "StatusCode": 200, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 2 }
{ "time": "2024-04-03 13:34:51.4271", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - 499 - - 40482.3077ms", "ElapsedMilliseconds": 40482.3077, "StatusCode": 499, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 2 }
{ "time": "2024-04-03 13:35:19.3693", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Resetpassword - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:35:19.3702", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:35:19.3702", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Resetpassword - 204 - - 1.1904ms", "ElapsedMilliseconds": 1.1904, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:35:19.3702", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Resetpassword - application/json 231", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 231, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:35:19.3702", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:35:19.3702", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.ResetPassword (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ResetPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:35:19.3702", "level": "INFO", "message": "Route matched with {action = \"ResetPassword\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult ResetPassword(Models.DTOs.User.ForgotPassword.ResetPasswordDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"ResetPassword\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult ResetPassword(Models.DTOs.User.ForgotPassword.ResetPasswordDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:35:28.7581", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__userid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__userid_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__userid_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__userid_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:35:31.0196", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "3", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:35:33.9980", "level": "INFO", "message": "Executing StatusCodeResult, setting HTTP status code 200", "StatusCode": 200, "EventId": 1, "EventName": "HttpStatusCodeResultExecuting" }
{ "time": "2024-04-03 13:35:33.9980", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.ResetPassword (Api) in 14613.77ms", "ActionName": "Api.Controllers.AuthController.ResetPassword (Api)", "ElapsedMilliseconds": 14613.77, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:35:33.9980", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.ResetPassword (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.ResetPassword (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:35:35.2976", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Resetpassword - 200 0 - 15914.1847ms", "ElapsedMilliseconds": 15914.1847, "StatusCode": 200, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Resetpassword", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:37:00.1172", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:37:03.5721", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:37:03.5733", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:37:03.8352", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - 204 - - 529.2058ms", "ElapsedMilliseconds": 529.2058, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:37:03.8352", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:37:04.0765", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - application/json 64", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 64, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:37:04.0765", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:37:04.0765", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:37:04.3333", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - 204 - - 4216.1237ms", "ElapsedMilliseconds": 4216.1237, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:37:04.3333", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:37:04.3396", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:04.3396", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:04.3396", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:04.3396", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "1", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:04.3396", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.Tokens'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:37:04.3396", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 17.1667ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 17.1667, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:37:04.3396", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:37:04.3396", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 275.7377ms", "ElapsedMilliseconds": 275.7377, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:37:04.3819", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - application/json 64", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 64, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:37:04.3951", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:37:04.3951", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:37:04.6306", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 7.4356ms", "ElapsedMilliseconds": 7.4356, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:37:04.6306", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:37:04.9237", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - application/json 64", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 64, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:37:04.9237", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:37:04.9237", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:37:04.9237", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:37:04.9237", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:37:04.9237", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 293.9932ms", "ElapsedMilliseconds": 293.9932, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:37:04.9237", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:37:04.9237", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:37:04.9237", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:37:04.9237", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:37:04.9237", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:05.1383", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:37:05.1600", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:05.1600", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:37:05.1600", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:37:05.1678", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:05.1678", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:05.2022", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "1", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:05.2022", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.Tokens'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:37:05.2022", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 277.897ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 277.897, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:37:05.2022", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:37:05.2022", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:37:05.2022", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 280.3202ms", "ElapsedMilliseconds": 280.3202, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:37:05.2022", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 281.4216ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 281.4216, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:37:05.2022", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:37:05.2022", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 287.1135ms", "ElapsedMilliseconds": 287.1135, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:37:05.2170", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:05.2170", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:05.2170", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:05.2170", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "1", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:05.2170", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:37:05.2170", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:37:05.2170", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.Tokens'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:37:05.2170", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 66.2072ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 66.2072, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:37:05.2170", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:37:05.2170", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:37:05.2170", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:37:05.3702", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:37:05.3702", "level": "INFO", "message": "Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "5", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:05.6370", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:37:05.6370", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:37:05.6370", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 418.0955ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 418.0955, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:37:05.6370", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:37:05.6370", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 419.1688ms", "ElapsedMilliseconds": 419.1688, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:37:05.6370", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 275.6812ms", "ElapsedMilliseconds": 275.6812, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:37:05.6370", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 1264.5635ms", "ElapsedMilliseconds": 1264.5635, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:37:05.7339", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:37:05.7339", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:37:05.7339", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:37:05.7459", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:37:05.7459", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:37:09.2058", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:37:09.5971", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:37:09.5971", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:37:09.5971", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:09.5971", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:09.5971", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:37:09.5971", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 6.0623ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 6.0623, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:37:09.5971", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:37:09.9624", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:09.9624", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:37:09.9642", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:37:09.9642", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:37:09.9642", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:37:10.5777", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:10.5777", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:37:10.5777", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 607.7122ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 607.7122, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:37:10.5777", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:37:11.6317", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:37:11.6317", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 1669.6184ms", "ElapsedMilliseconds": 1669.6184, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:37:11.6317", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 5898.6721ms", "ElapsedMilliseconds": 5898.6721, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:37:12.5857", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:37:12.5857", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:37:12.5857", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 1.4234ms", "ElapsedMilliseconds": 1.4234, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:37:12.7784", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:37:12.7784", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:37:12.7784", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:37:12.7927", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:37:13.8798", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:13.9198", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:13.9198", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:37:13.9198", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 1131.0425ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 1131.0425, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:37:13.9198", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:37:13.9198", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 200 - application/json;+charset=utf-8 1145.7434ms", "ElapsedMilliseconds": 1145.7434, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:37:13.9198", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 8176.6809ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 8176.6809, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:37:13.9198", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:37:15.3744", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 499 - application/json;+charset=utf-8 9640.1567ms", "ElapsedMilliseconds": 9640.1567, "StatusCode": 499, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:37:21.6538", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:37:21.6553", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:37:21.6553", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 1.7238ms", "ElapsedMilliseconds": 1.7238, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:37:21.6553", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:37:21.6553", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:37:21.6553", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:37:21.6553", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:37:21.6852", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:21.7062", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:37:21.7062", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 41.0008ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 41.0008, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:37:21.7062", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:37:21.7062", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 48.1413ms", "ElapsedMilliseconds": 48.1413, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:37:32.2325", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:37:32.2325", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:37:32.2325", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 3.5091ms", "ElapsedMilliseconds": 3.5091, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:37:32.2642", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:37:32.2642", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:37:32.2642", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:37:32.2642", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:37:32.2642", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:32.2642", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:32.2787", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:32.2787", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:32.2918", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:32.2918", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:32.2918", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:32.2918", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:32.3090", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:32.3090", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:32.3090", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:37:32.3090", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 45.0525ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 45.0525, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:37:32.3090", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:37:32.3090", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 49.7057ms", "ElapsedMilliseconds": 49.7057, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:37:36.9299", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:37:36.9299", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:37:36.9299", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 1.1717ms", "ElapsedMilliseconds": 1.1717, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:37:37.0402", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:37:37.0402", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 13:37:37.0402", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:37:37.0402", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:37:37.0402", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:37:37.0402", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:37:37.0402", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 7.182ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 7.182, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:37:37.0402", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:37:37.0492", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 8.9524ms", "ElapsedMilliseconds": 8.9524, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:46:33.7476", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:46:33.7476", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:46:33.7476", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:46:33.7672", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 13:46:33.8051", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:46:33.8051", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:46:33.8051", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 44.2018ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 44.2018, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:46:33.8051", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:46:33.8051", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 59.2452ms", "ElapsedMilliseconds": 59.2452, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:47:16.0940", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 13:47:16.2803", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 13:47:16.2803", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 13:47:16.2803", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 13:47:16.2803", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 13:47:16.9444", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:47:17.0760", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 13:47:17.1686", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 231.7281ms", "ElapsedMilliseconds": 231.7281, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:47:17.1686", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:47:17.1686", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.4995ms", "ElapsedMilliseconds": 3.4995, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:47:17.1686", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:47:17.2167", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 35.4775ms", "ElapsedMilliseconds": 35.4775, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:47:17.2675", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:47:17.4172", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 149.7444ms", "ElapsedMilliseconds": 149.7444, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:47:19.5575", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:47:19.6595", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Admin)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Admin)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-03 13:47:19.6595", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-03 13:47:19.6595", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Product/GetAllProducts - 403 0 - 103.6320ms", "ElapsedMilliseconds": 103.632, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:48:12.4802", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 13:48:12.6463", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 13:48:12.6463", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 13:48:12.6516", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 13:48:12.6516", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 13:48:13.1806", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:48:13.1806", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:48:13.2719", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 13:48:13.4492", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 275.7551ms", "ElapsedMilliseconds": 275.7551, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:48:13.4492", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:48:13.4492", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.0178ms", "ElapsedMilliseconds": 2.0178, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:48:13.4492", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:48:13.4643", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 13:48:13.5098", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 55.2091ms", "ElapsedMilliseconds": 55.2091, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:48:13.5109", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 13:48:13.5959", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:48:13.8072", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 211.3972ms", "ElapsedMilliseconds": 211.3972, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:48:14.5607", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 13:48:14.9129", "level": "INFO", "message": "Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "18", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 13:48:14.9648", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 13:48:14.9648", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 1461.3256ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 1461.3256, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 13:48:14.9648", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 13:48:14.9916", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 1811.5043ms", "ElapsedMilliseconds": 1811.5043, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:48:31.4853", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 13:48:31.6267", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 13:48:31.6267", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 13:48:31.6267", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 13:48:31.6267", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 13:48:32.3566", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:48:32.4781", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 13:48:32.5526", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 202.2770ms", "ElapsedMilliseconds": 202.277, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:48:32.5526", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:48:32.5526", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:48:32.5526", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.9571ms", "ElapsedMilliseconds": 2.9571, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:48:32.5842", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 27.7952ms", "ElapsedMilliseconds": 27.7952, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:48:32.6369", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:48:32.7631", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 126.1886ms", "ElapsedMilliseconds": 126.1886, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 13:48:35.6712", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 13:48:35.9053", "level": "ERROR", "message": "{\"ClassName\":\"System.InvalidOperationException\",\"Message\":\"The AuthorizationPolicy named: 'Admin,Customer' was not found.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at Microsoft.AspNetCore.Authorization.AuthorizationPolicy.CombineAsync(IAuthorizationPolicyProvider policyProvider, IEnumerable`1 authorizeData, IEnumerable`1 policies)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context) in C:\\\\Users\\\\HP\\\\Desktop\\\\PorjectLicenses\\\\src\\\\Api\\\\Pipeline\\\\GlobalErrorHandlingMiddleware.cs:line 23\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2146233079,\"Source\":\"Microsoft.AspNetCore.Authorization\",\"WatsonBuckets\":null}" }
{ "time": "2024-04-03 13:48:35.9053", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Product/GetAllProducts - 400 - application/json 251.8573ms", "ElapsedMilliseconds": 251.8573, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:00:48.4927", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 14:00:48.6636", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 14:00:48.6636", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 14:00:48.6684", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 14:00:48.6684", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 14:00:49.6144", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:00:49.7358", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 14:00:49.8190", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 207.4267ms", "ElapsedMilliseconds": 207.4267, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:00:49.8274", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:00:49.8274", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:00:49.8402", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 8.6582ms", "ElapsedMilliseconds": 8.6582, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:00:49.8636", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 36.8767ms", "ElapsedMilliseconds": 36.8767, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:00:49.9147", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:00:50.0473", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 132.4367ms", "ElapsedMilliseconds": 132.4367, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:00:53.2263", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:00:53.3278", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:00:53.3514", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:00:54.1366", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 14:00:54.5694", "level": "INFO", "message": "Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "28", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:00:54.6421", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:00:54.6421", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 1294.8459ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 1294.8459, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:00:54.6421", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:00:54.6745", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 1448.2003ms", "ElapsedMilliseconds": 1448.2003, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:01:20.1678", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 92", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 92, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:01:20.1678", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:01:20.1678", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:01:20.1944", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:01:20.3617", "level": "INFO", "message": "Executed DbCommand (10ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "10", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:01:20.4084", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'System.String'.", "ObjectResultType": "BadRequestObjectResult", "Type": "System.String", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:01:20.4084", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 215.1622ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 215.1622, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:01:20.4084", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:01:20.4084", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 400 - text/plain;+charset=utf-8 243.5163ms", "ElapsedMilliseconds": 243.5163, "StatusCode": 400, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:01:29.7857", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 91", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 91, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:01:29.7857", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:01:29.7857", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:01:29.7857", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:01:29.8216", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:01:29.8419", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'System.String'.", "ObjectResultType": "BadRequestObjectResult", "Type": "System.String", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:01:29.8419", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 50.2738ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 50.2738, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:01:29.8419", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:01:29.8419", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 400 - text/plain;+charset=utf-8 56.8349ms", "ElapsedMilliseconds": 56.8349, "StatusCode": 400, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:01:42.7282", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/Login - application/json 77", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 77, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:01:42.7296", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:01:42.7296", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:01:42.7296", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:01:42.7296", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:01:42.8109", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:01:42.8562", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:01:42.9426", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "4", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:01:42.9480", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.Tokens'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:01:42.9480", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 219.6249ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 219.6249, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:01:42.9480", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:01:42.9480", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 222.1931ms", "ElapsedMilliseconds": 222.1931, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:01:53.8188", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:01:53.8188", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:01:53.8188", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:01:53.8188", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 14:01:53.8329", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:01:53.8329", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:01:53.8329", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 10.7195ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 10.7195, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:01:53.8329", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:01:53.8329", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 14.9608ms", "ElapsedMilliseconds": 14.9608, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:02:06.0178", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:02:06.0178", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:02:06.0178", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 2.3653ms", "ElapsedMilliseconds": 2.3653, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:02:06.0264", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:02:06.0264", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:02:06.0264", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:02:06.0264", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:02:06.0264", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:02:06.0264", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 4.8884ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 4.8884, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:02:06.0264", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:02:06.0264", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 9.7959ms", "ElapsedMilliseconds": 9.7959, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:03:37.9760", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:03:37.9808", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:03:37.9808", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 5.1484ms", "ElapsedMilliseconds": 5.1484, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:03:37.9808", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:03:37.9808", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:03:37.9808", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:03:37.9808", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:03:37.9808", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:03:37.9808", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 5.6926ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 5.6926, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:03:37.9808", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:03:37.9808", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 6.8556ms", "ElapsedMilliseconds": 6.8556, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:03:47.9951", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:03:47.9951", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:03:47.9951", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 0.9954ms", "ElapsedMilliseconds": 0.9954, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:03:47.9951", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:03:47.9951", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:03:47.9951", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:03:47.9951", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:03:47.9951", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:03:47.9951", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 4.1383ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 4.1383, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:03:47.9951", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:03:47.9951", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 5.4309ms", "ElapsedMilliseconds": 5.4309, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:03:49.4175", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:03:49.4175", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:03:49.4175", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/register - 204 - - 0.9886ms", "ElapsedMilliseconds": 0.9886, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:03:49.4549", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - application/json 150", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 150, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:03:49.4549", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:03:49.4549", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:03:49.4549", "level": "INFO", "message": "Route matched with {action = \"Register\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Register\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Models.DTOs.User.Register.UserRegisterDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:03:59.6209", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:03:59.6209", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:03:59.6209", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.7942ms", "ElapsedMilliseconds": 1.7942, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:03:59.6380", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:03:59.6380", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:03:59.6380", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:03:59.6380", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:03:59.6380", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:03:59.6380", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.7529ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.7529, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:03:59.6380", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:03:59.6380", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.7465ms", "ElapsedMilliseconds": 2.7465, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:03:59.6951", "level": "INFO", "message": "Executing BadRequestObjectResult, writing value of type 'System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]'.", "ObjectResultType": "BadRequestObjectResult", "Type": "System.Collections.Generic.List`1[[FluentValidation.Results.ValidationFailure, FluentValidation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:03:59.7083", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Register (Api) in 10245.805ms", "ActionName": "Api.Controllers.AuthController.Register (Api)", "ElapsedMilliseconds": 10245.805, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:03:59.7083", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Register (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Register (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:03:59.7083", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/register - 400 - application/json;+charset=utf-8 10253.7711ms", "ElapsedMilliseconds": 10253.7711, "StatusCode": 400, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/register", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:04:00.9314", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:04:00.9618", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 30.6153ms", "ElapsedMilliseconds": 30.6153, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:04:00.9793", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:04:00.9793", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:04:00.9793", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 0.3392ms", "ElapsedMilliseconds": 0.3392, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:04:00.9955", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 16.1469ms", "ElapsedMilliseconds": 16.1469, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:04:01.1490", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:04:01.1934", "level": "ERROR", "message": "An unhandled exception has occurred while executing the request.", "exception": "Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Conflicting method/path combination \"GET api/Product/GetById\" for actions - ProductController.GetById (Api),ProductController.GetProductPagingData (Api). Actions require a unique method/path combination for Swagger/OpenAPI 3.0. Use ConflictingActionsResolver as a workaround\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-03 14:04:01.2000", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 500 - text/plain;+charset=utf-8 51.0249ms", "ElapsedMilliseconds": 51.0249, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:06:05.9722", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:06:05.9813", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:06:05.9813", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 10.7682ms", "ElapsedMilliseconds": 10.7682, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:06:05.9813", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:06:05.9813", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:06:05.9813", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:06:05.9813", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:06:05.9813", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:06:05.9813", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 1.0862ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.0862, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:06:05.9813", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:06:05.9813", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 5.6302ms", "ElapsedMilliseconds": 5.6302, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:06:19.9604", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:06:19.9604", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:06:19.9604", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.0870ms", "ElapsedMilliseconds": 1.087, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:06:20.0092", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:06:20.0092", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:06:20.0092", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:06:20.0092", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:06:20.0113", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:06:20.0113", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 1.333ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.333, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:06:20.0113", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:06:20.0113", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.8977ms", "ElapsedMilliseconds": 2.8977, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:06:30.5554", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:06:30.5554", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:06:30.5554", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.3999ms", "ElapsedMilliseconds": 1.3999, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:06:30.5864", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:06:30.5864", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:06:30.5864", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:06:30.5864", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:06:30.5864", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:06:30.5864", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 1.3203ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.3203, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:06:30.5864", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:06:30.5864", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.7628ms", "ElapsedMilliseconds": 2.7628, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:06:36.5464", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:06:36.5650", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 19.1438ms", "ElapsedMilliseconds": 19.1438, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:06:36.5785", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:06:36.5785", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:06:36.5785", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 0.3067ms", "ElapsedMilliseconds": 0.3067, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:06:36.5785", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 5.1822ms", "ElapsedMilliseconds": 5.1822, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:06:36.6474", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:06:36.6659", "level": "ERROR", "message": "An unhandled exception has occurred while executing the request.", "exception": "Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Conflicting method/path combination \"GET api/Product/GetById\" for actions - ProductController.GetById (Api),ProductController.GetProductPagingData (Api). Actions require a unique method/path combination for Swagger/OpenAPI 3.0. Use ConflictingActionsResolver as a workaround\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-03 14:06:36.6672", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 500 - text/plain;+charset=utf-8 19.8498ms", "ElapsedMilliseconds": 19.8498, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:06:37.1348", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:06:37.1388", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 4.0909ms", "ElapsedMilliseconds": 4.0909, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:06:37.1518", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:06:37.1518", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:06:37.1518", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 0.2531ms", "ElapsedMilliseconds": 0.2531, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:06:37.1518", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 3.5988ms", "ElapsedMilliseconds": 3.5988, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:06:37.1940", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:06:37.2041", "level": "ERROR", "message": "An unhandled exception has occurred while executing the request.", "exception": "Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Conflicting method/path combination \"GET api/Product/GetById\" for actions - ProductController.GetById (Api),ProductController.GetProductPagingData (Api). Actions require a unique method/path combination for Swagger/OpenAPI 3.0. Use ConflictingActionsResolver as a workaround\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-03 14:06:37.2041", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 500 - text/plain;+charset=utf-8 10.8634ms", "ElapsedMilliseconds": 10.8634, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:06:57.1264", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 14:06:57.3364", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 14:06:57.3406", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 14:06:57.3406", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 14:06:57.3406", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 14:06:58.0260", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:06:58.0780", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 14:06:58.0780", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:06:58.0780", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 80.2522ms", "ElapsedMilliseconds": 80.2522, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:06:58.1067", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:06:58.1067", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:06:58.2141", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:06:58.2476", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:06:58.2856", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:06:58.3997", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 186.9478ms", "ElapsedMilliseconds": 186.9478, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:06:58.4145", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:06:58.4172", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.6948ms", "ElapsedMilliseconds": 2.6948, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:06:58.4172", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:06:58.4764", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 58.6692ms", "ElapsedMilliseconds": 58.6692, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:06:58.5124", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:06:58.6291", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 116.7244ms", "ElapsedMilliseconds": 116.7244, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:06:59.0768", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:06:59.0819", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 792.8501ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 792.8501, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:06:59.0819", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:06:59.0819", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 982.3429ms", "ElapsedMilliseconds": 982.3429, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:07:02.9739", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:07:02.9739", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:07:02.9739", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:07:02.9739", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:07:03.0369", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:07:03.0369", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 55.4302ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 55.4302, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:07:03.0369", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:07:03.0381", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 64.4484ms", "ElapsedMilliseconds": 64.4484, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:07:06.2602", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:07:06.2684", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)\r\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)\r\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-03 14:07:06.2684", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-03 14:07:06.2684", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/types - 401 0 - 16.2268ms", "ElapsedMilliseconds": 16.2268, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:07:14.0577", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:07:14.0577", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:07:14.0577", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.1569ms", "ElapsedMilliseconds": 1.1569, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:07:14.1662", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:07:14.1662", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:07:14.1662", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:07:14.1662", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:07:14.1890", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:07:14.1890", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 21.8713ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 21.8713, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:07:14.1890", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:07:14.1890", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 23.4610ms", "ElapsedMilliseconds": 23.461, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:07:14.9935", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:07:14.9935", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:07:14.9935", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:07:14.9947", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:07:14.9947", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:07:14.9947", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 1.4957ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.4957, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:07:14.9947", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:07:14.9947", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 3.2725ms", "ElapsedMilliseconds": 3.2725, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:07:15.5798", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:07:15.5798", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-03 14:07:15.5798", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-03 14:07:15.5798", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/types - 403 0 - 5.7641ms", "ElapsedMilliseconds": 5.7641, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:07:38.0566", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:07:38.0573", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:07:38.0573", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 5.0285ms", "ElapsedMilliseconds": 5.0285, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:07:38.1330", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:07:38.1330", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:07:38.1330", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:07:38.1330", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:07:38.1330", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:07:38.1330", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.6638ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.6638, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:07:38.1330", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:07:38.1330", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.2675ms", "ElapsedMilliseconds": 2.2675, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:07:43.4555", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:07:43.4555", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-03 14:07:43.4555", "level": "INFO", "message": "AuthenticationScheme: Bearer was forbidden.", "AuthenticationScheme": "Bearer", "EventId": 13, "EventName": "AuthenticationSchemeForbidden" }
{ "time": "2024-04-03 14:07:43.4555", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/types - 403 0 - 1.6229ms", "ElapsedMilliseconds": 1.6229, "StatusCode": 403, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:07:52.4996", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 14:07:52.6381", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 14:07:52.6419", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 14:07:52.6419", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 14:07:52.6419", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 14:07:53.6049", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:07:53.7098", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 14:07:53.7910", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 192.5933ms", "ElapsedMilliseconds": 192.5933, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:07:53.7938", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:07:53.7938", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.0676ms", "ElapsedMilliseconds": 3.0676, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:07:53.7938", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:07:53.8262", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 29.0976ms", "ElapsedMilliseconds": 29.0976, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:07:53.8603", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:07:53.9800", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 119.7421ms", "ElapsedMilliseconds": 119.7421, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:07:56.0285", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:07:56.1349", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:07:56.1512", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:07:56.7421", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:07:56.7421", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetTicketTypes (Api) in 592.9184ms", "ActionName": "Api.Controllers.LicensesController.GetTicketTypes (Api)", "ElapsedMilliseconds": 592.9184, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:07:56.7421", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:07:56.7672", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/types - 200 - application/json;+charset=utf-8 735.9498ms", "ElapsedMilliseconds": 735.9498, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:08:45.9873", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:08:45.9953", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:08:45.9953", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 9.7472ms", "ElapsedMilliseconds": 9.7472, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:08:45.9953", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:08:45.9953", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:08:45.9953", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:08:45.9953", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:08:46.0553", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:08:46.0553", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 43.8194ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 43.8194, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:08:46.0553", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:08:46.0553", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 51.6334ms", "ElapsedMilliseconds": 51.6334, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:08:49.9783", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:08:49.9783", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:08:49.9838", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:08:49.9838", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:08:49.9968", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:08:49.9968", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 12.9149ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 12.9149, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:08:49.9968", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:08:49.9968", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 19.1634ms", "ElapsedMilliseconds": 19.1634, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:08:54.9639", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:08:54.9639", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:08:54.9639", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 2.4176ms", "ElapsedMilliseconds": 2.4176, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:08:54.9639", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:08:54.9639", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:08:54.9639", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:08:54.9639", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:08:54.9639", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:08:54.9639", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 4.93ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 4.93, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:08:54.9639", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:08:54.9639", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 6.3930ms", "ElapsedMilliseconds": 6.393, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:09:12.9689", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:09:12.9689", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:09:12.9689", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 0.9260ms", "ElapsedMilliseconds": 0.926, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:09:12.9689", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:09:12.9689", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:09:12.9689", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:09:12.9689", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:09:12.9689", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:09:12.9689", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 1.045ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.045, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:09:12.9689", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:09:12.9689", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.2133ms", "ElapsedMilliseconds": 2.2133, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:12:19.9975", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:12:19.9975", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:12:19.9975", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 9.7206ms", "ElapsedMilliseconds": 9.7206, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:12:20.0990", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:12:20.0990", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:12:20.0990", "level": "INFO", "message": "Failed to validate the token.", "exception": "Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n ---> Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)\r\n   --- End of inner exception stack trace ---", "EventId": 1, "EventName": "TokenValidationFailed" }
{ "time": "2024-04-03 14:12:20.1266", "level": "INFO", "message": "Bearer was not authenticated. Failure message: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "AuthenticationScheme": "Bearer", "FailureMessage": "IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" }
{ "time": "2024-04-03 14:12:20.1266", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:12:20.1266", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:12:26.5460", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 6417.7079ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 6417.7079, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:12:26.5460", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:12:26.6252", "level": "ERROR", "message": "{\"ClassName\":\"System.ArgumentNullException\",\"Message\":\"Value cannot be null.\",\"Data\":null,\"InnerException\":null,\"HelpURL\":null,\"StackTraceString\":\"   at System.Int32.Parse(String s)\\r\\n   at Api.Controllers.UserController.GetByIdLicenses()\\r\\n   at lambda_method20(Closure, Object, Object[])\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\r\\n--- End of stack trace from previous location ---\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\r\\n   at Api.Pipeline.GlobalErrorHandlingMiddleware.Invoke(HttpContext context)\",\"RemoteStackTraceString\":null,\"RemoteStackIndex\":0,\"ExceptionMethod\":null,\"HResult\":-2147467261,\"Source\":\"System.Private.CoreLib\",\"WatsonBuckets\":null,\"ParamName\":\"s\"}" }
{ "time": "2024-04-03 14:12:26.6580", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 400 - application/json 6559.0113ms", "ElapsedMilliseconds": 6559.0113, "StatusCode": 400, "ContentType": "application/json", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:13:49.3651", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:13:49.4206", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:13:49.4206", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - 204 - - 56.0968ms", "ElapsedMilliseconds": 56.0968, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:13:49.4978", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - application/json 64", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 64, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:13:49.4978", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:13:49.4978", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:13:49.5117", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:13:49.9623", "level": "INFO", "message": "Executed DbCommand (40ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "40", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:13:50.0508", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:13:50.0917", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:13:50.1888", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "2", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:13:50.1888", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.Tokens'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:13:50.1888", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 685.1494ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 685.1494, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:13:50.1888", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:13:50.1888", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 704.0391ms", "ElapsedMilliseconds": 704.0391, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:13:50.2063", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:13:50.2063", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:13:50.2063", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 0.5762ms", "ElapsedMilliseconds": 0.5762, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:13:50.2063", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:13:50.2063", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:13:50.2063", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 0.9156ms", "ElapsedMilliseconds": 0.9156, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:13:50.2145", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:13:50.2145", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:13:50.2145", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:13:50.2145", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:13:50.2145", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:13:50.2145", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:13:50.2145", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 10.6997ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 10.6997, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:13:50.2145", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:13:50.2145", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 13.0034ms", "ElapsedMilliseconds": 13.0034, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:13:50.2562", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:13:50.2562", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:13:50.2562", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:13:50.2562", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:13:50.2633", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:13:50.2633", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:13:50.2633", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 7.0652ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 7.0652, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:13:50.2633", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:13:50.2633", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 7.8243ms", "ElapsedMilliseconds": 7.8243, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:13:50.2906", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:13:50.2906", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:13:50.2906", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 0.4548ms", "ElapsedMilliseconds": 0.4548, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:13:50.3012", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:13:50.3012", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:13:50.3012", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:13:50.3012", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:13:50.3124", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:13:50.3277", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "3", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:13:50.3532", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:13:50.3532", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 52.1508ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 52.1508, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:13:50.3532", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:13:50.3532", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 200 - application/json;+charset=utf-8 54.7579ms", "ElapsedMilliseconds": 54.7579, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:13:55.1991", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:13:55.1991", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:13:55.1991", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 1.1078ms", "ElapsedMilliseconds": 1.1078, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:13:55.1991", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:13:55.1991", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:13:55.1991", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:13:55.1991", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:13:55.2177", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:13:55.2177", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:13:55.2339", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:13:55.2532", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:13:55.2532", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:13:55.2532", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:13:55.2625", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:13:55.2625", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:13:55.2625", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:13:55.2625", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:13:55.2625", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:13:55.2803", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 70.1907ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 70.1907, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:13:55.2803", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:13:55.2803", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 74.0145ms", "ElapsedMilliseconds": 74.0145, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:15:19.1904", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:15:19.1904", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:15:19.1904", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 1.4335ms", "ElapsedMilliseconds": 1.4335, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:15:19.1904", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:15:19.1904", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:15:19.1904", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:15:19.1904", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:15:19.1904", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:15:19.2054", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:15:19.2054", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:15:19.2054", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 8.0037ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 8.0037, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:15:19.2054", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:15:19.2054", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 200 - application/json;+charset=utf-8 8.7780ms", "ElapsedMilliseconds": 8.778, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:15:23.1232", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:15:23.1253", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:15:23.1253", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 2.5025ms", "ElapsedMilliseconds": 2.5025, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:15:23.1253", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:15:23.1253", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:15:23.1253", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:15:23.1253", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:15:23.1387", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:15:23.1387", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:15:23.1387", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:15:23.1387", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:15:23.1511", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:15:23.1511", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:15:23.1511", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:15:23.1511", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:15:23.1511", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:15:23.1511", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:15:23.1511", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:15:23.1511", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 30.1127ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 30.1127, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:15:23.1511", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:15:23.1511", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 31.3112ms", "ElapsedMilliseconds": 31.3112, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:15:26.3144", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:15:26.3144", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:15:26.3144", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 2.6670ms", "ElapsedMilliseconds": 2.667, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:15:26.3144", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:15:26.3248", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:15:26.3248", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:15:26.3248", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:15:26.3248", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:15:26.3530", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:15:26.3530", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 28.9912ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 28.9912, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:15:26.3530", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:15:26.3530", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 33.6404ms", "ElapsedMilliseconds": 33.6404, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:15:27.7761", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:15:27.7761", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:15:27.7761", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 0.9548ms", "ElapsedMilliseconds": 0.9548, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:15:27.7761", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:15:27.7761", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:15:27.7761", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:15:27.7761", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:15:27.7761", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:15:27.7761", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 1.2971ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.2971, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:15:27.7761", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:15:27.7761", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 4.5209ms", "ElapsedMilliseconds": 4.5209, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:16:30.9696", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:16:30.9696", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:16:30.9696", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 3.9036ms", "ElapsedMilliseconds": 3.9036, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:16:30.9905", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:16:30.9905", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:16:30.9905", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:16:30.9905", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:16:30.9905", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:16:30.9905", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.7366ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.7366, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:16:30.9905", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:16:30.9905", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.2002ms", "ElapsedMilliseconds": 2.2002, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:16:34.9845", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:16:34.9845", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:16:34.9845", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:16:34.9845", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:16:34.9845", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:16:34.9845", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.7915ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.7915, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:16:34.9845", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:16:34.9845", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.2490ms", "ElapsedMilliseconds": 2.249, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:16:36.6748", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:16:36.6748", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:16:36.6748", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.4208ms", "ElapsedMilliseconds": 1.4208, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:16:36.6828", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:16:36.6828", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:16:36.6828", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:16:36.6828", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:16:36.6828", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:16:36.6828", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.9349ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.9349, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:16:36.6828", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:16:36.6828", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.4118ms", "ElapsedMilliseconds": 2.4118, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:16:49.9679", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:16:49.9679", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:16:49.9679", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.2991ms", "ElapsedMilliseconds": 1.2991, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:16:49.9854", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:16:49.9854", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:16:49.9854", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:16:49.9854", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:16:49.9854", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:16:49.9854", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.8707ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.8707, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:16:49.9854", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:16:49.9854", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 5.1620ms", "ElapsedMilliseconds": 5.162, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:16:52.2106", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:16:52.2106", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:16:52.2106", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:16:52.2106", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:16:52.2106", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:16:52.2106", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 1.2127ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.2127, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:16:52.2106", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:16:52.2137", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 3.1881ms", "ElapsedMilliseconds": 3.1881, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:17:01.9737", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:17:01.9737", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:17:01.9737", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.0609ms", "ElapsedMilliseconds": 1.0609, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:17:01.9830", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:17:01.9830", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:17:01.9830", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:17:01.9830", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:17:01.9830", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:17:01.9830", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.6315ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.6315, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:17:01.9830", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:17:01.9830", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 1.4713ms", "ElapsedMilliseconds": 1.4713, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:17:06.9732", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:17:06.9739", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:17:06.9739", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:17:06.9739", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:17:06.9739", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:17:06.9739", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.8473ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.8473, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:17:06.9739", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:17:06.9739", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 3.4550ms", "ElapsedMilliseconds": 3.455, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:17:15.9776", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:17:15.9776", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:17:15.9776", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.3935ms", "ElapsedMilliseconds": 1.3935, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:17:15.9838", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:17:15.9838", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:17:15.9838", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:17:15.9838", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:17:15.9838", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:17:15.9838", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.5046ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.5046, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:17:15.9838", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:17:15.9838", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 1.0768ms", "ElapsedMilliseconds": 1.0768, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:17:35.9781", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:17:35.9794", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:17:35.9794", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.4535ms", "ElapsedMilliseconds": 1.4535, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:17:35.9794", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:17:35.9794", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:17:35.9794", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:17:35.9794", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:17:35.9794", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:17:35.9794", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 1.2435ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.2435, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:17:35.9794", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:17:35.9794", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.3995ms", "ElapsedMilliseconds": 2.3995, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:20:12.2260", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 14:20:12.4715", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 14:20:12.4715", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 14:20:12.4715", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 14:20:12.4715", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 14:20:13.4508", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:20:13.5923", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 14:20:13.7162", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 261.8309ms", "ElapsedMilliseconds": 261.8309, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:20:13.7496", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:20:13.7496", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.2657ms", "ElapsedMilliseconds": 2.2657, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:20:13.7496", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:20:13.8262", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 71.0503ms", "ElapsedMilliseconds": 71.0503, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:20:13.8593", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:20:14.0190", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 159.8023ms", "ElapsedMilliseconds": 159.8023, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:20:38.9757", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:20:38.9757", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:20:38.9757", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 7.0112ms", "ElapsedMilliseconds": 7.0112, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:20:38.9917", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:20:38.9959", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:20:39.1250", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:20:39.1572", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:20:40.1489", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:20:40.1597", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 997.5761ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 997.5761, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:20:40.1597", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:20:40.1712", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 1179.4598ms", "ElapsedMilliseconds": 1179.4598, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:20:43.9842", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:20:43.9842", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:20:43.9842", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:20:43.9842", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:20:44.0451", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:20:44.0451", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 55.4107ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 55.4107, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:20:44.0451", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:20:44.0451", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 61.8178ms", "ElapsedMilliseconds": 61.8178, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:20:58.9781", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:20:58.9781", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:20:58.9781", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.1637ms", "ElapsedMilliseconds": 1.1637, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:20:58.9915", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:20:58.9915", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:20:58.9915", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:20:58.9915", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:20:59.0133", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:20:59.0133", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 17.0804ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 17.0804, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:20:59.0133", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:20:59.0133", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 22.4589ms", "ElapsedMilliseconds": 22.4589, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:22:24.6142", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:22:24.6142", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:22:24.6142", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 2.3625ms", "ElapsedMilliseconds": 2.3625, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:22:24.6204", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:22:24.6204", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:22:24.6204", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:22:24.6204", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:22:25.1221", "level": "INFO", "message": "Executed DbCommand (60ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "60", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:22:25.2106", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:22:25.2472", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:22:25.3357", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "3", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:22:25.3437", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:22:25.3437", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:22:25.3437", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:22:25.3437", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:22:25.3437", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:22:25.3557", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:22:25.3557", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:22:25.3557", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 735.3569ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 735.3569, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:22:25.3557", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:22:25.3557", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 745.3173ms", "ElapsedMilliseconds": 745.3173, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:22:29.2187", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:22:29.2187", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:22:29.2187", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 1.1594ms", "ElapsedMilliseconds": 1.1594, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:22:29.2187", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:22:29.2187", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:22:29.2187", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:22:29.2187", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:22:29.2388", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:22:29.2560", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:22:29.2560", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 31.3049ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 31.3049, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:22:29.2560", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:22:29.2560", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 34.1122ms", "ElapsedMilliseconds": 34.1122, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:22:30.1908", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:22:30.1908", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:22:30.1908", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 0.5525ms", "ElapsedMilliseconds": 0.5525, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:22:30.1995", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:22:30.1995", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:22:30.1995", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:22:30.1995", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:22:30.1995", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:22:30.1995", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.8745ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.8745, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:22:30.1995", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:22:30.1995", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.4432ms", "ElapsedMilliseconds": 2.4432, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:25:18.9744", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:25:18.9744", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:25:18.9744", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 4.8765ms", "ElapsedMilliseconds": 4.8765, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:25:18.9864", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:25:18.9864", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:25:18.9864", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:25:18.9864", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:25:18.9864", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:25:18.9864", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.8753ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.8753, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:25:18.9864", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:25:18.9864", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.1543ms", "ElapsedMilliseconds": 2.1543, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:25:23.9765", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:25:23.9765", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:25:23.9765", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:25:23.9765", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:25:23.9765", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:25:23.9765", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.7915ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.7915, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:25:23.9765", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:25:23.9765", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.2234ms", "ElapsedMilliseconds": 2.2234, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:25:26.9736", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:25:26.9736", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:25:26.9736", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.7421ms", "ElapsedMilliseconds": 1.7421, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:25:26.9736", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:25:26.9736", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:25:26.9807", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:25:26.9807", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:25:26.9807", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:25:26.9807", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.6902ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.6902, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:25:26.9807", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:25:26.9807", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 1.8656ms", "ElapsedMilliseconds": 1.8656, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:25:31.7970", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - application/x-www-form-urlencoded 168", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/x-www-form-urlencoded", "ContentLength": 168, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 1 }
{ "time": "2024-04-03 14:25:31.7970", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:25:31.7970", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:25:31.8105", "level": "INFO", "message": "Route matched with {action = \"GetIdFromToken\", controller = \"Auth\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"GetIdFromToken\", controller = \"Auth\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetIdFromToken(System.String)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:25:39.0642", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:25:39.0642", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:25:40.3792", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1314.9773ms", "ElapsedMilliseconds": 1314.9773, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:25:40.3961", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:25:40.3961", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:25:40.3961", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:25:40.3961", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:25:40.3961", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:25:40.3961", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.5064ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.5064, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:25:40.3961", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:25:40.3961", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 1.1683ms", "ElapsedMilliseconds": 1.1683, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:25:40.3961", "level": "INFO", "message": "Executing StatusCodeResult, setting HTTP status code 200", "StatusCode": 200, "EventId": 1, "EventName": "HttpStatusCodeResultExecuting" }
{ "time": "2024-04-03 14:25:40.3961", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.GetIdFromToken (Api) in 8598.0369ms", "ActionName": "Api.Controllers.AuthController.GetIdFromToken (Api)", "ElapsedMilliseconds": 8598.0369, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:25:40.3961", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.GetIdFromToken (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.GetIdFromToken (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:25:40.3961", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/getIdfromToken?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw - 200 0 - 8611.9140ms", "ElapsedMilliseconds": 8611.914, "StatusCode": 200, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/getIdfromToken", "QueryString": "?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNzEyMTMyNTc2LCJleHAiOjE3MTIyMTg5NzYsImlhdCI6MTcxMjEzMjU3Nn0.B_fT4FCSOtJROzIYoLS82VxdW14eOFDvp3JPDE6OlAw", "EventId": 2 }
{ "time": "2024-04-03 14:26:02.9769", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:26:02.9992", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:26:02.9992", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 22.6243ms", "ElapsedMilliseconds": 22.6243, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:26:03.0105", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:26:03.0105", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:26:03.0105", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:26:03.0105", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:26:03.0105", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:26:03.0105", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 2.1112ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 2.1112, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:26:03.0105", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:26:03.0105", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 5.7572ms", "ElapsedMilliseconds": 5.7572, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:26:10.3240", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:26:10.3240", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:26:10.3240", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.4638ms", "ElapsedMilliseconds": 1.4638, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:26:10.3240", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:26:10.3240", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:26:10.3240", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:26:10.3240", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:26:10.3240", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:26:10.3240", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.8905ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.8905, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:26:10.3240", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:26:10.3240", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 1.9489ms", "ElapsedMilliseconds": 1.9489, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:26:12.5996", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:26:12.5996", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:26:12.5996", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:26:12.5996", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:26:12.5996", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:26:12.5996", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 1.1044ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.1044, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:26:12.5996", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:26:12.5996", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 3.4519ms", "ElapsedMilliseconds": 3.4519, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:26:18.8675", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:26:18.8675", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:26:18.8675", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 1.0043ms", "ElapsedMilliseconds": 1.0043, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:26:18.8958", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:26:18.8958", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:26:18.8958", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:26:18.8958", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:26:18.9051", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:26:18.9051", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:26:18.9051", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:26:18.9051", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:26:18.9171", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:26:18.9171", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:26:18.9171", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:26:18.9171", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:26:18.9171", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:26:18.9171", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:26:18.9171", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:26:18.9171", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 32.281ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 32.281, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:26:18.9171", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:26:18.9171", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 35.6722ms", "ElapsedMilliseconds": 35.6722, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:26:21.3631", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:26:21.3640", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:26:21.3640", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 1.1663ms", "ElapsedMilliseconds": 1.1663, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:26:21.3640", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:26:21.3640", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:26:21.3640", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:26:21.3640", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:26:21.3640", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:26:21.3640", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:26:21.3819", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 8.4612ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 8.4612, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:26:21.3819", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:26:21.3819", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 12.4721ms", "ElapsedMilliseconds": 12.4721, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:26:22.7004", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:26:22.7017", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:26:22.7017", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.5471ms", "ElapsedMilliseconds": 1.5471, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:26:22.7017", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:26:22.7017", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:26:22.7174", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:26:22.7174", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:26:22.7174", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:26:22.7174", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.9431ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.9431, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:26:22.7174", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:26:22.7174", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.8544ms", "ElapsedMilliseconds": 2.8544, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:26:42.9906", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:26:42.9906", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:26:42.9954", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 4.8973ms", "ElapsedMilliseconds": 4.8973, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:26:42.9954", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:26:42.9954", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:26:42.9954", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:26:42.9954", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:26:42.9954", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:26:42.9954", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.7581ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.7581, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:26:42.9954", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:26:42.9954", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 1.8782ms", "ElapsedMilliseconds": 1.8782, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:26:54.9941", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:26:54.9941", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:26:54.9941", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 0.8521ms", "ElapsedMilliseconds": 0.8521, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:26:55.0039", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:26:55.0039", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:26:55.0039", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:26:55.0039", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:26:55.0039", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:26:55.0039", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.5232ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.5232, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:26:55.0039", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:26:55.0039", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 1.2622ms", "ElapsedMilliseconds": 1.2622, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:26:56.0798", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:26:56.0804", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:26:56.0804", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:26:56.0804", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:26:56.0804", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:26:56.0804", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.6799ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.6799, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:26:56.0804", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:26:56.0804", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.0001ms", "ElapsedMilliseconds": 2.0001, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:27:00.9723", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:27:00.9723", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:27:00.9723", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 0.8907ms", "ElapsedMilliseconds": 0.8907, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:27:00.9723", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:27:00.9723", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:27:00.9723", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:27:00.9723", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:27:00.9832", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:27:00.9832", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.9857ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.9857, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:27:00.9832", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:27:00.9832", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.1830ms", "ElapsedMilliseconds": 2.183, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:27:06.9751", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:27:06.9751", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:27:06.9751", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 3.2874ms", "ElapsedMilliseconds": 3.2874, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:27:06.9889", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:27:06.9889", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:27:06.9889", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:27:06.9889", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:27:06.9889", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:27:06.9889", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.9465ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.9465, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:27:06.9889", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:27:06.9889", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.0762ms", "ElapsedMilliseconds": 2.0762, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:27:12.9837", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:27:12.9837", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:27:12.9837", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 0.9454ms", "ElapsedMilliseconds": 0.9454, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:27:13.1094", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:27:13.1096", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:27:13.1096", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:27:13.1096", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:27:13.1096", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:27:13.1096", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.4527ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.4527, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:27:13.1096", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:27:13.1096", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 1.1895ms", "ElapsedMilliseconds": 1.1895, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:27:16.9671", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:27:16.9671", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:27:16.9671", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:27:16.9671", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:27:16.9671", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:27:16.9671", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.4648ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.4648, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:27:16.9671", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:27:16.9671", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.0084ms", "ElapsedMilliseconds": 2.0084, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:27:27.2001", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:27:27.2001", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:27:27.2001", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.0946ms", "ElapsedMilliseconds": 1.0946, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:27:27.2588", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:27:27.2588", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:27:27.2588", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:27:27.2588", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:27:27.2611", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:27:27.2611", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 1.8101ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.8101, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:27:27.2611", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:27:27.2611", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.8293ms", "ElapsedMilliseconds": 2.8293, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:36:14.5130", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 14:36:14.9269", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 14:36:14.9334", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 14:36:14.9334", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 14:36:14.9334", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 14:36:16.0069", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:36:16.4024", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 14:36:16.6974", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 700.6636ms", "ElapsedMilliseconds": 700.6636, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:36:16.7010", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:36:16.7010", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.9348ms", "ElapsedMilliseconds": 2.9348, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:36:16.7010", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:36:16.7930", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 95.1288ms", "ElapsedMilliseconds": 95.1288, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:36:16.9676", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:36:17.1507", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 183.1862ms", "ElapsedMilliseconds": 183.1862, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:36:42.5176", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:36:42.5176", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:36:42.5276", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 9.9984ms", "ElapsedMilliseconds": 9.9984, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:36:42.5276", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:36:42.5276", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:36:42.6743", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:36:42.6944", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:36:44.0181", "level": "INFO", "message": "Executed DbCommand (50ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "50", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:36:44.1057", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:36:44.1057", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 1419.9111ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 1419.9111, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:36:44.1057", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:36:44.1277", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 1594.7726ms", "ElapsedMilliseconds": 1594.7726, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:36:47.5109", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:36:47.5145", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:36:47.5145", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 4.0770ms", "ElapsedMilliseconds": 4.077, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:36:47.5145", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:36:47.5145", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:36:47.5145", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:36:47.5145", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:36:47.5934", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:36:47.6248", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:36:47.6511", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:36:47.7574", "level": "INFO", "message": "Executed DbCommand (4ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "4", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:36:47.7660", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:36:47.7660", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:36:47.7660", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:36:47.7660", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:36:47.7660", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:36:47.7783", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:36:47.7783", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:36:47.7783", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 250.5305ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 250.5305, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:36:47.7783", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:36:47.7783", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 260.6020ms", "ElapsedMilliseconds": 260.602, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:36:56.3457", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:36:56.3457", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:36:56.3457", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 2.6978ms", "ElapsedMilliseconds": 2.6978, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:36:56.3668", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:36:56.3668", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:36:56.3717", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:36:56.3717", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:36:56.3923", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:36:56.3923", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:36:56.3923", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 21.7003ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 21.7003, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:36:56.3923", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:36:56.3923", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 27.1129ms", "ElapsedMilliseconds": 27.1129, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:36:57.3792", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:36:57.3792", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:36:57.3792", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.1040ms", "ElapsedMilliseconds": 1.104, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:36:57.3898", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:36:57.3898", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:36:57.3898", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:36:57.3898", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:36:57.3898", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:36:57.4014", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 5.9879ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 5.9879, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:36:57.4014", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:36:57.4014", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 11.8954ms", "ElapsedMilliseconds": 11.8954, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:38:50.7039", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:38:50.7039", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:38:50.7039", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 4.1464ms", "ElapsedMilliseconds": 4.1464, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:38:50.7244", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:38:50.7244", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:38:50.7244", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:38:50.7244", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:38:50.7244", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:38:50.7244", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 1.3735ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.3735, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:38:50.7244", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:38:50.7244", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.6227ms", "ElapsedMilliseconds": 2.6227, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:38:55.4840", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:38:55.4840", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:38:55.4840", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:38:55.4840", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:38:55.4840", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:38:55.4840", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.8452ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.8452, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:38:55.4840", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:38:55.4840", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 3.1425ms", "ElapsedMilliseconds": 3.1425, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:39:05.7129", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:39:05.7143", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:39:05.7143", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 1.8144ms", "ElapsedMilliseconds": 1.8144, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:39:05.7143", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:39:05.7143", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:39:05.7143", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:39:05.7143", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:39:05.7143", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:39:05.7323", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:39:05.7323", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:39:05.7323", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:39:05.7323", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:39:05.7453", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:39:05.7453", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:39:05.7453", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:39:05.7453", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:39:05.7453", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:39:05.7453", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:39:05.7453", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 32.4214ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 32.4214, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:39:05.7453", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:39:05.7453", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 33.4952ms", "ElapsedMilliseconds": 33.4952, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:39:11.0754", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:39:11.0754", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:39:11.0754", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 1.7206ms", "ElapsedMilliseconds": 1.7206, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:39:11.1174", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:39:11.1174", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:39:11.1174", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:39:11.1174", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:39:11.1237", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:39:11.1237", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:39:11.1237", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 6.4432ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 6.4432, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:39:11.1237", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:39:11.1237", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 7.9537ms", "ElapsedMilliseconds": 7.9537, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:39:11.9802", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:39:11.9802", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:39:11.9802", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 0.7622ms", "ElapsedMilliseconds": 0.7622, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:39:12.0009", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:39:12.0009", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:39:12.0009", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:39:12.0009", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:39:12.0009", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:39:12.0009", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.8811ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.8811, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:39:12.0009", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:39:12.0009", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 1.7970ms", "ElapsedMilliseconds": 1.797, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:42:18.8996", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 14:42:18.9821", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 14:42:18.9821", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 14:42:18.9821", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 14:42:18.9821", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 14:42:19.5400", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:42:19.6110", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 14:42:19.6893", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 149.3869ms", "ElapsedMilliseconds": 149.3869, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:42:19.7068", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:42:19.7068", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:42:19.7068", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 1.5036ms", "ElapsedMilliseconds": 1.5036, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:42:19.7259", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 18.9539ms", "ElapsedMilliseconds": 18.9539, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:42:19.8941", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:42:19.9956", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 101.4296ms", "ElapsedMilliseconds": 101.4296, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:42:33.0063", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:42:33.0063", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:42:33.0063", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - 204 - - 4.2898ms", "ElapsedMilliseconds": 4.2898, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:42:33.0167", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - application/json 80", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 80, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:42:33.0167", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:42:33.0817", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:42:33.1124", "level": "INFO", "message": "Route matched with {action = \"Create\", controller = \"Ticket\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:42:34.2022", "level": "INFO", "message": "Executed DbCommand (47ms) [Parameters=[@__request_LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "elapsed": "47", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:42:34.4365", "level": "INFO", "message": "Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "elapsed": "10", "parameters": "@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:42:34.4604", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Create.TicketCreateResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Create.TicketCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:42:34.4701", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.Create (Api) in 1352.7764ms", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 1352.7764, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:42:34.4701", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:42:34.4842", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - 200 - application/json;+charset=utf-8 1467.4380ms", "ElapsedMilliseconds": 1467.438, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:42:34.4958", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:42:34.4958", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:42:34.4958", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 0.8834ms", "ElapsedMilliseconds": 0.8834, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:42:34.4958", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:42:34.4958", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:42:34.5139", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:42:34.5139", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:42:34.5899", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:42:34.5924", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:42:34.5924", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 78.87ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 78.87, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:42:34.5924", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:42:34.5924", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 85.5731ms", "ElapsedMilliseconds": 85.5731, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:42:39.6221", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://localhost:5274/api/Auth/logout - - 0", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": null, "ContentLength": 0, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/logout", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:42:39.6221", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:42:39.6221", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nDenyAnonymousAuthorizationRequirement: Requires an authenticated user.", "Reason": "These requirements were not met:\r\nDenyAnonymousAuthorizationRequirement: Requires an authenticated user.", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-03 14:42:39.6221", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-03 14:42:39.6221", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://localhost:5274/api/Auth/logout - 401 0 - 10.6007ms", "ElapsedMilliseconds": 10.6007, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Auth/logout", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:42:44.1172", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:42:44.1172", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:42:44.1172", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.4185ms", "ElapsedMilliseconds": 1.4185, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:42:44.1307", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:42:44.1307", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:42:44.1307", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:42:44.1307", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:42:44.1490", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:42:44.1490", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 14.6403ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 14.6403, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:42:44.1490", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:42:44.1490", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 19.0254ms", "ElapsedMilliseconds": 19.0254, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:42:53.6491", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:42:53.6491", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:42:53.6491", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - 204 - - 0.8414ms", "ElapsedMilliseconds": 0.8414, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:42:53.6592", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - application/json 80", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 80, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:42:53.6592", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:42:53.6592", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:42:53.6592", "level": "INFO", "message": "Route matched with {action = \"Create\", controller = \"Ticket\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:42:53.6592", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:42:53.6714", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "elapsed": "3", "parameters": "@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:42:53.6714", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Create.TicketCreateResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Create.TicketCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:42:53.6714", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.Create (Api) in 12.0548ms", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 12.0548, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:42:53.6714", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:42:53.6714", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - 200 - application/json;+charset=utf-8 13.1916ms", "ElapsedMilliseconds": 13.1916, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:42:53.6714", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:42:53.6714", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:42:53.6714", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 0.3044ms", "ElapsedMilliseconds": 0.3044, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:42:53.6911", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:42:53.6911", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:42:53.6911", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:42:53.6911", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:42:53.6911", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:42:53.6911", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:42:53.6911", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.6739ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.6739, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:42:53.6911", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:42:53.6911", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.6435ms", "ElapsedMilliseconds": 3.6435, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:43:36.3781", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:43:36.3781", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:43:36.3781", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 2.2958ms", "ElapsedMilliseconds": 2.2958, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:43:36.3985", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:43:36.3985", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:43:36.3985", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:43:36.3985", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:43:36.3985", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:43:36.3985", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 1.3258ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.3258, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:43:36.3985", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:43:36.3985", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.4986ms", "ElapsedMilliseconds": 2.4986, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:43:52.0138", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:43:52.0138", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:43:52.0138", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - 204 - - 1.5576ms", "ElapsedMilliseconds": 1.5576, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:43:52.0138", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - application/json 86", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 86, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:43:52.0138", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:43:52.0138", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:43:52.0138", "level": "INFO", "message": "Route matched with {action = \"Create\", controller = \"Ticket\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:43:52.0138", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:43:52.0138", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "elapsed": "2", "parameters": "@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:43:52.0138", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Create.TicketCreateResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Create.TicketCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:43:52.0138", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.Create (Api) in 6.9425ms", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 6.9425, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:43:52.0138", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:43:52.0138", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - 200 - application/json;+charset=utf-8 7.8194ms", "ElapsedMilliseconds": 7.8194, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:43:52.0557", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:43:52.0557", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:43:52.0557", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 0.3119ms", "ElapsedMilliseconds": 0.3119, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:43:52.0629", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:43:52.0629", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:43:52.0629", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:43:52.0629", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:43:52.0629", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:43:52.0629", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:43:52.0629", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 4.1508ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 4.1508, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:43:52.0629", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:43:52.0629", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 5.3473ms", "ElapsedMilliseconds": 5.3473, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:44:21.8113", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:44:21.8126", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:44:21.8126", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.4941ms", "ElapsedMilliseconds": 1.4941, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:44:21.8126", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:44:21.8126", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:44:21.8126", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:44:21.8126", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:44:21.8126", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:44:21.8126", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.9142ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.9142, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:44:21.8126", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:44:21.8126", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.0642ms", "ElapsedMilliseconds": 2.0642, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:44:31.4828", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:44:31.4828", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:44:31.4828", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - 204 - - 1.3905ms", "ElapsedMilliseconds": 1.3905, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:44:31.4828", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - application/json 90", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 90, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:44:31.4828", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:44:31.4828", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:44:31.4828", "level": "INFO", "message": "Route matched with {action = \"Create\", controller = \"Ticket\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:44:31.4828", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:44:31.4828", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "elapsed": "3", "parameters": "@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:44:31.4828", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Create.TicketCreateResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Create.TicketCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:44:31.4828", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.Create (Api) in 7.6456ms", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 7.6456, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:44:31.4828", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:44:31.4828", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - 200 - application/json;+charset=utf-8 8.6084ms", "ElapsedMilliseconds": 8.6084, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:44:31.5150", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:44:31.5150", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:44:31.5150", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 0.3150ms", "ElapsedMilliseconds": 0.315, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:44:31.5150", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:44:31.5150", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:44:31.5150", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:44:31.5150", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:44:31.5150", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:44:31.5150", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:44:31.5150", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.0347ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.0347, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:44:31.5150", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:44:31.5150", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.2705ms", "ElapsedMilliseconds": 4.2705, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:45:19.4031", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:45:19.4031", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:45:19.4031", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 2.0291ms", "ElapsedMilliseconds": 2.0291, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:45:19.4031", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:45:19.4031", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:45:19.4031", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:45:19.4031", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:45:19.4031", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:45:19.4031", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 1.0991ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.0991, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:45:19.4031", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:45:19.4031", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.3793ms", "ElapsedMilliseconds": 2.3793, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:45:29.1349", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:45:29.1349", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:45:29.1349", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - 204 - - 1.4134ms", "ElapsedMilliseconds": 1.4134, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:45:29.1422", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - application/json 85", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 85, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:45:29.1422", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:45:29.1422", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:45:29.1422", "level": "INFO", "message": "Route matched with {action = \"Create\", controller = \"Ticket\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:45:29.1422", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:45:29.1422", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "elapsed": "2", "parameters": "@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:45:29.1513", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Create.TicketCreateResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Create.TicketCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:45:29.1513", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.Create (Api) in 8.2814ms", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 8.2814, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:45:29.1513", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:45:29.1513", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - 200 - application/json;+charset=utf-8 9.8880ms", "ElapsedMilliseconds": 9.888, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:45:29.1666", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:45:29.1666", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:45:29.1666", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 0.1929ms", "ElapsedMilliseconds": 0.1929, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:45:29.1666", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:45:29.1666", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:45:29.1666", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:45:29.1666", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:45:29.1666", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:45:29.1666", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:45:29.1666", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.4731ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.4731, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:45:29.1666", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:45:29.1666", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.4347ms", "ElapsedMilliseconds": 3.4347, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:45:48.4040", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:45:48.4040", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:45:48.4040", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.0529ms", "ElapsedMilliseconds": 1.0529, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:45:48.4514", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:45:48.4514", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:45:48.4514", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:45:48.4514", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:45:48.4514", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:45:48.4514", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.9791ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.9791, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:45:48.4514", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:45:48.4514", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.2830ms", "ElapsedMilliseconds": 2.283, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:45:57.3063", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:45:57.3083", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:45:57.3083", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - 204 - - 2.0807ms", "ElapsedMilliseconds": 2.0807, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:45:57.3576", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - application/json 83", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 83, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:45:57.3578", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:45:57.3578", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:45:57.3578", "level": "INFO", "message": "Route matched with {action = \"Create\", controller = \"Ticket\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:45:57.3578", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:45:57.3578", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "elapsed": "2", "parameters": "@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:45:57.3578", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Create.TicketCreateResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Create.TicketCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:45:57.3578", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.Create (Api) in 7.5427ms", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 7.5427, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:45:57.3578", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:45:57.3578", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - 200 - application/json;+charset=utf-8 8.6173ms", "ElapsedMilliseconds": 8.6173, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:45:57.4289", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:45:57.4289", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:45:57.4289", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 0.4289ms", "ElapsedMilliseconds": 0.4289, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:45:57.5611", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:45:57.5614", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:45:57.5614", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:45:57.5614", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:45:57.5614", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:45:57.5614", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:45:57.5614", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.3762ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.3762, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:45:57.5614", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:45:57.5614", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.8082ms", "ElapsedMilliseconds": 4.8082, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:48:48.2876", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:48:48.2876", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:48:48.2876", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 0.8940ms", "ElapsedMilliseconds": 0.894, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:48:48.2961", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:48:48.2961", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:48:48.2961", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:48:48.2961", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:48:48.2961", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:48:48.2961", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 1.0166ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 1.0166, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:48:48.2961", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:48:48.2961", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 2.1390ms", "ElapsedMilliseconds": 2.139, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:48:58.1746", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:48:58.1746", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:48:58.1746", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - 204 - - 0.6876ms", "ElapsedMilliseconds": 0.6876, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:48:58.1915", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - application/json 74", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 74, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:48:58.1915", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:48:58.1915", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:48:58.1915", "level": "INFO", "message": "Route matched with {action = \"Create\", controller = \"Ticket\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:48:58.2142", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:48:58.2344", "level": "INFO", "message": "Executed DbCommand (19ms) [Parameters=[@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "elapsed": "19", "parameters": "@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:48:58.2344", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Create.TicketCreateResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Create.TicketCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:48:58.2344", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.Create (Api) in 42.7397ms", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 42.7397, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:48:58.2344", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:48:58.2344", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - 200 - application/json;+charset=utf-8 44.1157ms", "ElapsedMilliseconds": 44.1157, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:48:58.2757", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:48:58.2757", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:48:58.2757", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 0.3862ms", "ElapsedMilliseconds": 0.3862, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:48:58.2986", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:48:58.2986", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:48:58.2986", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:48:58.2986", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:48:58.3143", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:48:58.3489", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:48:58.3489", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:48:58.3489", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 51.34ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 51.34, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:48:58.3489", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:48:58.3489", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 200 - application/json;+charset=utf-8 55.2643ms", "ElapsedMilliseconds": 55.2643, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:49:42.1583", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:49:42.1583", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:49:42.1583", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 1.7211ms", "ElapsedMilliseconds": 1.7211, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:49:42.1583", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:49:42.1583", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:49:42.1583", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:49:42.1721", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:49:42.1721", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:49:42.1886", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:49:42.2020", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:49:42.2191", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:49:42.2191", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:49:42.2191", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:49:42.2191", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:49:42.2191", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:49:42.2191", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:49:42.2191", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:49:42.2191", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:49:42.2191", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 55.4024ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 55.4024, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:49:42.2191", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:49:42.2191", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 61.6158ms", "ElapsedMilliseconds": 61.6158, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:49:44.3737", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:49:44.3737", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:49:44.3737", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 0.6807ms", "ElapsedMilliseconds": 0.6807, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:49:44.3737", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:49:44.3737", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:49:44.3737", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:49:44.3737", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:49:44.3737", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:49:44.3737", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:49:44.3737", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 4.2185ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 4.2185, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:49:44.3737", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:49:44.3737", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 5.6445ms", "ElapsedMilliseconds": 5.6445, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:49:46.0057", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:49:46.0057", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:49:46.0057", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 1.1624ms", "ElapsedMilliseconds": 1.1624, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:49:46.0179", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:49:46.0179", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:49:46.0179", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:49:46.0179", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:49:46.0179", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:49:46.0179", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.7867ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.7867, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:49:46.0179", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:49:46.0179", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 1.7056ms", "ElapsedMilliseconds": 1.7056, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:49:59.1406", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:49:59.1406", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:49:59.1406", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - 204 - - 1.6605ms", "ElapsedMilliseconds": 1.6605, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:49:59.1406", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - application/json 87", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 87, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:49:59.1406", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:49:59.1406", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:49:59.1406", "level": "INFO", "message": "Route matched with {action = \"Create\", controller = \"Ticket\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:49:59.1538", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:49:59.1538", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "elapsed": "3", "parameters": "@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:49:59.1538", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Create.TicketCreateResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Create.TicketCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:49:59.1538", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.Create (Api) in 8.1383ms", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 8.1383, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:49:59.1538", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:49:59.1538", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - 200 - application/json;+charset=utf-8 9.9873ms", "ElapsedMilliseconds": 9.9873, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:49:59.1751", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:49:59.1751", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:49:59.1751", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 0.2218ms", "ElapsedMilliseconds": 0.2218, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:49:59.1751", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:49:59.1751", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:49:59.1751", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:49:59.1751", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:49:59.1751", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:49:59.1751", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:49:59.1751", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:49:59.1751", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 3.6323ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 3.6323, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:49:59.1751", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:49:59.1751", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 200 - application/json;+charset=utf-8 4.4703ms", "ElapsedMilliseconds": 4.4703, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:51:19.2978", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:51:19.2978", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:51:19.2978", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 1.2903ms", "ElapsedMilliseconds": 1.2903, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:51:19.3154", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:51:19.3154", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:51:19.3154", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:51:19.3154", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:51:19.3154", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:51:19.3154", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:51:19.3154", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:51:19.3154", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:51:19.3154", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:51:19.3154", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:51:19.3154", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:51:19.3154", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:51:19.3154", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:51:19.3318", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:51:19.3318", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:51:19.3318", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 15.6422ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 15.6422, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:51:19.3318", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:51:19.3318", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 16.8388ms", "ElapsedMilliseconds": 16.8388, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:51:26.8857", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:51:26.8857", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:51:26.8857", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 0.5931ms", "ElapsedMilliseconds": 0.5931, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:51:26.8943", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:51:26.8943", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:51:26.8943", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:51:26.8943", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:51:26.8943", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:51:26.8943", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:51:26.8943", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 3.6754ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 3.6754, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:51:26.8943", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:51:26.8943", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 4.9360ms", "ElapsedMilliseconds": 4.936, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:51:28.9835", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:51:28.9835", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:51:28.9835", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 0.6627ms", "ElapsedMilliseconds": 0.6627, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:51:29.0056", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:51:29.0056", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:51:29.0056", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:51:29.0056", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:51:29.0056", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:51:29.0056", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.7005ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.7005, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:51:29.0056", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:51:29.0056", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 1.5249ms", "ElapsedMilliseconds": 1.5249, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:55:36.4288", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:55:36.4288", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:55:36.4288", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - 204 - - 4.1823ms", "ElapsedMilliseconds": 4.1823, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:55:36.4468", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - application/json 64", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 64, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:55:36.4468", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:55:36.4468", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:55:36.4542", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:55:36.4916", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:55:36.4916", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:55:36.5123", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:55:36.5123", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "1", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:55:36.5123", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.Tokens'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:55:36.5123", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 68.3749ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 68.3749, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:55:36.5123", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:55:36.5123", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 75.9479ms", "ElapsedMilliseconds": 75.9479, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:55:36.5455", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:55:36.5455", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:55:36.5455", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 0.1566ms", "ElapsedMilliseconds": 0.1566, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:55:36.5520", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:55:36.5520", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:55:36.5520", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 0.2689ms", "ElapsedMilliseconds": 0.2689, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:55:36.5520", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:55:36.5520", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:55:36.5520", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:55:36.5520", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:55:36.5635", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:55:36.5635", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:55:36.5635", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 11.6255ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 11.6255, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:55:36.5635", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:55:36.5635", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 13.7033ms", "ElapsedMilliseconds": 13.7033, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:55:36.5826", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:55:36.5826", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:55:36.5826", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:55:36.5826", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:55:36.5826", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:55:36.5826", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:55:36.5826", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 1.8906ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 1.8906, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:55:36.5826", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:55:36.5826", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 2.6717ms", "ElapsedMilliseconds": 2.6717, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:55:36.5915", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:55:36.5915", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:55:36.5915", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 0.3023ms", "ElapsedMilliseconds": 0.3023, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:55:36.5915", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:55:36.5915", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:55:36.5915", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:55:36.5915", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:55:36.5915", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:55:36.5915", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:55:36.5915", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:55:36.5915", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 4.2055ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 4.2055, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:55:36.5915", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:55:36.5915", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 200 - application/json;+charset=utf-8 5.2223ms", "ElapsedMilliseconds": 5.2223, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:55:41.2733", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:55:41.2733", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:55:41.2733", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 0.7716ms", "ElapsedMilliseconds": 0.7716, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:55:41.2826", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:55:41.2826", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:55:41.2826", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:55:41.2826", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:55:41.2826", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:55:41.2826", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:55:41.2826", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:55:41.2826", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:55:41.2826", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:55:41.2826", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:55:41.2826", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:55:41.2980", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:55:41.2980", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:55:41.2980", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:55:41.2980", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:55:41.2980", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 17.1043ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 17.1043, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:55:41.2980", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:55:41.2980", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 18.5844ms", "ElapsedMilliseconds": 18.5844, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:55:43.6667", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:55:43.6667", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:55:43.6667", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 1.4667ms", "ElapsedMilliseconds": 1.4667, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:55:43.6667", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:55:43.6667", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:55:43.6667", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:55:43.6667", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:55:43.6667", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:55:43.6667", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:55:43.6667", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 2.6994ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 2.6994, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:55:43.6667", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:55:43.6667", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 3.6106ms", "ElapsedMilliseconds": 3.6106, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:55:45.0366", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:55:45.0366", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:55:45.0366", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 0.6160ms", "ElapsedMilliseconds": 0.616, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:55:45.0366", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:55:45.0366", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:55:45.0366", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:55:45.0366", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:55:45.0366", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:55:45.0366", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 0.7277ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 0.7277, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:55:45.0366", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:55:45.0366", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 1.7023ms", "ElapsedMilliseconds": 1.7023, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:56:03.4782", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:56:03.4782", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:56:03.4782", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/CreateTicket - 204 - - 0.8179ms", "ElapsedMilliseconds": 0.8179, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:56:03.4877", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - application/json 79", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 79, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:56:03.4877", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:56:03.4877", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:56:03.4877", "level": "INFO", "message": "Route matched with {action = \"Create\", controller = \"Ticket\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"Create\", controller = \"Ticket\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Models.DTOs.Tickets.Create.TicketCreateDto)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:56:03.4877", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__request_LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__request_LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__request_LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:56:03.4877", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "elapsed": "2", "parameters": "@p0='?' (DbType = Date), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Ticket\" (\"CreatedAt\", \"Description\", \"LicensesId\", \"Subject\", \"TicketStatus\", \"TicketType\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:56:03.4877", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Tickets.Create.TicketCreateResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Tickets.Create.TicketCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:56:03.4877", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.Create (Api) in 6.6964ms", "ActionName": "Api.Controllers.TicketController.Create (Api)", "ElapsedMilliseconds": 6.6964, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:56:03.4877", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.Create (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.Create (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:56:03.4877", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Ticket/CreateTicket - 200 - application/json;+charset=utf-8 7.5355ms", "ElapsedMilliseconds": 7.5355, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/CreateTicket", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:56:03.5100", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:56:03.5100", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:56:03.5100", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 0.2760ms", "ElapsedMilliseconds": 0.276, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:56:03.5172", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:56:03.5172", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:56:03.5172", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:56:03.5172", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:56:03.5172", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:56:03.5172", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:56:03.5172", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:56:03.5172", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 2.4012ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 2.4012, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:56:03.5172", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:56:03.5172", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 200 - application/json;+charset=utf-8 3.0736ms", "ElapsedMilliseconds": 3.0736, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:56:21.5268", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:56:21.5268", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:56:21.5268", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 0.7411ms", "ElapsedMilliseconds": 0.7411, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:56:21.5268", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:56:21.5268", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:56:21.5268", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:56:21.5268", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:56:21.5268", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:56:21.5268", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:56:21.5268", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:56:21.5580", "level": "INFO", "message": "Executed DbCommand (19ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "19", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:56:21.5580", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:56:21.5580", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:56:21.5617", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:56:21.5617", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:56:21.5617", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:56:21.5617", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:56:21.5617", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:56:21.5617", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 30.2652ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 30.2652, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:56:21.5617", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:56:21.5617", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 31.1878ms", "ElapsedMilliseconds": 31.1878, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:56:45.9987", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:56:45.9995", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:56:45.9995", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 0.8544ms", "ElapsedMilliseconds": 0.8544, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:56:45.9995", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:56:45.9995", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:56:45.9995", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:56:46.0117", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:56:46.0117", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 14:56:46.0319", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:56:46.0319", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:56:46.0319", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 21.937ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 21.937, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:56:46.0319", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:56:46.0319", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 25.2440ms", "ElapsedMilliseconds": 25.244, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:57:20.9841", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:57:20.9841", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:57:20.9841", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 0.7082ms", "ElapsedMilliseconds": 0.7082, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:57:20.9841", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:57:20.9841", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:57:20.9841", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:57:20.9841", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:57:20.9841", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 14:57:21.0001", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:57:21.0001", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:57:21.0001", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 3.9805ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 3.9805, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:57:21.0001", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:57:21.0001", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 4.6687ms", "ElapsedMilliseconds": 4.6687, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:57:31.6917", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:57:31.6917", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:57:31.6917", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 1.7145ms", "ElapsedMilliseconds": 1.7145, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:57:31.7117", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:57:31.7117", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:57:31.7117", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:57:31.7117", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:57:31.7117", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 14:57:31.7117", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:57:31.7117", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:57:31.7117", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 2.7379ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 2.7379, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:57:31.7117", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:57:31.7117", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 3.5272ms", "ElapsedMilliseconds": 3.5272, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:57:59.7215", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:57:59.7215", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:57:59.7215", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 1.0419ms", "ElapsedMilliseconds": 1.0419, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:57:59.7215", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:57:59.7215", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:57:59.7215", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:57:59.7215", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:57:59.7314", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:57:59.7314", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:57:59.7314", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:57:59.7314", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:57:59.7314", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:57:59.7314", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:57:59.7314", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:57:59.7314", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:57:59.7314", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:57:59.7314", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:57:59.7314", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:57:59.7314", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 10.2055ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 10.2055, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:57:59.7314", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:57:59.7314", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 11.1758ms", "ElapsedMilliseconds": 11.1758, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:58:00.7401", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:58:00.7401", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:58:00.7401", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 0.4282ms", "ElapsedMilliseconds": 0.4282, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:58:00.7401", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:58:00.7401", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:58:00.7401", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:58:00.7401", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:58:00.7401", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 14:58:00.7474", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:58:00.7474", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:58:00.7474", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 2.5967ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 2.5967, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:58:00.7474", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:58:00.7474", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 3.3432ms", "ElapsedMilliseconds": 3.3432, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:59:31.9797", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:59:31.9807", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:59:31.9807", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 1.0997ms", "ElapsedMilliseconds": 1.0997, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:59:31.9807", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:59:31.9807", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:59:31.9807", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:59:31.9807", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:59:31.9807", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 14:59:31.9807", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:59:31.9807", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:59:31.9807", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 2.4234ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 2.4234, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:59:31.9807", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:59:31.9807", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 3.1625ms", "ElapsedMilliseconds": 3.1625, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:59:39.9810", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:59:39.9810", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:59:39.9810", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 1.2882ms", "ElapsedMilliseconds": 1.2882, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:59:39.9810", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:59:39.9810", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:59:39.9810", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:59:39.9810", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:59:39.9810", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 14:59:39.9810", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:59:39.9810", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:59:39.9810", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 3.5405ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 3.5405, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:59:39.9810", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:59:39.9810", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 4.2156ms", "ElapsedMilliseconds": 4.2156, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:59:42.9044", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:59:42.9044", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:59:42.9044", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 14:59:42.9044", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 14:59:42.9044", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 14:59:42.9044", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 14:59:42.9044", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 14:59:42.9044", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 1.5586ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 1.5586, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 14:59:42.9044", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 14:59:42.9044", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 3.4978ms", "ElapsedMilliseconds": 3.4978, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 14:59:59.9854", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 14:59:59.9854", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 14:59:59.9854", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 0.8457ms", "ElapsedMilliseconds": 0.8457, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:00:00.0549", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:00:00.0549", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:00:00.0549", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:00:00.0549", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:00:00.0549", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 15:00:00.0549", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:00:00.0549", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:00:00.0549", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 4.6414ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 4.6414, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:00:00.0549", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:00:00.0549", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 5.5845ms", "ElapsedMilliseconds": 5.5845, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:01:03.0184", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 15:01:03.1611", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 15:01:03.1611", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 15:01:03.1611", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 15:01:03.1684", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 15:01:04.0151", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:01:04.1446", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 15:01:04.2469", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:01:04.2469", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 242.7557ms", "ElapsedMilliseconds": 242.7557, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:01:04.2469", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:01:04.2469", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.6027ms", "ElapsedMilliseconds": 3.6027, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:01:04.2842", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 37.3677ms", "ElapsedMilliseconds": 37.3677, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:01:04.3349", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:01:04.4838", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 148.9292ms", "ElapsedMilliseconds": 148.9292, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:01:11.4895", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:01:11.4895", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:01:11.4895", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 8.4632ms", "ElapsedMilliseconds": 8.4632, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:01:11.5038", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:01:11.5038", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:01:11.6252", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:01:11.6519", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:01:12.4348", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 15:01:12.7861", "level": "INFO", "message": "Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "15", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:01:12.8464", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:01:12.8574", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 1198.636ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 1198.636, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:01:12.8574", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:01:12.8734", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 1369.6022ms", "ElapsedMilliseconds": 1369.6022, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:01:25.0560", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:01:25.0622", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:01:25.0622", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:01:25.1225", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:01:25.1225", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetTicketTypes (Api) in 52.4873ms", "ActionName": "Api.Controllers.LicensesController.GetTicketTypes (Api)", "ElapsedMilliseconds": 52.4873, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:01:25.1225", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:01:25.1225", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/types - 200 - application/json;+charset=utf-8 67.5796ms", "ElapsedMilliseconds": 67.5796, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:01:33.0018", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:01:33.0018", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:01:33.0018", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 2.5720ms", "ElapsedMilliseconds": 2.572, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:01:33.0124", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:01:33.0124", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:01:33.0124", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:01:33.0124", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:01:33.0124", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 15:01:33.0377", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:01:33.0377", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:01:33.0377", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 23.2755ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 23.2755, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:01:33.0377", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:01:33.0377", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 26.2892ms", "ElapsedMilliseconds": 26.2892, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:01:33.8600", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:01:33.8600", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Customer)", "Reason": "These requirements were not met:\r\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-03 15:01:33.8600", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-03 15:01:33.8600", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Product/GetAllProducts - 401 0 - 5.8065ms", "ElapsedMilliseconds": 5.8065, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:01:36.8409", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:01:36.8409", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:01:36.8409", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:01:36.8409", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:01:36.8409", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 15:01:36.8409", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:01:36.8409", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:01:36.8409", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 14.0737ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 14.0737, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:01:36.8409", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:01:36.8409", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 17.8761ms", "ElapsedMilliseconds": 17.8761, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:01:43.6117", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:01:43.6117", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:01:43.6117", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:01:43.6117", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 15:01:43.6117", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:01:43.6117", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:01:43.6117", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 6.7058ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 6.7058, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:01:43.6117", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:01:43.6200", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 8.3685ms", "ElapsedMilliseconds": 8.3685, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:01:57.9884", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:01:57.9884", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:01:57.9884", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 1.9944ms", "ElapsedMilliseconds": 1.9944, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:01:57.9959", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:01:57.9959", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:01:57.9959", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:01:57.9959", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:01:57.9959", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 15:01:57.9959", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:01:57.9959", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:01:57.9959", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 9.812ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 9.812, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:01:57.9959", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:01:57.9959", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 11.7976ms", "ElapsedMilliseconds": 11.7976, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:02:35.0207", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:02:35.0207", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:02:35.0207", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 2.4827ms", "ElapsedMilliseconds": 2.4827, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:02:35.0406", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:02:35.0406", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:02:35.0406", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:02:35.0406", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:02:35.0439", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 15:02:35.0439", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:02:35.0439", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:02:35.0439", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 5.3759ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 5.3759, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:02:35.0439", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:02:35.0439", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 6.4479ms", "ElapsedMilliseconds": 6.4479, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:03:03.3759", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:03:03.3759", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Customer)", "Reason": "These requirements were not met:\r\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-03 15:03:03.3759", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-03 15:03:03.3759", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 401 0 - 9.7476ms", "ElapsedMilliseconds": 9.7476, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:03:16.9910", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:03:16.9910", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:03:16.9910", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 2.0765ms", "ElapsedMilliseconds": 2.0765, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:03:16.9981", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:03:16.9981", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:03:16.9981", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:03:16.9981", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:03:16.9981", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 15:03:16.9981", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:03:16.9981", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:03:16.9981", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 6.2799ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 6.2799, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:03:16.9981", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:03:16.9981", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 7.5016ms", "ElapsedMilliseconds": 7.5016, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:03:21.4827", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:03:21.4827", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:03:21.4827", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:03:21.4827", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:03:21.4827", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 15:03:21.4827", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:03:21.4827", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:03:21.4827", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 8.5266ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 8.5266, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:03:21.4827", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:03:21.4827", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 10.8090ms", "ElapsedMilliseconds": 10.809, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:03:33.9895", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:03:33.9895", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:03:33.9895", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 1.9723ms", "ElapsedMilliseconds": 1.9723, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:03:34.0060", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:03:34.0060", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:03:34.0060", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:03:34.0060", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:03:34.0060", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 15:03:34.0123", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:03:34.0123", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:03:34.0123", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 5.9773ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 5.9773, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:03:34.0123", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:03:34.0123", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 7.0865ms", "ElapsedMilliseconds": 7.0865, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:18:35.2406", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 15:18:35.4035", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 15:18:35.4035", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 15:18:35.4035", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 15:18:35.4035", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 15:18:36.2551", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:18:36.3714", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 15:18:36.4537", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 201.3690ms", "ElapsedMilliseconds": 201.369, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:18:36.4537", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:18:36.4537", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.0400ms", "ElapsedMilliseconds": 3.04, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:18:36.4537", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:18:36.4911", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 29.9930ms", "ElapsedMilliseconds": 29.993, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:18:36.5375", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:18:36.6571", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 119.6506ms", "ElapsedMilliseconds": 119.6506, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:18:40.4275", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:18:40.4275", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:18:40.4275", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 5.2530ms", "ElapsedMilliseconds": 5.253, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:18:40.4630", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:18:40.4650", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:18:40.5614", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:18:40.5767", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:18:41.7118", "level": "INFO", "message": "Executed DbCommand (43ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "43", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:18:41.7990", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:18:41.8111", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 1230.2559ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 1230.2559, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:18:41.8111", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:18:41.8111", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 1357.4033ms", "ElapsedMilliseconds": 1357.4033, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:18:46.0222", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:18:46.0222", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:18:46.0222", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 1.9900ms", "ElapsedMilliseconds": 1.99, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:18:46.0222", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:18:46.0222", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:18:46.0222", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:18:46.0415", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:18:46.1075", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:18:46.1322", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:18:46.1624", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:18:46.2512", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "3", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:18:46.2512", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:18:46.2621", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:18:46.2621", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:18:46.2621", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:18:46.2621", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:18:46.2621", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:18:46.2621", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:18:46.2621", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 233.0003ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 233.0003, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:18:46.2621", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:18:46.2621", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 241.0967ms", "ElapsedMilliseconds": 241.0967, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:18:50.2093", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:18:50.2093", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:18:50.2093", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 2.8742ms", "ElapsedMilliseconds": 2.8742, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:18:50.6007", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:18:50.6007", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:18:50.6090", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:18:50.6090", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:18:50.6334", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 15:18:50.6547", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:18:50.6547", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:18:50.6547", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 45.1127ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 45.1127, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:18:50.6547", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:18:50.6547", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 55.8627ms", "ElapsedMilliseconds": 55.8627, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:19:31.5438", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:19:31.5438", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:19:31.5438", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 6.7555ms", "ElapsedMilliseconds": 6.7555, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:19:31.5438", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:19:31.5438", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:19:31.5587", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:19:31.5587", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:19:31.5587", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 15:19:31.5587", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:19:31.5587", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:19:31.5587", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 12.7013ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 12.7013, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:19:31.5587", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:19:31.5587", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 14.7807ms", "ElapsedMilliseconds": 14.7807, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:20:04.6973", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:20:04.7033", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:20:04.7033", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 8.2533ms", "ElapsedMilliseconds": 8.2533, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:20:04.7191", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:20:04.7191", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:20:04.7191", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:20:04.7191", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:20:04.7191", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 15:20:04.7191", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:20:04.7191", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:20:04.7191", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 14.925ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 14.925, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:20:04.7191", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:20:04.7191", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 18.3937ms", "ElapsedMilliseconds": 18.3937, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:20:18.9917", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:20:18.9917", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:20:18.9917", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 1.6184ms", "ElapsedMilliseconds": 1.6184, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:20:18.9987", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:20:18.9987", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:20:18.9987", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:20:18.9987", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:20:18.9987", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 15:20:18.9987", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:20:18.9987", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:20:18.9987", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 9.0686ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 9.0686, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:20:18.9987", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:20:18.9987", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 10.9432ms", "ElapsedMilliseconds": 10.9432, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:20:34.4630", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:20:34.4638", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:20:34.4638", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 1.4477ms", "ElapsedMilliseconds": 1.4477, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:20:34.4638", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:20:34.4638", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:20:34.4638", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:20:34.4638", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:20:34.4638", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 15:20:34.4801", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:20:34.4801", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:20:34.4801", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 7.1032ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 7.1032, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:20:34.4801", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:20:34.4801", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 8.1177ms", "ElapsedMilliseconds": 8.1177, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:20:57.0540", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:20:57.0540", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:20:57.0540", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/getbyid - 204 - - 1.3150ms", "ElapsedMilliseconds": 1.315, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:20:57.0633", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:20:57.0633", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:20:57.0633", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:20:57.0633", "level": "INFO", "message": "Route matched with {action = \"GetTicketById\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketById() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketById\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketById()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:20:57.0633", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nWHERE t.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:20:57.0633", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetById.TicketGetByIDResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:20:57.0633", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketById (Api) in 4.7922ms", "ActionName": "Api.Controllers.TicketController.GetTicketById (Api)", "ElapsedMilliseconds": 4.7922, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:20:57.0633", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:20:57.0633", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/getbyid - 200 - application/json;+charset=utf-8 6.2978ms", "ElapsedMilliseconds": 6.2978, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:20:57.9315", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:20:57.9315", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:20:57.9315", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Ticket/types - 204 - - 0.4074ms", "ElapsedMilliseconds": 0.4074, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:20:57.9402", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:20:57.9402", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:20:57.9402", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:20:57.9402", "level": "INFO", "message": "Route matched with {action = \"GetTicketTypes\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetTicketTypes\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetTicketTypes()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:20:57.9402", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:20:57.9402", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetTicketTypes (Api) in 2.7727ms", "ActionName": "Api.Controllers.TicketController.GetTicketTypes (Api)", "ElapsedMilliseconds": 2.7727, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:20:57.9402", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetTicketTypes (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetTicketTypes (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:20:57.9402", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Ticket/types - 200 - application/json;+charset=utf-8 5.5892ms", "ElapsedMilliseconds": 5.5892, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Ticket/types", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:21:09.6835", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:21:09.6835", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:21:09.6835", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 1.1401ms", "ElapsedMilliseconds": 1.1401, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:21:09.6835", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:21:09.6835", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:21:09.6835", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:21:09.6835", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:21:09.6978", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:09.6978", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:09.6978", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:09.6978", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:09.6978", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:09.6978", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:09.6978", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:09.7173", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:09.7173", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:09.7173", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:09.7173", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:21:09.7173", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 28.1648ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 28.1648, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:21:09.7173", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:21:09.7173", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 29.1170ms", "ElapsedMilliseconds": 29.117, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:21:13.3734", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:21:13.3734", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:21:13.3734", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Product/GetAllProducts - 204 - - 2.2832ms", "ElapsedMilliseconds": 2.2832, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:21:13.3895", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:21:13.3895", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:21:13.3895", "level": "INFO", "message": "Executing endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:21:13.3895", "level": "INFO", "message": "Route matched with {action = \"GetAll\", controller = \"Product\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAll() on controller ProductController (Api).", "RouteData": "{action = \"GetAll\", controller = \"Product\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAll()", "Controller": "ProductController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:21:13.3895", "level": "ERROR", "message": "GetAll Products started" }
{ "time": "2024-04-03 15:21:13.3895", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:13.3895", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Product.GetAll.ProductGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:21:13.3895", "level": "INFO", "message": "Executed action ProductController.GetAll (Api) in 6.4354ms", "ActionName": "ProductController.GetAll (Api)", "ElapsedMilliseconds": 6.4354, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:21:13.3895", "level": "INFO", "message": "Executed endpoint 'ProductController.GetAll (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"ProductController.GetAll (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:21:13.3895", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Product/GetAllProducts - 200 - application/json;+charset=utf-8 7.5600ms", "ElapsedMilliseconds": 7.56, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Product/GetAllProducts", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:21:53.6462", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/Buy - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/Buy", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:21:53.6462", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:21:53.6462", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/Buy - 204 - - 1.0520ms", "ElapsedMilliseconds": 1.052, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/Buy", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:21:53.7194", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Licenses/Buy - application/json 44", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 44, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/Buy", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:21:53.7194", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:21:53.7194", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.CreateLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.CreateLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:21:53.7325", "level": "INFO", "message": "Route matched with {action = \"CreateLicenses\", controller = \"Licenses\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateLicenses(Models.DTOs.Licenses.Create.LicensesCreateDto) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"CreateLicenses\", controller = \"Licenses\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateLicenses(Models.DTOs.Licenses.Create.LicensesCreateDto)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:21:53.8369", "level": "INFO", "message": "Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nINSERT INTO \"Licenses\" (\"ActivationDate\", \"ExpireDate\", \"LicenseStatus\", \"ProductId\", \"UserCount\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5)\r\nRETURNING \"Id\";", "elapsed": "10", "parameters": "@p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "INSERT INTO \"Licenses\" (\"ActivationDate\", \"ExpireDate\", \"LicenseStatus\", \"ProductId\", \"UserCount\", \"UserId\")\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5)\r\nRETURNING \"Id\";", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:53.8577", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.Create.LicensesCreateResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.Create.LicensesCreateResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:21:53.8577", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.CreateLicenses (Api) in 126.5242ms", "ActionName": "Api.Controllers.LicensesController.CreateLicenses (Api)", "ElapsedMilliseconds": 126.5242, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:21:53.8577", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.CreateLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.CreateLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:21:53.8577", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Licenses/Buy - 200 - application/json;+charset=utf-8 146.2421ms", "ElapsedMilliseconds": 146.2421, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/Buy", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:21:53.8864", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:21:53.8864", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:21:53.8864", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 0.6424ms", "ElapsedMilliseconds": 0.6424, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:21:53.9245", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:21:53.9245", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:21:53.9245", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:21:53.9245", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:21:53.9245", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:53.9245", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:53.9395", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:53.9395", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "2", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:53.9395", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:53.9522", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:53.9522", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:53.9737", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:53.9737", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:53.9799", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:53.9799", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:21:53.9799", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:21:53.9799", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 63.6445ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 63.6445, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:21:53.9799", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:21:53.9799", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 64.5896ms", "ElapsedMilliseconds": 64.5896, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:25:25.2492", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 15:25:25.3893", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 15:25:25.3893", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 15:25:25.3893", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 15:25:25.3893", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 15:25:26.1493", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:25:26.2704", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 15:25:26.3628", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 216.5504ms", "ElapsedMilliseconds": 216.5504, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:25:26.3628", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:25:26.3628", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:25:26.3708", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 4.6616ms", "ElapsedMilliseconds": 4.6616, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:25:26.4006", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 36.9113ms", "ElapsedMilliseconds": 36.9113, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:25:26.4465", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:25:26.6695", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 223.0090ms", "ElapsedMilliseconds": 223.009, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:25:48.7346", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Ticket/getbyid - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:25:48.8312", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-03 15:25:48.8312", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-03 15:25:48.8312", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Ticket/getbyid - 401 0 - 102.7487ms", "ElapsedMilliseconds": 102.7487, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/getbyid", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:25:56.9331", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:25:56.9331", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:25:56.9703", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:25:58.2490", "level": "INFO", "message": "Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"UserId\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "19", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"UserId\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:25:58.3119", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:25:58.3296", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 1353.0704ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 1353.0704, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:25:58.3296", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:25:58.3479", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 1414.9088ms", "ElapsedMilliseconds": 1414.9088, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:26:34.3022", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Ticket/getAllTickets - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:26:34.3121", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:26:34.3121", "level": "INFO", "message": "Route matched with {action = \"GetAllTickets\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets() on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetAllTickets\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllTickets()", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:26:34.4012", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"UserId\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Subject\", t.\"Description\", t.\"UserId\", t.\"TicketStatus\", u.\"Email\"\r\nFROM \"Ticket\" AS t\r\nINNER JOIN \"User\" AS u ON t.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:26:34.4012", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:26:34.4012", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetAllTickets (Api) in 90.2166ms", "ActionName": "Api.Controllers.TicketController.GetAllTickets (Api)", "ElapsedMilliseconds": 90.2166, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:26:34.4012", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetAllTickets (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetAllTickets (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:26:34.4012", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Ticket/getAllTickets - 200 - application/json;+charset=utf-8 101.4154ms", "ElapsedMilliseconds": 101.4154, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/getAllTickets", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:30:30.8394", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 15:30:30.9777", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 15:30:30.9816", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 15:30:30.9816", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 15:30:30.9816", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 15:30:31.9231", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:30:32.0413", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 15:30:32.1264", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 210.0552ms", "ElapsedMilliseconds": 210.0552, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:30:32.1264", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:30:32.1264", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:30:32.1264", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.6428ms", "ElapsedMilliseconds": 2.6428, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:30:32.1602", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 30.4309ms", "ElapsedMilliseconds": 30.4309, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:30:32.2106", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:30:32.3596", "level": "ERROR", "message": "An unhandled exception has occurred while executing the request.", "exception": "Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - Api.Controllers.TicketController.GetProductPagingData (Api). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-03 15:30:32.3596", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 500 - text/plain;+charset=utf-8 154.4117ms", "ElapsedMilliseconds": 154.4117, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:30:42.6057", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 15:30:42.8412", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 15:30:42.8412", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 15:30:42.8623", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 15:30:42.8623", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 15:30:43.4636", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:30:43.5943", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 15:30:43.6676", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 210.6081ms", "ElapsedMilliseconds": 210.6081, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:30:43.6676", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:30:43.6676", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:30:43.6676", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.9374ms", "ElapsedMilliseconds": 3.9374, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:30:43.7130", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 34.2391ms", "ElapsedMilliseconds": 34.2391, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:30:43.7706", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:30:43.8940", "level": "ERROR", "message": "An unhandled exception has occurred while executing the request.", "exception": "Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - Api.Controllers.TicketController.GetProductPagingData (Api). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)", "EventId": 1, "EventName": "UnhandledException" }
{ "time": "2024-04-03 15:30:43.9020", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 500 - text/plain;+charset=utf-8 131.3849ms", "ElapsedMilliseconds": 131.3849, "StatusCode": 500, "ContentType": "text/plain; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:31:24.1388", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 15:31:24.5461", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 15:31:24.5461", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 15:31:24.5613", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 15:31:24.5613", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 15:31:25.1542", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:31:25.3199", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 15:31:25.4214", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:31:25.4330", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 277.7915ms", "ElapsedMilliseconds": 277.7915, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:31:25.4633", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:31:25.4659", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.4568ms", "ElapsedMilliseconds": 2.4568, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:31:25.4841", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 62.8262ms", "ElapsedMilliseconds": 62.8262, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:31:25.5273", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:31:25.6818", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 154.5906ms", "ElapsedMilliseconds": 154.5906, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:31:36.0608", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 1 }
{ "time": "2024-04-03 15:31:36.1347", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:31:36.1702", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:31:37.9536", "level": "INFO", "message": "Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "29", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:31:38.0364", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-03 15:31:38.0364", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-03 15:31:38.0954", "level": "INFO", "message": "Executed DbCommand (7ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "7", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:31:38.2005", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:31:38.2233", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 2046.634ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 2046.634, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:31:38.2233", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:31:38.2360", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5 - 200 - application/json;+charset=utf-8 2175.2766ms", "ElapsedMilliseconds": 2175.2766, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 2 }
{ "time": "2024-04-03 15:33:07.0961", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 15:33:07.2414", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 15:33:07.2414", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 15:33:07.2475", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 15:33:07.2475", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 15:33:08.2413", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:33:08.3605", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 15:33:08.4417", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:33:08.4417", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 213.7656ms", "ElapsedMilliseconds": 213.7656, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:33:08.4417", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:33:08.4417", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.2277ms", "ElapsedMilliseconds": 3.2277, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:33:08.4860", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 44.4407ms", "ElapsedMilliseconds": 44.4407, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:33:08.5398", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:33:08.7601", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 220.3178ms", "ElapsedMilliseconds": 220.3178, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:33:17.8319", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 1 }
{ "time": "2024-04-03 15:33:17.8980", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:33:17.9274", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Ticket\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters) on controller Api.Controllers.TicketController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Ticket\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters)", "Controller": "Api.Controllers.TicketController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:33:19.2729", "level": "INFO", "message": "Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "18", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:33:19.3380", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-03 15:33:19.3380", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-03 15:33:19.3898", "level": "INFO", "message": "Executed DbCommand (11ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "11", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:33:19.4722", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Ticket\" AS t", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Ticket\" AS t", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:33:19.4722", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT t.\"Id\", t.\"CreatedAt\", t.\"Description\", t.\"LicensesId\", t.\"Subject\", t.\"TicketStatus\", t.\"TicketType\", t.\"UserId\"\r\nFROM \"Ticket\" AS t\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:33:19.4879", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:33:19.5678", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Tickets.GetAll.TicketGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:33:19.5916", "level": "INFO", "message": "Executed action Api.Controllers.TicketController.GetProductPagingData (Api) in 1658.6173ms", "ActionName": "Api.Controllers.TicketController.GetProductPagingData (Api)", "ElapsedMilliseconds": 1658.6173, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:33:19.5916", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.TicketController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.TicketController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:33:19.6088", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Ticket/PaginationTicket?PageNumber=1&PageSize=5 - 200 - application/json;+charset=utf-8 1776.9086ms", "ElapsedMilliseconds": 1776.9086, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Ticket/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 2 }
{ "time": "2024-04-03 15:52:35.3807", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 15:52:35.7752", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 15:52:35.7805", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 15:52:35.7805", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 15:52:35.7805", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 15:52:37.0131", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:52:37.2354", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 15:52:37.3723", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 369.7381ms", "ElapsedMilliseconds": 369.7381, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:52:37.3723", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:52:37.3723", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.7386ms", "ElapsedMilliseconds": 3.7386, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:52:37.3723", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:52:37.4406", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 57.5723ms", "ElapsedMilliseconds": 57.5723, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:52:37.5060", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:52:37.7114", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 205.4723ms", "ElapsedMilliseconds": 205.4723, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:53:24.3604", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=2 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=2", "EventId": 1 }
{ "time": "2024-04-03 15:53:24.3604", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:53:24.3604", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=2 - 204 - - 9.3959ms", "ElapsedMilliseconds": 9.3959, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=2", "EventId": 2 }
{ "time": "2024-04-03 15:53:24.3787", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=2 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=2", "EventId": 1 }
{ "time": "2024-04-03 15:53:24.3787", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:53:24.4982", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:53:24.5303", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:53:25.9485", "level": "INFO", "message": "Executed DbCommand (55ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "55", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:53:26.0477", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:53:26.0869", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:53:26.1021", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:53:26.1169", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 1581.5146ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 1581.5146, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:53:26.1169", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:53:26.1299", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=2 - 200 - application/json;+charset=utf-8 1751.2924ms", "ElapsedMilliseconds": 1751.2924, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=2", "EventId": 2 }
{ "time": "2024-04-03 15:53:35.8800", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=2 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=2", "EventId": 1 }
{ "time": "2024-04-03 15:53:35.8800", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:53:35.8800", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=2 - 204 - - 2.1637ms", "ElapsedMilliseconds": 2.1637, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=2", "EventId": 2 }
{ "time": "2024-04-03 15:53:35.8933", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=2 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=2", "EventId": 1 }
{ "time": "2024-04-03 15:53:35.8933", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:53:35.8933", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:53:35.8933", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:53:35.9604", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:53:35.9642", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:53:35.9642", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:53:35.9642", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:53:35.9642", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 68.252ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 68.252, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:53:35.9642", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:53:35.9642", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=2 - 200 - application/json;+charset=utf-8 75.4490ms", "ElapsedMilliseconds": 75.449, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=2", "EventId": 2 }
{ "time": "2024-04-03 15:53:40.0755", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:53:40.0755", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:53:40.0755", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 1.0922ms", "ElapsedMilliseconds": 1.0922, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:53:40.1041", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:53:40.1045", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:53:40.1045", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:53:40.1045", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:53:40.1382", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:53:40.1382", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:53:40.1382", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:53:40.1513", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:53:40.2335", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "3", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:53:40.2335", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:53:40.2335", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:53:40.2465", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:53:40.2465", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:53:40.2465", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:53:40.2465", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:53:40.2465", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:53:40.2465", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 145.6954ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 145.6954, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:53:40.2465", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:53:40.2465", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 152.2717ms", "ElapsedMilliseconds": 152.2717, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:53:41.9138", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 15:53:41.9138", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:53:41.9138", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 2.3239ms", "ElapsedMilliseconds": 2.3239, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 15:53:41.9138", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 15:53:41.9229", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:53:41.9229", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:53:41.9229", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:53:41.9229", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:53:41.9229", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:53:41.9329", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:53:41.9329", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:53:41.9329", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 10.2429ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 10.2429, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:53:41.9329", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:53:41.9329", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 11.5874ms", "ElapsedMilliseconds": 11.5874, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 15:54:56.0204", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 15:54:56.0204", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:54:56.0204", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 4.8036ms", "ElapsedMilliseconds": 4.8036, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 15:54:56.0327", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 15:54:56.0327", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:54:56.0327", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:54:56.0327", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:54:56.0327", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:54:56.0327", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:54:56.0419", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:54:56.0419", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:54:56.0419", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 9.0542ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 9.0542, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:54:56.0419", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:54:56.0419", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 9.8330ms", "ElapsedMilliseconds": 9.833, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 15:56:09.7377", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 15:56:09.8792", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 15:56:09.8792", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 15:56:09.8792", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 15:56:09.8792", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 15:56:10.4231", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:56:10.5442", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 15:56:10.6216", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 207.0062ms", "ElapsedMilliseconds": 207.0062, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:56:10.6216", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:56:10.6216", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:56:10.6370", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 12.2837ms", "ElapsedMilliseconds": 12.2837, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:56:10.6690", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 42.8306ms", "ElapsedMilliseconds": 42.8306, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:56:10.7243", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:56:10.9277", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 203.4161ms", "ElapsedMilliseconds": 203.4161, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:58:49.1202", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:58:49.1350", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:58:49.1350", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Auth/Login - 204 - - 17.3272ms", "ElapsedMilliseconds": 17.3272, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:58:49.1455", "level": "INFO", "message": "Request starting HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - application/json 64", "Protocol": "HTTP/1.1", "Method": "POST", "ContentType": "application/json", "ContentLength": 64, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:58:49.1455", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:58:49.2168", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:58:49.2568", "level": "INFO", "message": "Route matched with {action = \"Login\", controller = \"Auth\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto) on controller Api.Controllers.AuthController (Api).", "RouteData": "{action = \"Login\", controller = \"Auth\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Models.DTOs.User.Login.UserLoginDto)", "Controller": "Api.Controllers.AuthController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:58:50.4987", "level": "INFO", "message": "Executed DbCommand (54ms) [Parameters=[@__ToLower_0='?'], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "elapsed": "54", "parameters": "@__ToLower_0='?'", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Email\" = @__ToLower_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:50.5965", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "3", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT r.\"Id\", r.\"RoleName\"\r\nFROM \"Roles\" AS r\r\nWHERE r.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:50.6453", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__user_Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__user_Id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:50.7325", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "elapsed": "2", "parameters": "@p9='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"User\" SET \"CompanyName\" = @p0, \"Email\" = @p1, \"FirstName\" = @p2, \"LastName\" = @p3, \"Password\" = @p4, \"PhoneNumber\" = @p5, \"RefreshToken\" = @p6, \"RolesId\" = @p7, \"Status\" = @p8\r\nWHERE \"Id\" = @p9;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:50.7419", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.Login.Tokens'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.Login.Tokens", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:58:50.7482", "level": "INFO", "message": "Executed action Api.Controllers.AuthController.Login (Api) in 1487.372ms", "ActionName": "Api.Controllers.AuthController.Login (Api)", "ElapsedMilliseconds": 1487.372, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:58:50.7482", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.AuthController.Login (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.AuthController.Login (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:58:50.7645", "level": "INFO", "message": "Request finished HTTP/1.1 POST http://192.168.0.104:5274/api/Auth/Login - 200 - application/json;+charset=utf-8 1619.0407ms", "ElapsedMilliseconds": 1619.0407, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "POST", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Auth/Login", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:58:50.7831", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:58:50.7831", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:58:50.7831", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 2.2006ms", "ElapsedMilliseconds": 2.2006, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:58:50.7990", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:58:50.7990", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:58:50.7990", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 1.7178ms", "ElapsedMilliseconds": 1.7178, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:58:50.8292", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:58:50.8292", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:58:50.9059", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:58:50.9059", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:58:50.9547", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:50.9547", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:58:50.9547", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 48.7506ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 48.7506, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:58:50.9547", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:58:50.9547", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 128.4739ms", "ElapsedMilliseconds": 128.4739, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:58:50.9547", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:58:50.9547", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:58:50.9741", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:58:50.9741", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:58:50.9741", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:58:50.9741", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:58:50.9741", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 0.4642ms", "ElapsedMilliseconds": 0.4642, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:58:50.9923", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:58:51.0335", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:58:51.0335", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:51.0335", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:58:51.0335", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 59.9654ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 59.9654, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:58:51.0335", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:58:51.0335", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 64.7003ms", "ElapsedMilliseconds": 64.7003, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:58:51.0335", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:58:51.0335", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:58:51.0447", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:51.0447", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:51.0725", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:58:51.0740", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 37.626ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 37.626, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:58:51.0740", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:58:51.0740", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 200 - application/json;+charset=utf-8 82.1494ms", "ElapsedMilliseconds": 82.1494, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:58:56.7445", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:58:56.7465", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:58:56.7465", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 2.4888ms", "ElapsedMilliseconds": 2.4888, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:58:56.7465", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 15:58:56.7465", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:58:56.7465", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:58:56.7465", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:58:56.7707", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:56.7816", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:56.7935", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:56.7935", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:56.8244", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "3", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:56.8244", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:56.8244", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:56.8244", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:56.8244", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:56.8434", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:56.8434", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:56.8434", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:58:56.8434", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 96.9378ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 96.9378, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:58:56.8434", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:58:56.8434", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 102.1364ms", "ElapsedMilliseconds": 102.1364, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 15:58:58.3608", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 15:58:58.3616", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:58:58.3616", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 1.3287ms", "ElapsedMilliseconds": 1.3287, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 15:58:58.3616", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 15:58:58.3616", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 15:58:58.3616", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 15:58:58.3616", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 15:58:58.3838", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:58.3946", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:58.4030", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 15:58:58.4030", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 15:58:58.4030", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 35.9771ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 35.9771, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 15:58:58.4030", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 15:58:58.4030", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 41.4575ms", "ElapsedMilliseconds": 41.4575, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:02:51.0140", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:02:51.0140", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:02:51.0140", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 8.8381ms", "ElapsedMilliseconds": 8.8381, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:02:51.0140", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:02:51.0140", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:02:51.0140", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:02:51.0140", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:02:51.0362", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:02:51.0362", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:02:51.0438", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:02:51.0438", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:02:51.0438", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 16.236ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 16.236, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:02:51.0438", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:02:51.0438", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 17.9446ms", "ElapsedMilliseconds": 17.9446, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:02:54.0108", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:02:54.0108", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:02:54.0159", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:02:54.0159", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:02:54.0159", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:02:54.0322", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:02:54.0322", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:02:54.0322", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:02:54.0322", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 21.4973ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 21.4973, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:02:54.0322", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:02:54.0322", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 27.5992ms", "ElapsedMilliseconds": 27.5992, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:03:02.0251", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:03:02.0300", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:03:02.0300", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 7.7368ms", "ElapsedMilliseconds": 7.7368, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:03:02.0573", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:03:02.0573", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:03:02.0573", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:03:02.0573", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:03:02.0631", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:03:02.0631", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:03:02.0631", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:03:02.0631", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:03:02.0631", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 13.4445ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 13.4445, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:03:02.0631", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:03:02.0631", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 14.7084ms", "ElapsedMilliseconds": 14.7084, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:03:31.0211", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:03:31.0211", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:03:31.0613", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 4.6742ms", "ElapsedMilliseconds": 4.6742, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:03:31.0884", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:03:31.0888", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:03:31.0888", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:03:31.0888", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:03:31.0888", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:03:31.0888", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:03:31.0888", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:03:31.0888", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:03:31.0888", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 12.6514ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 12.6514, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:03:31.0888", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:03:31.0888", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 14.1800ms", "ElapsedMilliseconds": 14.18, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:03:48.0214", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:03:48.0214", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:03:48.0214", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 1.0974ms", "ElapsedMilliseconds": 1.0974, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:03:48.0281", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:03:48.0281", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:03:48.0281", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:03:48.0281", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:03:48.0281", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:03:48.0281", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:03:48.0281", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:03:48.0281", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:03:48.0281", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 10.8711ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 10.8711, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:03:48.0281", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:03:48.0281", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 11.7579ms", "ElapsedMilliseconds": 11.7579, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:04:01.0208", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:04:01.0208", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:04:01.0208", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 1.3376ms", "ElapsedMilliseconds": 1.3376, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:04:01.0425", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:04:01.0425", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:04:01.0435", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:04:01.0435", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:04:01.0716", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:04:01.0745", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:04:01.0745", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:04:01.0745", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:04:01.0745", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 34.1172ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 34.1172, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:04:01.0745", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:04:01.0745", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 35.8028ms", "ElapsedMilliseconds": 35.8028, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:04:50.6783", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:04:50.6847", "level": "INFO", "message": "Authorization failed. These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "Reason": "These requirements were not met:\r\nClaimsAuthorizationRequirement:Claim.Type=http://schemas.microsoft.com/ws/2008/06/identity/claims/role and Claim.Value is one of the following values: (Customer)", "EventId": 2, "EventName": "UserAuthorizationFailed" }
{ "time": "2024-04-03 16:04:50.6847", "level": "INFO", "message": "AuthenticationScheme: Bearer was challenged.", "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" }
{ "time": "2024-04-03 16:04:50.6847", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 401 0 - 12.1485ms", "ElapsedMilliseconds": 12.1485, "StatusCode": 401, "ContentType": null, "ContentLength": 0, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:08:39.5555", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:08:39.5610", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:08:39.5857", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 31.3198ms", "ElapsedMilliseconds": 31.3198, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:08:39.6056", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:08:39.6056", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:08:39.6056", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:08:39.6056", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:08:39.6056", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "3", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:08:39.6056", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:08:39.6212", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:08:39.6212", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:08:39.6212", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 14.8522ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 14.8522, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:08:39.6212", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:08:39.6212", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 16.5155ms", "ElapsedMilliseconds": 16.5155, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:08:46.0139", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:08:46.0139", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:08:46.0139", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 0.8407ms", "ElapsedMilliseconds": 0.8407, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:08:46.0139", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:08:46.0139", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:08:46.0139", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:08:46.0139", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:08:46.0139", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:08:46.0270", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:08:46.0270", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:08:46.0270", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:08:46.0270", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 8.0613ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 8.0613, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:08:46.0270", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:08:46.0270", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 8.9267ms", "ElapsedMilliseconds": 8.9267, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:09:07.0259", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:09:07.0395", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:07.0395", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 14.8807ms", "ElapsedMilliseconds": 14.8807, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:09:07.0655", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:09:07.0655", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:07.0655", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:09:07.0655", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:09:07.0942", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:07.0942", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:07.0942", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:07.0942", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:09:07.0942", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 33.1157ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 33.1157, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:09:07.0942", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:09:07.0942", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 35.0821ms", "ElapsedMilliseconds": 35.0821, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:09:13.0227", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:09:13.0227", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:13.0227", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 1.3621ms", "ElapsedMilliseconds": 1.3621, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:09:13.0267", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:09:13.0267", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:13.0267", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:09:13.0267", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 1.1017ms", "ElapsedMilliseconds": 1.1017, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:09:13.0267", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:13.0267", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:09:13.0267", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:09:13.0267", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:13.0267", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:13.0267", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:13.0267", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:09:13.0267", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 11.7607ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 11.7607, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:09:13.0267", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:09:13.0267", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 12.8612ms", "ElapsedMilliseconds": 12.8612, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:09:13.0462", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:09:13.0462", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:13.0462", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:09:13.0462", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:09:13.0462", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:13.0462", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:13.0462", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:13.0462", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:09:13.0462", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 10.5285ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 10.5285, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:09:13.0573", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:09:13.0573", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 11.3264ms", "ElapsedMilliseconds": 11.3264, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:09:27.0681", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:09:27.0681", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:09:27.0681", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:27.0681", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:27.0681", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 1.5579ms", "ElapsedMilliseconds": 1.5579, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:09:27.0681", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 1.3740ms", "ElapsedMilliseconds": 1.374, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:09:27.1707", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:09:27.1707", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:09:27.1707", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:27.1707", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:27.1707", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:09:27.1707", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:09:27.1707", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:09:27.1707", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:09:27.1707", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:27.1707", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:27.1832", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:27.1832", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:09:27.1832", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 11.6333ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 11.6333, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:09:27.1832", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:09:27.1832", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 13.2116ms", "ElapsedMilliseconds": 13.2116, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:09:27.1832", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:27.1832", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:09:27.1832", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 24.6099ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 24.6099, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:09:27.1832", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:09:27.1832", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 26.2923ms", "ElapsedMilliseconds": 26.2923, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:09:33.4168", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:09:33.4191", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:09:33.4191", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:33.4191", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:33.4191", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 0.3093ms", "ElapsedMilliseconds": 0.3093, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:09:33.4191", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 2.6099ms", "ElapsedMilliseconds": 2.6099, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:09:33.4344", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:09:33.4344", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:33.4344", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:09:33.4344", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:33.4344", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:09:33.4344", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:09:33.4344", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:09:33.4344", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:09:33.4344", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:33.4344", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:33.4344", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:09:33.4344", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 4.1959ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 4.1959, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:09:33.4344", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:09:33.4344", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 4.6304ms", "ElapsedMilliseconds": 4.6304, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:09:33.4344", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:33.4344", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:33.4344", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:09:33.4344", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 8.2397ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 8.2397, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:09:33.4344", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:09:33.4344", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 9.1714ms", "ElapsedMilliseconds": 9.1714, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:09:44.0142", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:09:44.0142", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:09:44.0142", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:44.0142", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:44.0142", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 0.4650ms", "ElapsedMilliseconds": 0.465, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:09:44.0142", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 1.4306ms", "ElapsedMilliseconds": 1.4306, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:09:44.0142", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:09:44.0142", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:44.0142", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:09:44.0142", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:09:44.0142", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:44.0142", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:09:44.0142", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:09:44.0142", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:09:44.0307", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:44.0307", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:44.0307", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:09:44.0307", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 8.5258ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 8.5258, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:09:44.0307", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:09:44.0307", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 9.9274ms", "ElapsedMilliseconds": 9.9274, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:09:44.0307", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:44.0307", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:44.0307", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:09:44.0307", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 16.3691ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 16.3691, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:09:44.0307", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:09:44.0307", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 17.3478ms", "ElapsedMilliseconds": 17.3478, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:09:47.0181", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:09:47.0181", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:47.0181", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:09:47.0181", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:47.0181", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:09:47.0181", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:09:47.0181", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:09:47.0181", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:09:47.0181", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:47.0277", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:47.0277", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:09:47.0277", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 7.5346ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 7.5346, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:09:47.0277", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:09:47.0277", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 8.5722ms", "ElapsedMilliseconds": 8.5722, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:09:47.0277", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:47.0277", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:47.0277", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:09:47.0277", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 13.184ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 13.184, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:09:47.0277", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:09:47.0277", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 15.9083ms", "ElapsedMilliseconds": 15.9083, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:09:52.1319", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:09:52.1319", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:52.1319", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 1.4916ms", "ElapsedMilliseconds": 1.4916, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:09:52.1319", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:09:52.1319", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:52.1319", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 0.2749ms", "ElapsedMilliseconds": 0.2749, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:09:52.1886", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:09:52.1886", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:09:52.1886", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:52.1886", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:09:52.1886", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:09:52.1886", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:09:52.1886", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:09:52.1886", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:09:52.1886", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:52.2219", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:52.2219", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:09:52.2219", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 32.556ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 32.556, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:09:52.2219", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:09:52.2219", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 34.0880ms", "ElapsedMilliseconds": 34.088, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:09:52.2219", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:52.2298", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:09:52.2298", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:09:52.2298", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 40.4819ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 40.4819, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:09:52.2298", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:09:52.2298", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 41.9366ms", "ElapsedMilliseconds": 41.9366, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:10:41.0263", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:10:41.0263", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:10:41.0285", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:10:41.0285", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:10:41.0285", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 2.1713ms", "ElapsedMilliseconds": 2.1713, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:10:41.0285", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 2.3642ms", "ElapsedMilliseconds": 2.3642, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:10:41.0285", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:10:41.0285", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:10:41.0285", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:10:41.0285", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:10:41.0285", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:10:41.0285", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:10:41.0285", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:10:41.0285", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:10:41.0439", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:10:41.0439", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:10:41.0790", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:10:41.0790", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 38.0913ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 38.0913, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:10:41.0790", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:10:41.0790", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 38.7749ms", "ElapsedMilliseconds": 38.7749, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:10:41.0790", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:10:41.0790", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:10:41.0888", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:10:41.0888", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 47.9037ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 47.9037, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:10:41.0888", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:10:41.0888", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 48.6909ms", "ElapsedMilliseconds": 48.6909, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:10:47.0269", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:10:47.0269", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:10:47.0269", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:10:47.0269", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 2.3272ms", "ElapsedMilliseconds": 2.3272, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:10:47.0269", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:10:47.0269", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 5.8515ms", "ElapsedMilliseconds": 5.8515, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:10:47.0458", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:10:47.0458", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:10:47.0458", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:10:47.0458", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:10:47.0458", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:10:47.0458", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:10:47.0458", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:10:47.0458", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:10:47.0458", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:10:47.0458", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:10:47.0458", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 5.8586ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 5.8586, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:10:47.0458", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:10:47.0458", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:10:47.0458", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 7.3957ms", "ElapsedMilliseconds": 7.3957, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:10:47.0458", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:10:47.0581", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:10:47.0581", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:10:47.0581", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 11.6566ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 11.6566, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:10:47.0581", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:10:47.0581", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 12.3823ms", "ElapsedMilliseconds": 12.3823, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:10:50.0370", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:10:50.0370", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:10:50.0370", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:10:50.0370", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:10:50.0370", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:10:50.0370", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:10:50.0370", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:10:50.0370", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:10:50.0427", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:10:50.0427", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:10:50.0427", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:10:50.0427", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 3.4879ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 3.4879, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:10:50.0427", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:10:50.0427", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 6.8059ms", "ElapsedMilliseconds": 6.8059, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:10:50.0427", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:10:50.0427", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:10:50.0427", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:10:50.0427", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 8.4779ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 8.4779, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:10:50.0427", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:10:50.0427", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 12.4686ms", "ElapsedMilliseconds": 12.4686, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:10:54.0177", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:10:54.0177", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:10:54.0177", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 0.7310ms", "ElapsedMilliseconds": 0.731, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:10:54.0177", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:10:54.0177", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:10:54.0177", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 0.8611ms", "ElapsedMilliseconds": 0.8611, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:10:54.0177", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:10:54.0177", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:10:54.0177", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:10:54.0177", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:10:54.0177", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:10:54.0177", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:10:54.0177", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:10:54.0177", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:10:54.0177", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:10:54.0285", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:10:54.0285", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:10:54.0285", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 4.2852ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 4.2852, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:10:54.0285", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:10:54.0285", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 5.0638ms", "ElapsedMilliseconds": 5.0638, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:10:54.0285", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:10:54.0285", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:10:54.0285", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:10:54.0285", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 8.2371ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 8.2371, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:10:54.0285", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:10:54.0285", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 9.4814ms", "ElapsedMilliseconds": 9.4814, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:11:01.0314", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:11:01.0314", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:01.0314", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:11:01.0314", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 1.0798ms", "ElapsedMilliseconds": 1.0798, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:11:01.0314", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:01.0314", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 0.1241ms", "ElapsedMilliseconds": 0.1241, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:11:01.0314", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:11:01.0314", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:01.0314", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:11:01.0314", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:01.0314", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:11:01.0314", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:11:01.0314", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:11:01.0314", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:11:01.0314", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:01.0429", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:01.0429", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:11:01.0429", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 4.6893ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 4.6893, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:11:01.0429", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:11:01.0429", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 5.6479ms", "ElapsedMilliseconds": 5.6479, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:11:01.0429", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:01.0429", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:01.0429", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:11:01.0429", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 9.0791ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 9.0791, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:11:01.0429", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:11:01.0429", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 10.3760ms", "ElapsedMilliseconds": 10.376, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:11:11.0126", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:11:11.0126", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:11:11.0126", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:11.0126", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:11.0126", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 1.1300ms", "ElapsedMilliseconds": 1.13, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:11:11.0126", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 1.4024ms", "ElapsedMilliseconds": 1.4024, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:11:11.0126", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:11:11.0126", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:11.0126", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:11:11.0126", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:11.0126", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:11:11.0126", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:11:11.0126", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:11:11.0126", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:11:11.0126", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:11.0280", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:11:11.0556", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:11.0556", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 33.793ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 33.793, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:11:11.0556", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:11:11.0556", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 34.6383ms", "ElapsedMilliseconds": 34.6383, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:11:11.0556", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:11.0608", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:11.0608", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:11:11.0608", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 39.2224ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 39.2224, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:11:11.0608", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:11:11.0608", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 40.5457ms", "ElapsedMilliseconds": 40.5457, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:11:29.0128", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:11:29.0128", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:11:29.0138", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:29.0138", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:29.0138", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 1.2927ms", "ElapsedMilliseconds": 1.2927, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:11:29.0138", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 1.5747ms", "ElapsedMilliseconds": 1.5747, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:11:29.0138", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:11:29.0138", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:29.0138", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:11:29.0138", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:29.0138", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:11:29.0138", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:11:29.0138", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:11:29.0138", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:11:29.0288", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:29.0643", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:29.0643", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:11:29.0643", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 39.7769ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 39.7769, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:11:29.0643", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:11:29.0643", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 43.2745ms", "ElapsedMilliseconds": 43.2745, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:11:29.0643", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:29.0643", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:29.0643", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:11:29.0643", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 48.078ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 48.078, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:11:29.0643", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:11:29.0643", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 55.6292ms", "ElapsedMilliseconds": 55.6292, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:11:30.0104", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:11:30.0104", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:11:30.0104", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:30.0104", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:30.0104", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:11:30.0104", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:11:30.0104", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:11:30.0104", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:11:30.0104", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:30.0104", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:30.0104", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:11:30.0104", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 3.3099ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 3.3099, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:11:30.0104", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:11:30.0104", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 4.4372ms", "ElapsedMilliseconds": 4.4372, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:11:30.0104", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:30.0104", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:30.0104", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:11:30.0104", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 7.4921ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 7.4921, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:11:30.0104", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:11:30.0104", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 9.3594ms", "ElapsedMilliseconds": 9.3594, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:11:41.0180", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:11:41.0185", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:11:41.0185", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:41.0185", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:41.0185", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 1.1873ms", "ElapsedMilliseconds": 1.1873, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:11:41.0185", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 0.7137ms", "ElapsedMilliseconds": 0.7137, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:11:41.0185", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:11:41.0185", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:11:41.0185", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:41.0185", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:41.0185", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:11:41.0185", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:11:41.0185", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:11:41.0185", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:11:41.0185", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:41.0579", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:11:41.0579", "level": "INFO", "message": "Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "2", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:41.0579", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 31.8188ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 31.8188, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:11:41.0579", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:11:41.0579", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 32.8236ms", "ElapsedMilliseconds": 32.8236, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:11:41.0579", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:41.0579", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:41.0579", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:11:41.0579", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 39.7491ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 39.7491, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:11:41.0579", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:11:41.0579", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 41.0554ms", "ElapsedMilliseconds": 41.0554, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:11:52.0131", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:11:52.0131", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:11:52.0131", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:52.0131", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 1.1259ms", "ElapsedMilliseconds": 1.1259, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:11:52.0131", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:52.0131", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 1.2699ms", "ElapsedMilliseconds": 1.2699, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:11:52.0525", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:11:52.0525", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:52.0525", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:11:52.0525", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:11:52.0525", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:52.0525", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:11:52.0525", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:11:52.0525", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:11:52.0525", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:52.0525", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:52.0581", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:11:52.0581", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 4.7328ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 4.7328, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:11:52.0581", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:11:52.0581", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 5.1940ms", "ElapsedMilliseconds": 5.194, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:11:52.0581", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:52.0581", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:52.0581", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:11:52.0581", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 9.6206ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 9.6206, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:11:52.0581", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:11:52.0581", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 10.5107ms", "ElapsedMilliseconds": 10.5107, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:11:56.0279", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:11:56.0279", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:56.0279", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:11:56.0279", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:11:56.0279", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:56.0279", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:11:56.0279", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:11:56.0279", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:11:56.0279", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:11:56.0279", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:56.0279", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:56.0279", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:11:56.0279", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:11:56.0279", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:11:56.0279", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 10.1792ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 10.1792, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:11:56.0279", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:11:56.0279", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 5.4505ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 5.4505, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:11:56.0279", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:11:56.0279", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 11.5742ms", "ElapsedMilliseconds": 11.5742, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:11:56.0279", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 7.2627ms", "ElapsedMilliseconds": 7.2627, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:12:01.0182", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:12:01.0182", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:12:01.0191", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:12:01.0191", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:12:01.0191", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 204 - - 0.9806ms", "ElapsedMilliseconds": 0.9806, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:12:01.0191", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetUser - 204 - - 1.1403ms", "ElapsedMilliseconds": 1.1403, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:12:01.0191", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:12:01.0191", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 1 }
{ "time": "2024-04-03 16:12:01.0191", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:12:01.0191", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:12:01.0191", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:12:01.0191", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:12:01.0191", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetById\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:12:01.0191", "level": "INFO", "message": "Route matched with {action = \"GetById\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetById\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetById()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:12:01.0313", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:12:01.0313", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:12:01.0313", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetById.UserGetByIdResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetById.UserGetByIdResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:12:01.0313", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetById (Api) in 6.8369ms", "ActionName": "Api.Controllers.UserController.GetById (Api)", "ElapsedMilliseconds": 6.8369, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:12:01.0313", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:12:01.0313", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetUser - 200 - application/json;+charset=utf-8 7.8558ms", "ElapsedMilliseconds": 7.8558, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetUser", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:12:01.0313", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__LicensesId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__LicensesId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"Id\" = @__LicensesId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:12:01.0313", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__license_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__license_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__license_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:12:01.0313", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.Licenses.GetByIdLicenses.GetByIdLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:12:01.0313", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetById (Api) in 14.1056ms", "ActionName": "Api.Controllers.LicensesController.GetById (Api)", "ElapsedMilliseconds": 14.1056, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:12:01.0313", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetById (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetById (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:12:01.0313", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/GetByIdLicenses?LicensesId=1 - 200 - application/json;+charset=utf-8 15.0955ms", "ElapsedMilliseconds": 15.0955, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/GetByIdLicenses", "QueryString": "?LicensesId=1", "EventId": 2 }
{ "time": "2024-04-03 16:15:47.6923", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:15:47.6923", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:15:47.6923", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/Licenses/getLicenses - 204 - - 3.2053ms", "ElapsedMilliseconds": 3.2053, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:15:47.6992", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:15:47.6992", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:15:47.6992", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:15:47.6992", "level": "INFO", "message": "Route matched with {action = \"GetLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:15:47.7272", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:15:47.7272", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:15:47.7313", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:15:47.7313", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:15:47.7313", "level": "INFO", "message": "Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "3", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:15:47.7313", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:15:47.7313", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:15:47.7313", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:15:47.7458", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "1", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:15:47.7458", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__item_ProductId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "elapsed": "0", "parameters": "@__item_ProductId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT p.\"Id\", p.\"ProductName\"\r\nFROM \"Product\" AS p\r\nWHERE p.\"Id\" = @__item_ProductId_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:15:47.7458", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nUPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "elapsed": "0", "parameters": "@p6='?' (DbType = Int32), @p0='?' (DbType = Date), @p1='?' (DbType = Date), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "UPDATE \"Licenses\" SET \"ActivationDate\" = @p0, \"ExpireDate\" = @p1, \"LicenseStatus\" = @p2, \"ProductId\" = @p3, \"UserCount\" = @p4, \"UserId\" = @p5\r\nWHERE \"Id\" = @p6;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:15:47.7458", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetById.GetLicensesResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:15:47.7458", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetLicenses (Api) in 48.309ms", "ActionName": "Api.Controllers.LicensesController.GetLicenses (Api)", "ElapsedMilliseconds": 48.309, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:15:47.7458", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:15:47.7458", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/Licenses/getLicenses - 200 - application/json;+charset=utf-8 51.3314ms", "ElapsedMilliseconds": 51.3314, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/Licenses/getLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:15:53.0550", "level": "INFO", "message": "Request starting HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "OPTIONS", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:15:53.0550", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:15:53.0550", "level": "INFO", "message": "Request finished HTTP/1.1 OPTIONS http://192.168.0.104:5274/api/User/GetLicenses - 204 - - 1.6192ms", "ElapsedMilliseconds": 1.6192, "StatusCode": 204, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "OPTIONS", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:15:53.0665", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:15:53.0665", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:15:53.0665", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:15:53.0665", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:15:53.0665", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:15:53.0753", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:15:53.0753", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:15:53.0753", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 9.0681ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 9.0681, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:15:53.0753", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:15:53.0753", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 200 - application/json;+charset=utf-8 9.6360ms", "ElapsedMilliseconds": 9.636, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:15:55.5796", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:15:55.5796", "level": "INFO", "message": "CORS policy execution successful.", "EventId": 4, "EventName": "PolicySuccess" }
{ "time": "2024-04-03 16:15:55.5796", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:15:55.5796", "level": "INFO", "message": "Route matched with {action = \"GetByIdLicenses\", controller = \"User\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses() on controller Api.Controllers.UserController (Api).", "RouteData": "{action = \"GetByIdLicenses\", controller = \"User\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetByIdLicenses()", "Controller": "Api.Controllers.UserController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:15:55.5796", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "elapsed": "1", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u\r\nWHERE u.\"Id\" = @__id_0\r\nLIMIT 1", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:15:55.5796", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "elapsed": "0", "parameters": "@__id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nWHERE l.\"UserId\" = @__id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:15:55.5796", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto'.", "ObjectResultType": "OkObjectResult", "Type": "Models.DTOs.User.GetLicenses.UserGetLicensesResponseDto", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:15:55.5796", "level": "INFO", "message": "Executed action Api.Controllers.UserController.GetByIdLicenses (Api) in 7.9794ms", "ActionName": "Api.Controllers.UserController.GetByIdLicenses (Api)", "ElapsedMilliseconds": 7.9794, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:15:55.5796", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.UserController.GetByIdLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.UserController.GetByIdLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:15:55.5894", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://192.168.0.104:5274/api/User/GetLicenses - 200 - application/json;+charset=utf-8 9.7889ms", "ElapsedMilliseconds": 9.7889, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "192.168.0.104:5274", "PathBase": "", "Path": "/api/User/GetLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:39:21.3473", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 16:39:21.5558", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 16:39:21.5601", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 16:39:21.5601", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 16:39:21.5601", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 16:39:22.6395", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:39:22.7974", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 16:39:22.8982", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 265.7289ms", "ElapsedMilliseconds": 265.7289, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:39:22.8982", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:39:22.9036", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 2.7002ms", "ElapsedMilliseconds": 2.7002, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:39:22.9036", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:39:22.9385", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 32.4629ms", "ElapsedMilliseconds": 32.4629, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:39:22.9937", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:39:23.2346", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 240.8839ms", "ElapsedMilliseconds": 240.8839, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:39:27.4659", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/GetAllLicenses - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/GetAllLicenses", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:39:27.5436", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:39:27.5664", "level": "INFO", "message": "Route matched with {action = \"GetAllLicenses\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses() on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetAllLicenses\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult GetAllLicenses()", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:39:29.0258", "level": "INFO", "message": "Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"", "elapsed": "18", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"ActivationDate\", l.\"UserCount\", l.\"ExpireDate\", l.\"LicenseStatus\", u.\"Email\"\r\nFROM \"Licenses\" AS l\r\nINNER JOIN \"User\" AS u ON l.\"UserId\" = u.\"Id\"", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:39:29.0953", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:39:29.1127", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetAllLicenses (Api) in 1541.7634ms", "ActionName": "Api.Controllers.LicensesController.GetAllLicenses (Api)", "ElapsedMilliseconds": 1541.7634, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:39:29.1127", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetAllLicenses (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetAllLicenses (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:39:29.1272", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/GetAllLicenses - 200 - application/json;+charset=utf-8 1661.2440ms", "ElapsedMilliseconds": 1661.244, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/GetAllLicenses", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:49:19.5181", "level": "INFO", "message": "User profile is available. Using 'C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "FullName": "C:\\Users\\HP\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" }
{ "time": "2024-04-03 16:49:19.7094", "level": "INFO", "message": "Now listening on: http://0.0.0.0:5274", "address": "http://0.0.0.0:5274", "EventId": 14, "EventName": "ListeningOnAddress" }
{ "time": "2024-04-03 16:49:19.7094", "level": "INFO", "message": "Application started. Press Ctrl+C to shut down." }
{ "time": "2024-04-03 16:49:19.7146", "level": "INFO", "message": "Hosting environment: Development", "EnvName": "Development" }
{ "time": "2024-04-03 16:49:19.7146", "level": "INFO", "message": "Content root path: C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api", "ContentRoot": "C:\\Users\\HP\\Desktop\\PorjectLicenses\\src\\Api" }
{ "time": "2024-04-03 16:49:20.6164", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/index.html - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:49:20.7415", "level": "WARN", "message": "Failed to determine the https port for redirect.", "EventId": 3, "EventName": "FailedToDeterminePort" }
{ "time": "2024-04-03 16:49:20.8392", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/index.html - 200 - text/html;charset=utf-8 224.1453ms", "ElapsedMilliseconds": 224.1453, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:49:20.8392", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:49:20.8392", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_framework/aspnetcore-browser-refresh.js - 200 13742 application/javascript;+charset=utf-8 3.1560ms", "ElapsedMilliseconds": 3.156, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 13742, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:49:20.8392", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/_vs/browserLink - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:49:20.8853", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 37.9076ms", "ElapsedMilliseconds": 37.9076, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:49:20.9373", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 }
{ "time": "2024-04-03 16:49:21.0688", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/swagger/v1/swagger.json - 200 - application/json;charset=utf-8 131.8008ms", "ElapsedMilliseconds": 131.8008, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 }
{ "time": "2024-04-03 16:49:32.0382", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationTicket?PageNumber=1&PageSize=3 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=3", "EventId": 1 }
{ "time": "2024-04-03 16:49:32.1057", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:49:32.1350", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:49:33.4312", "level": "INFO", "message": "Executed DbCommand (25ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "25", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:49:33.4968", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-03 16:49:33.4968", "level": "WARN", "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" }
{ "time": "2024-04-03 16:49:33.5536", "level": "INFO", "message": "Executed DbCommand (10ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "10", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:49:33.6488", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:49:33.6488", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "0", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:49:33.6652", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:49:33.7568", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:49:33.7656", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:49:33.7798", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 1639.702ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 1639.702, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:49:33.7798", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:49:33.7931", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationTicket?PageNumber=1&PageSize=3 - 200 - application/json;+charset=utf-8 1754.8433ms", "ElapsedMilliseconds": 1754.8433, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=3", "EventId": 2 }
{ "time": "2024-04-03 16:49:46.8918", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationTicket?PageNumber=1&PageSize=5 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 1 }
{ "time": "2024-04-03 16:49:46.8918", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:49:46.9027", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:49:46.9732", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:49:46.9732", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:49:46.9803", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:49:46.9803", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "0", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:49:46.9803", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:49:46.9803", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:49:46.9803", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:49:46.9803", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 89.8979ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 89.8979, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:49:46.9803", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:49:46.9803", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationTicket?PageNumber=1&PageSize=5 - 200 - application/json;+charset=utf-8 101.5331ms", "ElapsedMilliseconds": 101.5331, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 2 }
{ "time": "2024-04-03 16:50:04.6859", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationTicket?PageNumber=1&PageSize=5 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 1 }
{ "time": "2024-04-03 16:50:04.6859", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:50:04.6859", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:50:16.1398", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:50:16.1398", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:50:17.2500", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:50:17.2500", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "0", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:50:17.2500", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:50:17.2881", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:50:22.9891", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:50:22.9891", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 18300.6548ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 18300.6548, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:50:22.9891", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:50:24.2408", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationTicket?PageNumber=1&PageSize=5 - 200 - application/json;+charset=utf-8 19554.8814ms", "ElapsedMilliseconds": 19554.8814, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 2 }
{ "time": "2024-04-03 16:50:26.1490", "level": "INFO", "message": "Request starting HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationTicket?PageNumber=1&PageSize=5 - - -", "Protocol": "HTTP/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 1 }
{ "time": "2024-04-03 16:50:26.1490", "level": "INFO", "message": "Executing endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} }
{ "time": "2024-04-03 16:50:26.1490", "level": "INFO", "message": "Route matched with {action = \"GetProductPagingData\", controller = \"Licenses\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters) on controller Api.Controllers.LicensesController (Api).", "RouteData": "{action = \"GetProductPagingData\", controller = \"Licenses\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[Models.DTOs.Product.GetAll.ProductGetAllResponseDto]] GetProductPagingData(Models.DTOs.PagedParameters)", "Controller": "Api.Controllers.LicensesController", "AssemblyName": "Api", "EventId": 102, "EventName": "ControllerActionExecuting" }
{ "time": "2024-04-03 16:50:41.6375", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:50:42.2437", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "1", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:51:21.8581", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT count(*)::int\r\nFROM \"Licenses\" AS l", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT count(*)::int\r\nFROM \"Licenses\" AS l", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:51:22.1154", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "elapsed": "0", "parameters": "@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT l.\"Id\", l.\"ActivationDate\", l.\"ExpireDate\", l.\"LicenseStatus\", l.\"ProductId\", l.\"UserCount\", l.\"UserId\"\r\nFROM \"Licenses\" AS l\r\nLIMIT @__p_1 OFFSET @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:51:29.3839", "level": "INFO", "message": "Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:51:39.6887", "level": "INFO", "message": "Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "elapsed": "1", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT u.\"Id\", u.\"CompanyName\", u.\"Email\", u.\"FirstName\", u.\"LastName\", u.\"Password\", u.\"PhoneNumber\", u.\"RefreshToken\", u.\"RolesId\", u.\"Status\"\r\nFROM \"User\" AS u", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }
{ "time": "2024-04-03 16:51:39.6887", "level": "INFO", "message": "Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "ObjectResultType": "OkObjectResult", "Type": "System.Collections.Generic.List`1[[Models.DTOs.Licenses.GetAll.LicensesGetAllResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" }
{ "time": "2024-04-03 16:51:39.6887", "level": "INFO", "message": "Executed action Api.Controllers.LicensesController.GetProductPagingData (Api) in 73540.1465ms", "ActionName": "Api.Controllers.LicensesController.GetProductPagingData (Api)", "ElapsedMilliseconds": 73540.1465, "EventId": 105, "EventName": "ActionExecuted" }
{ "time": "2024-04-03 16:51:39.6887", "level": "INFO", "message": "Executed endpoint 'Api.Controllers.LicensesController.GetProductPagingData (Api)'", "EndpointName": {"Order":0, "RoutePattern":"Microsoft.AspNetCore.Routing.Patterns.RoutePattern", "DisplayName":"Api.Controllers.LicensesController.GetProductPagingData (Api)", "Metadata":[], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" }
{ "time": "2024-04-03 16:51:39.6887", "level": "INFO", "message": "Request finished HTTP/1.1 GET http://localhost:5274/api/Licenses/PaginationTicket?PageNumber=1&PageSize=5 - 200 - application/json;+charset=utf-8 73541.4446ms", "ElapsedMilliseconds": 73541.4446, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/1.1", "Method": "GET", "Scheme": "http", "Host": "localhost:5274", "PathBase": "", "Path": "/api/Licenses/PaginationTicket", "QueryString": "?PageNumber=1&PageSize=5", "EventId": 2 }
